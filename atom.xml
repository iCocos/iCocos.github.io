<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>iCocos</title>
  
  <subtitle>www.icocos.cn</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://icocos.github.io/"/>
  <updated>2019-03-02T08:07:22.256Z</updated>
  <id>https://icocos.github.io/</id>
  
  <author>
    <name>曹理鹏@iCocos</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP拓展篇——Composer实战操作指南</title>
    <link href="https://icocos.github.io/2019/03/02/PHP%E6%8B%93%E5%B1%95%E7%AF%87%E2%80%94%E2%80%94Composer%E5%AE%9E%E6%88%98%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/"/>
    <id>https://icocos.github.io/2019/03/02/PHP拓展篇——Composer实战操作指南/</id>
    <published>2019-03-02T08:04:26.000Z</published>
    <updated>2019-03-02T08:07:22.256Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Composer是什么"><a href="#Composer是什么" class="headerlink" title="Composer是什么"></a>Composer是什么</h2><p>玩过Linux或者玩过编程的应该都知道，yum、apt-get、npm、bower等命令，composer其实和上面是一样的，只是composer专门给PHP用。</p><ul><li>就像iOS中的Pods，Carthage，Android中的gradle<ul><li>pod = cocoapods  编译成静态链接库或者动态框架文件，会修改Xcode项目属性配置依赖关系</li><li>Carthage 去中心化(无中心库), 非侵入性：动态框架，不会修改Xcode项目属性配置依赖关系</li><li>gradle(JCenter，mavenCenter，JitPack)。Gradle是一个基于Apache Ant和Apache Maven概念的项目自动化构建开源工具。它使用一种基于Groovy的特定领域语言(DSL)来声明项目设置，抛弃了基于XML的各种繁琐配置。面向Java应用为主。</li></ul></li></ul><a id="more"></a><h5 id="而Composer-是-PHP5-3以上-的一个依赖管理工具。它允许你声明项目所依赖的代码库，它会在你的项目中为你快速安装他们。涉及-“packages”-和-“libraries”。"><a href="#而Composer-是-PHP5-3以上-的一个依赖管理工具。它允许你声明项目所依赖的代码库，它会在你的项目中为你快速安装他们。涉及-“packages”-和-“libraries”。" class="headerlink" title="而Composer 是 PHP5.3以上 的一个依赖管理工具。它允许你声明项目所依赖的代码库，它会在你的项目中为你快速安装他们。涉及 “packages” 和 “libraries”。"></a>而Composer 是 PHP5.3以上 的一个依赖管理工具。它允许你声明项目所依赖的代码库，它会在你的项目中为你快速安装他们。涉及 “packages” 和 “libraries”。</h5><p>平时我们安装一个PHP类库，需要搜索-&gt;下载；使用composer，我们只要知道包名，直接composer insatll就可以了。</p><blockquote><p>Composer 也只是一段 PHP 脚本，用官方的话说就是：</p></blockquote><pre><code>是 PHP 用来管理依赖（dependency）关系的工具。你可以在自己的项目中声明所依赖的外部工具库（libraries），Composer 会帮你安装这些依赖的库文件。</code></pre><h2 id="Composer用途"><a href="#Composer用途" class="headerlink" title="Composer用途"></a>Composer用途</h2><blockquote><p>安装PHP包、依赖库。</p></blockquote><p>通过过composer，我们可以使用大量的第三方库，而无需自己造轮子</p><h5 id="比如"><a href="#比如" class="headerlink" title="比如"></a>比如</h5><ul><li><p>monolog</p><ul><li>$ composer require monolog/monolog</li></ul></li><li><p>laravel</p><ul><li>$ composer create-project laravel/laravel learnlaravel5 5.0.22</li></ul></li><li><p>thinkphp5：然后在命令行下面，切换到你的web根目录下面并执行下面的命令：</p><ul><li>$ composer create-project topthink/think=5.0.* tp5  –prefer-dist</li></ul></li></ul><p>你可以在 <a href="https://packagist.org/" target="_blank" rel="noopener">https://packagist.org/</a> 找到你需要的库。甚至你可以提交自己写的优秀的库到该平台里供大家使用。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>废话不多说，直接上代码</p><h5 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h5><blockquote><p>curl -sS <a href="https://getcomposer.org/installer" target="_blank" rel="noopener">https://getcomposer.org/installer</a> | php</p></blockquote><h5 id="全局"><a href="#全局" class="headerlink" title="全局"></a>全局</h5><blockquote><p>mv composer.phar /usr/local/bin/composer</p></blockquote><p>之后，就可以直接使用composer install安装包了。不过通常情况下只需将composer.phar的位置加入到PATH就可以，不一定要全局安装。</p><h5 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h5><blockquote><p>composer config -g repo.packagist composer <a href="https://packagist.phpcomposer.com" target="_blank" rel="noopener">https://packagist.phpcomposer.com</a></p></blockquote><ul><li>常见镜像地址：<ul><li><a href="https://packagist.org" target="_blank" rel="noopener">https://packagist.org</a> 国外的</li><li><a href="http://packagist.phpcomposer.com" target="_blank" rel="noopener">http://packagist.phpcomposer.com</a> 中国全量镜像</li><li><a href="https://pkg.phpcomposer.com/" target="_blank" rel="noopener">https://pkg.phpcomposer.com/</a></li><li><a href="https://www.phpcomposer.com/" target="_blank" rel="noopener">https://www.phpcomposer.com/</a></li></ul></li></ul><h5 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h5><blockquote><p>composer self-update</p></blockquote><p>操作执行结束，会在当前目录下生成composer.phar文件，在Linux里，composer.phar是可执行程序。</p><p>例如，我们可以使用php composer.phar update执行更新操作。</p><p>全局安装：</p><p>mv composer.phar /usr/local/bin/composer</p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><h5 id="composer"><a href="#composer" class="headerlink" title="composer"></a>composer</h5><pre><code>[parallels@centos-7 html]$ composer                                           ______                                                                    / ____/___  ____ ___  ____  ____  ________  _____                         / /   / __ \/ __ `__ \/ __ \/ __ \/ ___/ _ \/ ___/                        / /___/ /_/ / / / / / / /_/ / /_/ (__  )  __/ /                            \____/\____/_/ /_/ /_/ .___/\____/____/\___/_/                                                 /_/                                                    Composer version 1.8.4 2019-02-11 10:52:10                                 Usage:                                                                       command [options] [arguments]                                            Options:     ...</code></pre><h5 id="version"><a href="#version" class="headerlink" title="version"></a>version</h5><pre><code>[parallels@centos-7 html]$ composer -VComposer version 1.8.4 2019-02-11 10:52:10</code></pre><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h5 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h5><p>在自己想要创建项目的地方新建一个文件夹，命名为 ComposerP1，在文件夹下新建文件 </p><pre><code>composer.json：{  &quot;require&quot;: {  }}</code></pre><p>命令行切换到 ComposerP1 目录下，运行：</p><pre><code>composer update</code></pre><p>就会在该目录下生成一个vendor文件夹。以后所有的第三扩展包都会安装在这里。</p><h5 id="安装扩展包"><a href="#安装扩展包" class="headerlink" title="安装扩展包"></a>安装扩展包</h5><p>在项目目录下创建一个composer.json文件，指明依赖，比如，你的项目依赖 monolog：</p><pre><code>{    &quot;require&quot;: {        &quot;monolog/monolog&quot;: &quot;1.2.*&quot;    },    &quot;config&quot;: { // 解决有时候因为https造成的问题        &quot;secure-http&quot;: false    }}</code></pre><h5 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h5><p>安装依赖非常简单，只需在项目目录下运行：</p><blockquote><p>composer install</p></blockquote><p>如果没有全局安装的话，则运行：</p><blockquote><p>php composer.phar install</p></blockquote><p>更新全部的包（谨慎使用）：</p><blockquote><p>composer update</p></blockquote><h5 id="注意：使用composer-install或者composer-update命令将会更新所有的扩展包，项目中使用需谨慎！！！"><a href="#注意：使用composer-install或者composer-update命令将会更新所有的扩展包，项目中使用需谨慎！！！" class="headerlink" title="注意：使用composer install或者composer update命令将会更新所有的扩展包，项目中使用需谨慎！！！"></a>注意：使用composer install或者composer update命令将会更新所有的扩展包，项目中使用需谨慎！！！</h5><p>若只安装指定的包推荐在命令行使用一下命名进行安装。</p><blockquote><p>composer require monolog/monolog</p></blockquote><p>如果需要指定版本：</p><blockquote><p>composer require “monolog/monolog:1.2.*”</p></blockquote><p>更新某个包：</p><blockquote><p>composer update monolog/monolog</p></blockquote><p>移除某个包：</p><blockquote><p>composer remove monolog/monolog</p></blockquote><p>如果手动更新了composer.json需要更新autoload：</p><blockquote><p>composer dump-autoload</p></blockquote><h4 id="命令汇总"><a href="#命令汇总" class="headerlink" title="命令汇总"></a>命令汇总</h4><ul><li>composer list  列出所有可用的命令</li><li>composer init   初始化composer.json文件(就不劳我们自己费力创建啦)，会要求输入一些信息来描述我们当前的项目，还会要求输入依赖包</li><li>composer install  读取composer.json内容，解析依赖关系，安装依赖包到vendor目录下</li><li>composer update   更新最新的依赖关系到compsoer.lock文件，解析最新的依赖关系并且写入* composer.lock文件</li><li>composer search packagename 搜索包，packagename替换为你想查找的包名称</li><li>composer require packagename 添加对packagename的依赖，packagename可修改为你想要的包名称</li><li>composer show packagename</li><li>composer self-update 更新 composer.phar文件自身</li><li>composer dump-autoload –optimize 优化一下自动加载</li><li>composer command –help 以上所有命令都可以添加 –help选项查看帮助信息</li></ul>]]></content>
    
    <summary type="html">
    
      Composer是PHP 用来管理依赖（dependency）关系的工具。你可以在自己的项目中声明所依赖的外部工具库（libraries），Composer 会帮你安装这些依赖的库文件.....
    
    </summary>
    
      <category term="PHP" scheme="https://icocos.github.io/categories/PHP/"/>
    
    
      <category term="Composer" scheme="https://icocos.github.io/tags/Composer/"/>
    
      <category term="依赖管理" scheme="https://icocos.github.io/tags/%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Tp5入门——路由入门与实战</title>
    <link href="https://icocos.github.io/2019/01/15/Tp5%E5%85%A5%E9%97%A8%E2%80%94%E2%80%94%E8%B7%AF%E7%94%B1%E5%85%A5%E9%97%A8%E4%B8%8E%E5%AE%9E%E6%88%98/"/>
    <id>https://icocos.github.io/2019/01/15/Tp5入门——路由入门与实战/</id>
    <published>2019-01-14T16:57:27.000Z</published>
    <updated>2019-03-17T14:28:24.856Z</updated>
    
    <content type="html"><![CDATA[<h3 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h3><blockquote><p>官方文档里面是这样子定义的=&gt;路由的作用是简化URL访问地址，并根据定义的路由类型做出正确的解析。</p></blockquote><ul><li>手动解释一下：<ul><li>平常我们按照习惯去访问我们的ThinkPHP项目的时候，常规的url应该是这样子写的，（本地举例）<a href="http://localhost/项目名/public/index.php/模块名/控制器名/方法名" target="_blank" rel="noopener">http://localhost/项目名/public/index.php/模块名/控制器名/方法名</a></li></ul></li></ul><a id="more"></a><blockquote><p>一串url输进去之后，就会感觉很绝望，（小声吐槽）=&gt;“我只是想测试一个小接口让我打这么长一串地址、地址太长记不住呀……”。这个时候我们就可以用路由去简化他的地址，并且在缩短地址的同时进行一些规则的定义。</p></blockquote><ul><li>路由的作用：<ol><li>简化URL地址，方便大家记忆</li><li>有利于搜索引擎的优化，比如可以被百度的爬虫抓取到</li></ol></li></ul><ul><li>路由的三种模式：<ol><li>普通模式 :完全使用PASH_INFO来访问，比如<a href="http://www.yd.com/index.php/index/index，域名+模块+控制器" target="_blank" rel="noopener">http://www.yd.com/index.php/index/index，域名+模块+控制器</a></li><li>混合模式 ：可以使用路由也可以不使用</li><li>强制模式 ：必须使用路由</li></ol></li></ul><blockquote><p>注意：路由只针对应用，不针对模块，如果有些模块不像使用路由，需要在配置文件中关闭路由</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//关闭admin模块的路由，必须写到加载框架引导文件之后</span><br><span class="line">\think\App::route(<span class="literal">false</span>);</span><br></pre></td></tr></table></figure><h4 id="1-普通模式：完全使用PASH-INFO来访问"><a href="#1-普通模式：完全使用PASH-INFO来访问" class="headerlink" title="1.普通模式：完全使用PASH_INFO来访问"></a>1.普通模式：完全使用PASH_INFO来访问</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 是否开启路由</span><br><span class="line"><span class="string">'url_route_on'</span>           =&gt; <span class="literal">false</span>,</span><br><span class="line">// 是否强制使用路由</span><br><span class="line"><span class="string">'url_route_must'</span>         =&gt; <span class="literal">false</span>,</span><br></pre></td></tr></table></figure><h4 id="2-混合模式"><a href="#2-混合模式" class="headerlink" title="2.混合模式"></a>2.混合模式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 是否开启路由</span><br><span class="line"><span class="string">'url_route_on'</span>           =&gt; <span class="literal">true</span>,</span><br><span class="line">// 是否强制使用路由</span><br><span class="line"><span class="string">'url_route_must'</span>         =&gt; <span class="literal">false</span>,</span><br></pre></td></tr></table></figure><h4 id="3-强制模式"><a href="#3-强制模式" class="headerlink" title="3.强制模式"></a>3.强制模式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 是否开启路由</span><br><span class="line"><span class="string">'url_route_on'</span>           =&gt; <span class="literal">true</span>,</span><br><span class="line">// 是否强制使用路由</span><br><span class="line"><span class="string">'url_route_must'</span>         =&gt; <span class="literal">false</span>,</span><br></pre></td></tr></table></figure><h3 id="设置路由："><a href="#设置路由：" class="headerlink" title="设置路由："></a>设置路由：</h3><p>一下直接修改application下的route.php</p><h4 id="1-单个注册"><a href="#1-单个注册" class="headerlink" title="1.单个注册"></a>1.单个注册</h4><blockquote><p>在application下的route.php文件内更改</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use think\Route;                        //引入Route           </span><br><span class="line">Route::rule(<span class="string">'test'</span>,<span class="string">'index/index/test'</span>);  //当URL访问http://com.test.php:8888/<span class="built_in">test</span>时，访问的是index模块下的index下的控制器下的<span class="built_in">test</span>方法</span><br></pre></td></tr></table></figure><h5 id="路由形式："><a href="#路由形式：" class="headerlink" title="路由形式："></a>路由形式：</h5><ol><li>静态路由：<br>Route::rule(‘/’,’index/index/index’);<br>Route::rule(‘test’,’index/index/test’);</li><li>带参数的路由： Route::rule(‘time/:time’,’index/User/getTime’);<br><a href="http://com.test.php:8888/getTime/123456" target="_blank" rel="noopener">http://com.test.php:8888/getTime/123456</a></li><li>可选参数的路由： Route::rule(‘time/[:time]/[:???]’,’index/User/getTime’);<br><a href="http://com.test.php:8888/getTime" target="_blank" rel="noopener">http://com.test.php:8888/getTime</a><br><a href="http://com.test.php:8888/getTime/123456" target="_blank" rel="noopener">http://com.test.php:8888/getTime/123456</a></li><li>全动态路由(不推荐)： Route::rule(‘:X/:Y’,’index/User/getXY’);<br><a href="http://com.test.php:8888/11/22" target="_blank" rel="noopener">http://com.test.php:8888/11/22</a></li><li>完全匹配：Route::rule(‘rout$’=&gt;’index/User/getRout’);<br>不加$符号，我们字comp后面加多少路径，比如<a href="http://com.test.php:8888/comp/asd/dfds/wer/ewr，页面都能输出" target="_blank" rel="noopener">http://com.test.php:8888/comp/asd/dfds/wer/ewr，页面都能输出</a> 我是完全匹配路由 Route::rule(‘rout’,’index/User/getRout’);<br>加上$符号，我们在comp后面加多少路径，比如<a href="http://com.test.php:8888/comp/comp/asd/dfds/wer/ewr，页面不能输出方法的内容" target="_blank" rel="noopener">http://com.test.php:8888/comp/comp/asd/dfds/wer/ewr，页面不能输出方法的内容</a></li><li>额外参数：Route::rule(‘test’,’index/index/test?id=1&amp;name=icocos’);</li></ol><h4 id="2-批量注册"><a href="#2-批量注册" class="headerlink" title="2.批量注册"></a>2.批量注册</h4><ul><li>rule方式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::rule([ <span class="string">"test"</span>=&gt;<span class="string">"index/index/test"</span>, <span class="string">'time/:time'</span>=&gt;<span class="string">'index/User/getTime'</span> ],<span class="string">''</span>,<span class="string">'get'</span>); //post,put,delete</span><br></pre></td></tr></table></figure><ul><li>get方式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::get([ <span class="string">"test"</span>=&gt;<span class="string">"index/index/test"</span>, <span class="string">'time/:time'</span>=&gt;<span class="string">'index/User/getTime'</span> ]); //post,put,delete</span><br></pre></td></tr></table></figure><h4 id="3-配置文件注册"><a href="#3-配置文件注册" class="headerlink" title="3.配置文件注册"></a>3.配置文件注册</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">return</span>[ <span class="string">"test"</span>=&gt;<span class="string">"index/index/test"</span>, <span class="string">'time/:time'</span>=&gt;<span class="string">'index/User/getTime'</span>];</span><br></pre></td></tr></table></figure><h3 id="路由的请求方式"><a href="#路由的请求方式" class="headerlink" title="路由的请求方式"></a>路由的请求方式</h3><p>一般请求方式有八种，但是TP里面有四种请求方式(GET，POST，PUT，DELETE)，其中GET，POST是最常用的，如果我们不指定请求类型，默认是*，所有的请求类型</p><ul><li>支持get</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Route::rule(<span class="string">'rtype'</span>,<span class="string">'index/User/getRType'</span>,<span class="string">'get'</span>);</span><br><span class="line">Route::get(<span class="string">'rtype'</span>,<span class="string">'index/User/getRType'</span>);</span><br></pre></td></tr></table></figure><ul><li>支持post</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::post(<span class="string">'rtype'</span>,<span class="string">'index/User/getRType'</span>);</span><br></pre></td></tr></table></figure><ul><li>既支持get有支持post</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::rule(<span class="string">'rtype'</span>,<span class="string">'index/User/getRType'</span>,<span class="string">'get|post'</span>);</span><br></pre></td></tr></table></figure><ul><li>支持全部请求方式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Route::any(<span class="string">'rtype'</span>,<span class="string">'index/User/getRType'</span>);</span><br><span class="line">Route::rule(<span class="string">'rtype'</span>,<span class="string">'index/User/getRType'</span>,<span class="string">'*'</span>);</span><br></pre></td></tr></table></figure><h4 id="模拟PUT，DELETE"><a href="#模拟PUT，DELETE" class="headerlink" title="模拟PUT，DELETE"></a>模拟PUT，DELETE</h4><ul><li>支持put请求</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Route::put(<span class="string">'rtype'</span>,<span class="string">'index/User/getRType'</span>);</span><br><span class="line">Route::rule(<span class="string">'rtype'</span>,<span class="string">'index/User/getRType'</span>,<span class="string">'put'</span>);</span><br></pre></td></tr></table></figure><ul><li>支持put请求</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Route::delete(<span class="string">'rtype'</span>,<span class="string">'index/User/getRType'</span>);</span><br><span class="line">Route::rule(<span class="string">'rtype'</span>,<span class="string">'index/User/getRType'</span>,<span class="string">'delete'</span>);</span><br></pre></td></tr></table></figure><h3 id="变量规则"><a href="#变量规则" class="headerlink" title="变量规则"></a>变量规则</h3><ul><li>Route::rule()；的最后一个参数，是一个数组，可以指定多个参数，用正则表达式来写，用来规范传入的参数必须是什么数据类型，或者必须是那些数据等等，比如</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::rule(<span class="string">'getid/:id'</span>,<span class="string">'index/User/getId'</span>,<span class="string">'get'</span>,[],[<span class="string">'id'</span>=&gt;<span class="string">'\d'</span>]);  //最后一个参数，表示id传参数必须是数字</span><br></pre></td></tr></table></figure><h4 id="路由参数"><a href="#路由参数" class="headerlink" title="路由参数"></a>路由参数</h4><ul><li>Route::rule()；的倒数第二个参数，是一个数组，可以用来指定请求的数据类型，也可以用来规定请求的URL后缀，比如</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Route::rule(<span class="string">'getid/:id'</span>,<span class="string">'index/User/getId'</span>,<span class="string">'get'</span>,[<span class="string">'method'</span>=&gt;<span class="string">'get'</span>,<span class="string">'ext'</span>=&gt;<span class="string">'html'</span>],[<span class="string">'id'</span>=&gt;<span class="string">'\d'</span>]);</span><br><span class="line">//请求方式必须是get,请求的后缀必须是html,访问的url为http://www.yd.com/getid/9.html，不带html后缀就请求失败</span><br></pre></td></tr></table></figure><h4 id="资源路由"><a href="#资源路由" class="headerlink" title="资源路由"></a>资源路由</h4><p>你的后台模块可能会有增删改查等操作，但是一个一个写太费劲，资源路由自动帮你生这些路由，你只需要在控制器内写这些方法，</p><p>设置后会自动注册7个路由规则，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">标识    请求类型    生成路由规则    对应操作方法（默认）</span><br><span class="line">index    GET    blog    index</span><br><span class="line">create    GET    blog/create    create</span><br><span class="line">save    POST    blog    save</span><br><span class="line"><span class="built_in">read</span>    GET    blog/:id    <span class="built_in">read</span></span><br><span class="line">edit    GET    blog/:id/edit    edit</span><br><span class="line">update    PUT    blog/:id    update</span><br><span class="line">delete    DELETE    blog/:id    delete</span><br></pre></td></tr></table></figure><h5 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//先创建block</span><br><span class="line">namespace app\index\controller;</span><br><span class="line">class Block</span><br><span class="line">&#123;</span><br><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">index</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'我是前台模块下的block'</span>;</span><br><span class="line">&#125;</span><br><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">create</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'我是前台模块下的block的create方法'</span>;</span><br><span class="line">&#125;</span><br><span class="line">public <span class="keyword">function</span> <span class="built_in">read</span>(<span class="variable">$id</span>)&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$id</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//然后在route.php下写上资源路由</span><br><span class="line">Route::resource(<span class="string">'block'</span>,<span class="string">'index/Block'</span>);</span><br></pre></td></tr></table></figure><h5 id="效果："><a href="#效果：" class="headerlink" title="效果："></a>效果：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//当你访问http://com.test.php:8888/block         URL访问的是index方法</span><br><span class="line">//当你访问http://com.test.php:8888/block/15      URL访问的是<span class="built_in">read</span>方法</span><br><span class="line">//当你访问http://com.test.php:8888/block/create   URL访问的是create方法</span><br></pre></td></tr></table></figure><h4 id="快捷路由"><a href="#快捷路由" class="headerlink" title="快捷路由"></a>快捷路由</h4><p>在index模块下创建一个Fastroute控制器，里面写下如下例子，除了index，其他方法都要加上get</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">namespace app\index\controller;</span><br><span class="line">class Fastroute</span><br><span class="line">&#123;</span><br><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">index</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'我是Fast路由的index'</span>;</span><br><span class="line">&#125;</span><br><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">getAA</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"我是getAA"</span>;</span><br><span class="line">&#125;</span><br><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">getBB</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"我是BB"</span>;</span><br><span class="line">&#125;</span><br><span class="line">public <span class="keyword">function</span> postInfo()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public <span class="keyword">function</span> putInfo()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public <span class="keyword">function</span> deleteInfo()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在route.php里面写下快捷路由</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//注意：路由名字要和控制器名字一样</span><br><span class="line">Route::controller(<span class="string">'Fastroute'</span>,<span class="string">'index/Fastroute'</span>);</span><br><span class="line">//然后我们想访问getAA方法，我们可以通过访问URL   http://com.test.php:8888/Fastroute/AA来访问</span><br><span class="line">//想访问getBB()，可以通过   http://com.test.php:8888/Fastroute/BB来访问</span><br></pre></td></tr></table></figure><h3 id="生成URL："><a href="#生成URL：" class="headerlink" title="生成URL："></a>生成URL：</h3><ul><li>有两种方式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Url::build(‘index/User/index’); </span><br><span class="line">url(<span class="string">'index/User/index'</span>);</span><br></pre></td></tr></table></figure><h4 id="查看生成方式"><a href="#查看生成方式" class="headerlink" title="查看生成方式"></a>查看生成方式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dump(url(<span class="string">'index/User/index'</span>));</span><br><span class="line">dump(Url::build(<span class="string">'index/User/index'</span>));</span><br></pre></td></tr></table></figure><ul><li>带参数</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">'index/User/index/id/10'</span>);</span><br><span class="line">url(<span class="string">'index/User/index/abc'</span>,[<span class="string">'id'</span>=&gt;10,<span class="string">'name'</span>=&gt;<span class="string">'icocos'</span>]);</span><br><span class="line">url(<span class="string">'index/User/index/abc'</span>, <span class="string">'id=10&amp;name=icocos'</span>);</span><br></pre></td></tr></table></figure><ul><li>带锚点</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">'index/User/index/abc#name'</span>, <span class="string">'id=10&amp;name=icocos'</span>);</span><br></pre></td></tr></table></figure><ul><li>带域名</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">'index/User/index/abc#name@blog'</span>, <span class="string">'id=10&amp;name=icocos'</span>);</span><br></pre></td></tr></table></figure><h4 id="加入口文件"><a href="#加入口文件" class="headerlink" title="加入口文件"></a>加入口文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Url::root(<span class="string">'/index.php'</span>);            //带入口文件</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;路由&quot;&gt;&lt;a href=&quot;#路由&quot; class=&quot;headerlink&quot; title=&quot;路由&quot;&gt;&lt;/a&gt;路由&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;官方文档里面是这样子定义的=&amp;gt;路由的作用是简化URL访问地址，并根据定义的路由类型做出正确的解析。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;手动解释一下：&lt;ul&gt;
&lt;li&gt;平常我们按照习惯去访问我们的ThinkPHP项目的时候，常规的url应该是这样子写的，（本地举例）&lt;a href=&quot;http://localhost/项目名/public/index.php/模块名/控制器名/方法名&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://localhost/项目名/public/index.php/模块名/控制器名/方法名&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tp5入门——前后台分离</title>
    <link href="https://icocos.github.io/2019/01/13/Tp5%E5%85%A5%E9%97%A8%E2%80%94%E2%80%94%E5%89%8D%E5%90%8E%E5%8F%B0%E5%88%86%E7%A6%BB/"/>
    <id>https://icocos.github.io/2019/01/13/Tp5入门——前后台分离/</id>
    <published>2019-01-12T16:19:13.000Z</published>
    <updated>2019-03-17T14:20:31.032Z</updated>
    
    <content type="html"><![CDATA[<p>最开始组内讨论的过程中我发现，每个人对前后端分离的理解不一样，为了保证能在同一个频道讨论，先就什么是”前后端分离”达成一致。</p><blockquote><p>大家一致认同的前后端分离的例子就是SPA(Single-page application)，所有用到的展现数据都是后端通过异步接口(AJAX/JSONP)的方式提供的，前端只管展现。<br>从某种意义上来说，SPA确实做到了前后端分离，但这种方式存在两个问题：</p></blockquote><a id="more"></a><p>WEB服务中，SPA类占的比例很少。很多场景下还有同步/同步+异步混合的模式，SPA不能作为一种通用的解决方案。</p><blockquote><p>现阶段的SPA开发模式，接口通常是按照展现逻辑来提供的，有时候为了提高效率，后端会帮我们处理一些展现逻辑，这就意味着后端还是涉足了View层的工作，不是真正的前后端分离。</p></blockquote><p>SPA式的前后端分离，是从物理层做区分（认为只要是客户端的就是前端，服务器端的就是后端），这种分法已经无法满足我们前后端分离的需求，我们认为从职责上划分才能满足目前我们的使用场景：</p><pre><code>前端：负责View和Controller层。后端：只负责Model层，业务处理/数据等。</code></pre><h4 id="前后台分离"><a href="#前后台分离" class="headerlink" title="前后台分离"></a>前后台分离</h4><p>1.前台index中controller的index.php输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace app\index\controller;</span><br><span class="line"></span><br><span class="line">class Index</span><br><span class="line">&#123;</span><br><span class="line">public <span class="keyword">function</span> index()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">return</span> <span class="string">"前台方法：index"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">test</span></span>() &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"前台方法：test"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!--more--><p>2.创建admin后台模块(index同级)，MVC中controller新建index.php</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace app\admin\controller;</span><br><span class="line"></span><br><span class="line">class Index &#123;</span><br><span class="line"></span><br><span class="line">public <span class="keyword">function</span> index()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">return</span> <span class="string">"后台方法：index"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">test</span></span>() &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"后台方法：test"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="访问结果"><a href="#访问结果" class="headerlink" title="访问结果"></a>访问结果</h5><ul><li><p>前台</p><ul><li><a href="http://com.test.php:8888/index/index" target="_blank" rel="noopener">http://com.test.php:8888/index/index</a></li><li><a href="http://com.test.php:8888/index/index/index" target="_blank" rel="noopener">http://com.test.php:8888/index/index/index</a></li><li><a href="http://com.test.php:8888/index/index/test" target="_blank" rel="noopener">http://com.test.php:8888/index/index/test</a></li></ul></li><li><p>后台</p><ul><li><a href="http://com.test.php:8888/admin/index" target="_blank" rel="noopener">http://com.test.php:8888/admin/index</a></li><li><a href="http://com.test.php:8888/admin/index/index" target="_blank" rel="noopener">http://com.test.php:8888/admin/index/index</a></li><li><a href="http://com.test.php:8888/admin/index/test" target="_blank" rel="noopener">http://com.test.php:8888/admin/index/test</a></li></ul></li></ul><p>3.public中新增admin.php入口文件，index.php同级，且内容保持一致</p><h5 id="访问结果："><a href="#访问结果：" class="headerlink" title="访问结果："></a>访问结果：</h5><p>上面的访问结果还是一样，只是一下访问的都是前台</p><ul><li><a href="http://com.test.php:8888/index.php" target="_blank" rel="noopener">http://com.test.php:8888/index.php</a></li><li><a href="http://com.test.php:8888/admin.php" target="_blank" rel="noopener">http://com.test.php:8888/admin.php</a></li></ul><p>4.实现绑定</p><p>public中admin.php和index.php的定义应用目录和加载框架引导文件中间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 定义应用目录</span><br><span class="line">define(<span class="string">'APP_PATH'</span>, __DIR__ . <span class="string">'/../application/'</span>);</span><br><span class="line">//TODO: ....</span><br><span class="line">// 加载框架引导文件</span><br><span class="line">require __DIR__ . <span class="string">'/../thinkphp/start.php'</span>;</span><br></pre></td></tr></table></figure><h6 id="增加绑定"><a href="#增加绑定" class="headerlink" title="增加绑定"></a>增加绑定</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 绑定后台模块</span><br><span class="line">define(<span class="string">"BIND_MODULE"</span>, <span class="string">'admin'</span>);</span><br><span class="line">// 绑定前台模块</span><br><span class="line">define(<span class="string">"BIND_MODULE"</span>, <span class="string">'index'</span>);</span><br></pre></td></tr></table></figure><p>此时使用下面URL分别访问的是前台和后台</p><ul><li><a href="http://com.test.php:8888/index.php" target="_blank" rel="noopener">http://com.test.php:8888/index.php</a></li><li><a href="http://com.test.php:8888/admin.php" target="_blank" rel="noopener">http://com.test.php:8888/admin.php</a></li></ul><blockquote><p>条件是需要开启隐藏入口文件功能tp5默认开启: 文档，架构中有隐藏说明(原理就是正则)</p></blockquote><p>同时可以关闭路由，在配置文件最后面增加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//关闭admin模块的路由，必须写到加载框架引导文件之后</span><br><span class="line">\think\App::route(false);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最开始组内讨论的过程中我发现，每个人对前后端分离的理解不一样，为了保证能在同一个频道讨论，先就什么是”前后端分离”达成一致。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;大家一致认同的前后端分离的例子就是SPA(Single-page application)，所有用到的展现数据都是后端通过异步接口(AJAX/JSONP)的方式提供的，前端只管展现。&lt;br&gt;从某种意义上来说，SPA确实做到了前后端分离，但这种方式存在两个问题：&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tp5入门——加载显示UI</title>
    <link href="https://icocos.github.io/2019/01/10/Tp5%E5%85%A5%E9%97%A8%E2%80%94%E2%80%94%E5%8A%A0%E8%BD%BD%E6%98%BE%E7%A4%BAUI/"/>
    <id>https://icocos.github.io/2019/01/10/Tp5入门——加载显示UI/</id>
    <published>2019-01-10T14:44:17.000Z</published>
    <updated>2019-03-17T14:36:21.198Z</updated>
    
    <content type="html"><![CDATA[<p>在thinkPHP的MVC模式中，V：(view)视图 就是用于承载php回显数据的html文档</p><a id="more"></a><h3 id="加载显示UI："><a href="#加载显示UI：" class="headerlink" title="加载显示UI："></a>加载显示UI：</h3><p>加载显示View</p><blockquote><p>index/controller下新建User.php控制</p></blockquote><p>里面写加载方法loadview</p><pre><code>// 系统函数return View();// View方式$view = new \think\View;return $view-&gt;fetch();// 在控制器方式：需要继承系统控制器类$this-&gt;fetch();</code></pre><!--more--><p>controller同级目录新建View目录，里面新建user文件夹，里面新建loadview.html</p><ul><li>其中<ul><li>View是前台模块中MVC的View模块，View里面的user文件夹对应controller下的User.php控制器(注意大小写)</li><li>View里面的user文件夹中的html名字对应User.php中的loadview方法，注意名字相同</li></ul></li></ul><h4 id="数据输入"><a href="#数据输入" class="headerlink" title="数据输入"></a>数据输入</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">return</span> <span class="string">"iCocos"</span></span><br><span class="line"><span class="built_in">return</span> json_encode(array(<span class="string">"name"</span>=&gt;<span class="string">"name"</span>,<span class="string">"age"</span>=&gt;<span class="string">"age"</span>)/[<span class="string">"name"</span>=&gt;<span class="string">"name"</span>,<span class="string">"age"</span>=&gt;<span class="string">"age"</span>])</span><br><span class="line"><span class="built_in">return</span> <span class="string">"&lt;h1&gt;H1&lt;/h1&gt;"</span></span><br><span class="line"></span><br><span class="line">default_return_type =&gt; <span class="string">'html'</span>/<span class="string">'json'</span></span><br><span class="line">default_ajax_return =&gt; <span class="string">'json'</span></span><br></pre></td></tr></table></figure><ul><li>控制器初始化<ul><li><ol><li>必须继承控制器</li></ol></li><li><ol start="2"><li>只要调用控制器的任务方法都会先找初始化方法</li></ol></li><li><ol start="3"><li>提取控制器公告代码，后台权限把控</li></ol></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">_initialize</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="前置操作"><a href="#前置操作" class="headerlink" title="前置操作"></a>前置操作</h4><p>定义方法之前做的事情，把一些公共的设置提取成方法，进行调用，但是必须结合系统控制器前置方法属性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">protected <span class="variable">$beforeActionList</span>=[</span><br><span class="line"><span class="string">"abc"</span>,</span><br><span class="line">// 不让index方法使用def</span><br><span class="line"><span class="string">"def"</span>=&gt;[<span class="string">"except"</span>=&gt;index],</span><br><span class="line">// 只让index方法使用ghi</span><br><span class="line"><span class="string">"ghi"</span>=&gt;[<span class="string">"only"</span>=&gt;index]</span><br><span class="line">];</span><br></pre></td></tr></table></figure><h4 id="页面跳转"><a href="#页面跳转" class="headerlink" title="页面跳转"></a>页面跳转</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">thinkphp/library/think/Controller.php</span><br><span class="line"></span><br><span class="line">Loader::import(<span class="string">'controller/Jump'</span>, TRAIT_PATH, EXT);</span><br><span class="line"></span><br><span class="line">thinkphp/library/traits/controller/Jump.php</span><br></pre></td></tr></table></figure><h4 id="成功跳转"><a href="#成功跳转" class="headerlink" title="成功跳转"></a>成功跳转</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">     <span class="variable">$this</span>-&gt;success(<span class="string">"成功"</span>,<span class="string">'index/index'</span>); // 默认跳转到上一个页面</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line"><span class="comment">##### 操作成功跳转的快捷方法</span></span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 操作成功跳转的快捷方法</span><br><span class="line">     * @access protected</span><br><span class="line">     * @param mixed  <span class="variable">$msg</span>    提示信息</span><br><span class="line">     * @param string <span class="variable">$url</span>    跳转的 URL 地址</span><br><span class="line">     * @param mixed  <span class="variable">$data</span>   返回的数据</span><br><span class="line">     * @param int    <span class="variable">$wait</span>   跳转等待时间</span><br><span class="line">     * @param array  <span class="variable">$header</span> 发送的 Header 信息</span><br><span class="line">     * @<span class="built_in">return</span> void</span><br><span class="line">     * @throws HttpResponseException</span><br><span class="line">     */</span><br><span class="line">    protected <span class="keyword">function</span> success(<span class="variable">$msg</span> = <span class="string">''</span>, <span class="variable">$url</span> = null, <span class="variable">$data</span> = <span class="string">''</span>, <span class="variable">$wait</span> = 3, array <span class="variable">$header</span> = [])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (is_null(<span class="variable">$url</span>) &amp;&amp; !is_null(Request::instance()-&gt;server(<span class="string">'HTTP_REFERER'</span>))) &#123;</span><br><span class="line">            <span class="variable">$url</span> = Request::instance()-&gt;server(<span class="string">'HTTP_REFERER'</span>);</span><br><span class="line">        &#125; elseif (<span class="string">''</span> !== <span class="variable">$url</span> &amp;&amp; !strpos(<span class="variable">$url</span>, <span class="string">'://'</span>) &amp;&amp; 0 !== strpos(<span class="variable">$url</span>, <span class="string">'/'</span>)) &#123;</span><br><span class="line">            <span class="variable">$url</span> = Url::build(<span class="variable">$url</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$type</span> = <span class="variable">$this</span>-&gt;getResponseType();</span><br><span class="line">        <span class="variable">$result</span> = [</span><br><span class="line">            <span class="string">'code'</span> =&gt; 1,</span><br><span class="line">            <span class="string">'msg'</span>  =&gt; <span class="variable">$msg</span>,</span><br><span class="line">            <span class="string">'data'</span> =&gt; <span class="variable">$data</span>,</span><br><span class="line">            <span class="string">'url'</span>  =&gt; <span class="variable">$url</span>,</span><br><span class="line">            <span class="string">'wait'</span> =&gt; <span class="variable">$wait</span>,</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'html'</span> == strtolower(<span class="variable">$type</span>)) &#123;</span><br><span class="line">            <span class="variable">$template</span> = Config::get(<span class="string">'template'</span>);</span><br><span class="line">            <span class="variable">$view</span> = Config::get(<span class="string">'view_replace_str'</span>);</span><br><span class="line"></span><br><span class="line">            <span class="variable">$result</span> = ViewTemplate::instance(<span class="variable">$template</span>, <span class="variable">$view</span>)</span><br><span class="line">                -&gt;fetch(Config::get(<span class="string">'dispatch_success_tmpl'</span>), <span class="variable">$result</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$response</span> = Response::create(<span class="variable">$result</span>, <span class="variable">$type</span>)-&gt;header(<span class="variable">$header</span>);</span><br><span class="line"></span><br><span class="line">        throw new HttpResponseException(<span class="variable">$response</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="失败跳转"><a href="#失败跳转" class="headerlink" title="失败跳转"></a>失败跳转</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$this</span>-&gt;success(<span class="string">"失败"</span>,<span class="string">'index/index'</span>); // 默认跳转到上一个页面</span><br></pre></td></tr></table></figure><h5 id="操作错误跳转的快捷方法"><a href="#操作错误跳转的快捷方法" class="headerlink" title="操作错误跳转的快捷方法"></a>操作错误跳转的快捷方法</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 操作错误跳转的快捷方法</span><br><span class="line"> * @access protected</span><br><span class="line"> * @param mixed  <span class="variable">$msg</span>    提示信息</span><br><span class="line"> * @param string <span class="variable">$url</span>    跳转的 URL 地址</span><br><span class="line"> * @param mixed  <span class="variable">$data</span>   返回的数据</span><br><span class="line"> * @param int    <span class="variable">$wait</span>   跳转等待时间</span><br><span class="line"> * @param array  <span class="variable">$header</span> 发送的 Header 信息</span><br><span class="line"> * @<span class="built_in">return</span> void</span><br><span class="line"> * @throws HttpResponseException</span><br><span class="line"> */</span><br><span class="line">protected <span class="keyword">function</span> error(<span class="variable">$msg</span> = <span class="string">''</span>, <span class="variable">$url</span> = null, <span class="variable">$data</span> = <span class="string">''</span>, <span class="variable">$wait</span> = 3, array <span class="variable">$header</span> = [])</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (is_null(<span class="variable">$url</span>)) &#123;</span><br><span class="line">        <span class="variable">$url</span> = Request::instance()-&gt;isAjax() ? <span class="string">''</span> : <span class="string">'javascript:history.back(-1);'</span>;</span><br><span class="line">    &#125; elseif (<span class="string">''</span> !== <span class="variable">$url</span> &amp;&amp; !strpos(<span class="variable">$url</span>, <span class="string">'://'</span>) &amp;&amp; 0 !== strpos(<span class="variable">$url</span>, <span class="string">'/'</span>)) &#123;</span><br><span class="line">        <span class="variable">$url</span> = Url::build(<span class="variable">$url</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$type</span> = <span class="variable">$this</span>-&gt;getResponseType();</span><br><span class="line">    <span class="variable">$result</span> = [</span><br><span class="line">        <span class="string">'code'</span> =&gt; 0,</span><br><span class="line">        <span class="string">'msg'</span>  =&gt; <span class="variable">$msg</span>,</span><br><span class="line">        <span class="string">'data'</span> =&gt; <span class="variable">$data</span>,</span><br><span class="line">        <span class="string">'url'</span>  =&gt; <span class="variable">$url</span>,</span><br><span class="line">        <span class="string">'wait'</span> =&gt; <span class="variable">$wait</span>,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">'html'</span> == strtolower(<span class="variable">$type</span>)) &#123;</span><br><span class="line">        <span class="variable">$template</span> = Config::get(<span class="string">'template'</span>);</span><br><span class="line">        <span class="variable">$view</span> = Config::get(<span class="string">'view_replace_str'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$result</span> = ViewTemplate::instance(<span class="variable">$template</span>, <span class="variable">$view</span>)</span><br><span class="line">            -&gt;fetch(Config::get(<span class="string">'dispatch_error_tmpl'</span>), <span class="variable">$result</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$response</span> = Response::create(<span class="variable">$result</span>, <span class="variable">$type</span>)-&gt;header(<span class="variable">$header</span>);</span><br><span class="line"></span><br><span class="line">    throw new HttpResponseException(<span class="variable">$response</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="修改模板页面-application-config-php中"><a href="#修改模板页面-application-config-php中" class="headerlink" title="修改模板页面: application/config.php中"></a>修改模板页面: application/config.php中</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'dispatch_success_tmpl'</span>  =&gt; THINK_PATH . <span class="string">'tpl'</span> . DS . <span class="string">'dispatch_jump.tpl'</span>,</span><br><span class="line"><span class="string">'dispatch_error_tmpl'</span>    =&gt; THINK_PATH . <span class="string">'tpl'</span> . DS . <span class="string">'dispatch_jump.tpl'</span>,</span><br></pre></td></tr></table></figure><h5 id="thinkphp-tpl-dispatch-jump-tpl"><a href="#thinkphp-tpl-dispatch-jump-tpl" class="headerlink" title="/thinkphp/tpl/dispatch_jump.tpl"></a>/thinkphp/tpl/dispatch_jump.tpl</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;__NOLAYOUT__&#125;&lt;!DOCTYPE html PUBLIC <span class="string">"-//W3C//DTD XHTML 1.0 Transitional//EN"</span> <span class="string">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"</span>&gt;</span><br><span class="line">&lt;html xmlns=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no"</span>/&gt;</span><br><span class="line">    &lt;title&gt;跳转提示&lt;/title&gt;</span><br><span class="line">    &lt;style <span class="built_in">type</span>=<span class="string">"text/css"</span>&gt;</span><br><span class="line">        *&#123; padding: 0; margin: 0; &#125;</span><br><span class="line">        body&#123; background: <span class="comment">#fff; font-family: "Microsoft Yahei","Helvetica Neue",Helvetica,Arial,sans-serif; color: #333; font-size: 16px; &#125;</span></span><br><span class="line">        .system-message&#123; padding: 24px 48px; &#125;</span><br><span class="line">        .system-message h1&#123; font-size: 100px; font-weight: normal; line-height: 120px; margin-bottom: 12px; &#125;</span><br><span class="line">        .system-message .jump&#123; padding-top: 10px; &#125;</span><br><span class="line">        .system-message .jump a&#123; color: <span class="comment">#333; &#125;</span></span><br><span class="line">        .system-message .success,.system-message .error&#123; line-height: 1.8em; font-size: 36px; &#125;</span><br><span class="line">        .system-message .detail&#123; font-size: 12px; line-height: 20px; margin-top: 12px; display: none; &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=<span class="string">"system-message"</span>&gt;</span><br><span class="line">        &lt;?php switch (<span class="variable">$code</span>) &#123;?&gt;</span><br><span class="line">            &lt;?php <span class="keyword">case</span> 1:?&gt;</span><br><span class="line">            &lt;h1&gt;:)&lt;/h1&gt;</span><br><span class="line">            &lt;img src=<span class="string">"/static/imagename.png"</span> alt=<span class="string">""</span> /&gt; // 状态图片</span><br><span class="line">            &lt;p class=<span class="string">"success"</span>&gt;&lt;?php <span class="built_in">echo</span>(strip_tags(<span class="variable">$msg</span>));?&gt;&lt;/p&gt;</span><br><span class="line">            &lt;?php <span class="built_in">break</span>;?&gt;</span><br><span class="line">            &lt;?php <span class="keyword">case</span> 0:?&gt;</span><br><span class="line">            &lt;img src=<span class="string">"/static/imagename.png"</span> alt=<span class="string">""</span> /&gt; // 状态图片</span><br><span class="line">            &lt;h1&gt;:(&lt;/h1&gt;</span><br><span class="line">            &lt;p class=<span class="string">"error"</span>&gt;&lt;?php <span class="built_in">echo</span>(strip_tags(<span class="variable">$msg</span>));?&gt;&lt;/p&gt;</span><br><span class="line">            &lt;?php <span class="built_in">break</span>;?&gt;</span><br><span class="line">        &lt;?php &#125; ?&gt;</span><br><span class="line">        &lt;p class=<span class="string">"detail"</span>&gt;&lt;/p&gt;</span><br><span class="line">        &lt;p class=<span class="string">"jump"</span>&gt;</span><br><span class="line">            页面自动 &lt;a id=<span class="string">"href"</span> href=<span class="string">"&lt;?php echo(<span class="variable">$url</span>);?&gt;"</span>&gt;跳转&lt;/a&gt; 等待时间： &lt;b id=<span class="string">"wait"</span>&gt;&lt;?php <span class="built_in">echo</span>(<span class="variable">$wait</span>);?&gt;&lt;/b&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        (<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">            var <span class="built_in">wait</span> = document.getElementById(<span class="string">'wait'</span>),</span><br><span class="line">                href = document.getElementById(<span class="string">'href'</span>).href;</span><br><span class="line">            var interval = setInterval(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">                var time = --wait.innerHTML;</span><br><span class="line">                <span class="keyword">if</span>(time &lt;= 0) &#123;</span><br><span class="line">                    location.href = href;</span><br><span class="line">                    clearInterval(interval);</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;, 1000);</span><br><span class="line">        &#125;)();</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"> * @param mixed  <span class="variable">$code</span>   状态码</span><br><span class="line"> * @param mixed  <span class="variable">$msg</span>    提示信息</span><br><span class="line"> * @param string <span class="variable">$url</span>    跳转的 URL 地址</span><br><span class="line"> * @param mixed  <span class="variable">$data</span>   返回的数据</span><br><span class="line"> * @param int    <span class="variable">$wait</span>   跳转等待时间</span><br><span class="line"> * @param array  <span class="variable">$header</span> 发送的 Header 信息</span><br></pre></td></tr></table></figure><p>直接在code1和0之间指定对对应的内容可以</p><h6 id="或者指定对应的模板页面"><a href="#或者指定对应的模板页面" class="headerlink" title="或者指定对应的模板页面"></a>或者指定对应的模板页面</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'dispatch_success_tmpl'</span>  =&gt; THINK_PATH . <span class="string">'tpl'</span> . DS . <span class="string">'dispatch_success_jump.tpl'</span>,</span><br><span class="line"><span class="string">'dispatch_error_tmpl'</span>    =&gt; THINK_PATH . <span class="string">'tpl'</span> . DS . <span class="string">'dispatch_error_jump.tpl'</span>,</span><br></pre></td></tr></table></figure><ul><li>/thinkphp/tpl/dispatch_success_jump.tpl</li><li>/thinkphp/tpl/dispatch_error_jump.tpl</li></ul><p>直接写dispatch_success_jump.tpl和dispatch_error_jump.tpl就可以实现自定义模板显示，<br>具体显示根据需求或者业务进行调整</p><h4 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h4><blockquote><p>重定向(Redirect)就是通过各种方法将各种网络请求重新定个方向转到其它位置（如：网页重定向、域名的重定向、路由选择的变化也是对数据报文经由路径的一种重定向）</p></blockquote><ul><li>状态码：<ul><li>301 redirect、302 redirect </li></ul></li></ul><p>我们在网站建设中，时常会遇到需要网页重定向的情况：</p><ul><li>1.网站调整（如改变网页目录结构）；</li><li>2.网页被移到一个新地址；</li><li>3.网页扩展名改变(如应用需要把.php改成.Html或.shtml)。</li></ul><blockquote><p>这种情况下，如果不做重定向，则用户收藏夹或搜索引擎数据库中旧地址只能让访问客户得到一个404页面错误信息，访问流量白白丧失；再者某些注册了多个域名的网站，也需要通过重定向让访问这些域名的用户自动跳转到主站点等。</p></blockquote><p>我们先来了解一下用户/搜索引擎和网站一开始的交互流程。当用户或搜索引擎向一个网站服务器发出网页浏览请求时，该服务器将：</p><ul><li>1.通过域名服务器(DNS)将域名转换为网站的IP地址，然后返回给客户</li><li>2.打开一个该IP套接口连接</li><li>3.记下通过该套接口的一个HTTP数据流</li><li>4.从WEB服务器接收一个响应请求的HTTP数据流。该数据流包含状态码，状态码的值由HTTP协议所决定。这里所说的“HTTP数据流”信息也叫“头信息(Header)”。<ul><li>头信息中包括了日期，服务器类型，通常还会有一条“200 OK”信息。</li><li>如果一切良好，那么网络服务器就会将“200 OK”信息以及请求页面发送出去。</li><li>如果网站在这时候已经建立了重定向，那么服务器就会在头信息中包含一个“302 Moved Temporarily”或“301 Moved Permanent”之类的响应信息。</li><li>搜索引擎会根据服务器头信息中的内容作出决定。</li></ul></li></ul><h5 id="URL-重定向"><a href="#URL-重定向" class="headerlink" title="URL 重定向"></a>URL 重定向</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * URL 重定向</span><br><span class="line">     * @access protected</span><br><span class="line">     * @param string    <span class="variable">$url</span>    跳转的 URL 表达式</span><br><span class="line">     * @param array|int <span class="variable">$params</span> 其它 URL 参数</span><br><span class="line">     * @param int       <span class="variable">$code</span>   http code</span><br><span class="line">     * @param array     <span class="variable">$with</span>   隐式传参</span><br><span class="line">     * @<span class="built_in">return</span> void</span><br><span class="line">     * @throws HttpResponseException</span><br><span class="line">     */</span><br><span class="line">    protected <span class="keyword">function</span> redirect(<span class="variable">$url</span>, <span class="variable">$params</span> = [], <span class="variable">$code</span> = 302, <span class="variable">$with</span> = [])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (is_integer(<span class="variable">$params</span>)) &#123;</span><br><span class="line">            <span class="variable">$code</span>   = <span class="variable">$params</span>;</span><br><span class="line">            <span class="variable">$params</span> = [];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$response</span> = new Redirect(<span class="variable">$url</span>);</span><br><span class="line">        <span class="variable">$response</span>-&gt;code(<span class="variable">$code</span>)-&gt;params(<span class="variable">$params</span>)-&gt;with(<span class="variable">$with</span>);</span><br><span class="line"></span><br><span class="line">        throw new HttpResponseException(<span class="variable">$response</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$this</span>-&gt; redirect(<span class="string">'index/index'</span>,[<span class="string">'name'</span>=&gt;<span class="string">'name'</span>, <span class="string">'id'</span>=&gt;<span class="string">'99'</span>], 301或302)</span><br></pre></td></tr></table></figure><h5 id="空操作"><a href="#空操作" class="headerlink" title="空操作"></a>空操作</h5><p>作用解决用户恶意输入，报错影响用户体验</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">_empty</span></span>() &#123;</span><br><span class="line"><span class="variable">$this</span>-&gt; redirect(<span class="string">'index/index'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="空控制器"><a href="#空控制器" class="headerlink" title="空控制器"></a>空控制器</h5><p>网站上线每个控制都必须写空操作，不论前台后台，都必须写一个Error.php控制器</p><p>controller下新建一个Error.php控制器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace app\index\controller;</span><br><span class="line"></span><br><span class="line">class Error&#123;</span><br><span class="line">// index重定向</span><br><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">index</span></span>() &#123;</span><br><span class="line"><span class="variable">$this</span>-&gt;redirect(<span class="string">'index/index'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 空操作</span><br><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">_empty</span></span>() &#123;</span><br><span class="line"><span class="variable">$this</span>-&gt; redirect(<span class="string">'index/index'</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h5 id="资料控制"><a href="#资料控制" class="headerlink" title="资料控制"></a>资料控制</h5><p>通过命令生成控制,主目录中有一个think可执行文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env php</span></span><br><span class="line">&lt;?php</span><br><span class="line">// +----------------------------------------------------------------------</span><br><span class="line">// | ThinkPHP [ WE CAN DO IT JUST THINK ]</span><br><span class="line">// +----------------------------------------------------------------------</span><br><span class="line">// | Copyright (c) 2006-2016 http://thinkphp.cn All rights reserved.</span><br><span class="line">// +----------------------------------------------------------------------</span><br><span class="line">// | Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )</span><br><span class="line">// +----------------------------------------------------------------------</span><br><span class="line">// | Author: yunwuxin &lt;448901948@qq.com&gt;</span><br><span class="line">// +----------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">// 定义项目路径</span><br><span class="line">define(<span class="string">'APP_PATH'</span>, __DIR__ . <span class="string">'/application/'</span>);</span><br><span class="line"></span><br><span class="line">// 加载框架引导文件</span><br><span class="line">require __DIR__.<span class="string">'/thinkphp/console.php'</span>;</span><br></pre></td></tr></table></figure><p>在主目录即application同级目录中操作命令行：php think </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">Think Console version 0.1</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  <span class="built_in">command</span> [options] [arguments]</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -h, --<span class="built_in">help</span>            Display this <span class="built_in">help</span> message</span><br><span class="line">  -V, --version         Display this console version</span><br><span class="line">  -q, --quiet           Do not output any message</span><br><span class="line">      --ansi            Force ANSI output</span><br><span class="line">      --no-ansi         Disable ANSI output</span><br><span class="line">  -n, --no-interaction  Do not ask any interactive question</span><br><span class="line">  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 <span class="keyword">for</span> normal output, 2 <span class="keyword">for</span> more verbose output and 3 <span class="keyword">for</span> debug</span><br><span class="line"></span><br><span class="line">Available commands:</span><br><span class="line">  build               Build Application Dirs</span><br><span class="line">  clear               Clear runtime file</span><br><span class="line">  <span class="built_in">help</span>                Displays <span class="built_in">help</span> <span class="keyword">for</span> a <span class="built_in">command</span></span><br><span class="line">  list                Lists commands</span><br><span class="line"> make</span><br><span class="line">  make:controller     Create a new resource controller class</span><br><span class="line">  make:model          Create a new model class</span><br><span class="line"> migrate</span><br><span class="line">  migrate:breakpoint  Manage breakpoints</span><br><span class="line">  migrate:create      Create a new migration</span><br><span class="line">  migrate:rollback    Rollback the last or to a specific migration</span><br><span class="line">  migrate:run         Migrate the database</span><br><span class="line">  migrate:status      Show migration status</span><br><span class="line"> optimize</span><br><span class="line">  optimize:<span class="built_in">autoload</span>   Optimizes PSR0 and PSR4 packages to be loaded with classmaps too, good <span class="keyword">for</span> production.</span><br><span class="line">  optimize:config     Build config and common file cache.</span><br><span class="line">  optimize:route      Build route cache.</span><br><span class="line">  optimize:schema     Build database schema cache.</span><br><span class="line"> queue</span><br><span class="line">  queue:listen        Listen to a given queue</span><br><span class="line">  queue:restart       Restart queue worker daemons after their current job</span><br><span class="line">  queue:subscribe     Subscribe a URL to an push queue</span><br><span class="line">  queue:work          Process the next job on a queue</span><br><span class="line"> seed</span><br><span class="line">  seed:create         Create a new database seeder</span><br><span class="line">  seed:run            Run database seeders</span><br></pre></td></tr></table></figure><p>创建MVC：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">php think make:controller app\index\controller\Conter</span><br><span class="line">php think make:controller app\index\view\conter</span><br><span class="line">php think make:controller app\index\model\conter</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在thinkPHP的MVC模式中，V：(view)视图 就是用于承载php回显数据的html文档&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tp5入门——huiadmin+MVC实战笔记</title>
    <link href="https://icocos.github.io/2019/01/09/Tp5%E5%85%A5%E9%97%A8%E2%80%94%E2%80%94huiadmin-MVC%E5%AE%9E%E6%88%98%E7%AC%94%E8%AE%B0/"/>
    <id>https://icocos.github.io/2019/01/09/Tp5入门——huiadmin-MVC实战笔记/</id>
    <published>2019-01-09T15:35:07.000Z</published>
    <updated>2019-01-02T10:24:55.747Z</updated>
    
    <content type="html"><![CDATA[<p>MVC无人不知，可很多程序员对MVC的概念的理解似乎有误，换言之他们一直在错用MVC，尽管即使如此软件也能被写出来，然而软件内部代码的组织方式却是不科学的，这会影响到软件的可维护性、可移植性，代码的可重用性。</p><blockquote><p>MVC即Model、View、Controller即模型、视图、控制器。我在和同行讨论技术，阅读别人的代码时发现，很多程序员倾向于将软件的业务逻辑放在Controller里，将数据库访问操作的代码放在Model里。</p></blockquote><a id="more"></a><ul><li><ol><li>public中menu里面处理：管理员管理 模块</li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;dl id=<span class="string">"menu-admin"</span>&gt;</span><br><span class="line">&lt;dt&gt;&lt;i class=<span class="string">"Hui-iconfont"</span>&gt;&amp;<span class="comment">#xe62d;&lt;/i&gt; 管理员管理&lt;i class="Hui-iconfont menu_dropdown-arrow"&gt;&amp;#xe6d5;&lt;/i&gt;&lt;/dt&gt;</span></span><br><span class="line">&lt;dd&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;&lt;a data-href=<span class="string">"&#123;:url('admin/add')&#125;"</span> data-title=<span class="string">"添加用户"</span> href=<span class="string">"javascript:void(0)"</span>&gt;添加用户&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;/dd&gt;</span><br><span class="line">&lt;/dl&gt;</span><br></pre></td></tr></table></figure><blockquote><p>data-href=”{:url(‘admin/add’)}”: 对应位置是admin/add,即当前view中admin里面的add.html</p></blockquote><ul><li><ol start="2"><li>在view里面新建admin，里面在新建add.html,处理add.html中表单</li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form class=<span class="string">"form form-horizontal"</span> id=<span class="string">"form-admin-add"</span> method=<span class="string">"post"</span> action=<span class="string">"&#123;:url('admin/add')&#125;"</span>&gt;</span><br></pre></td></tr></table></figure><blockquote><p>action=”{:url(‘admin/add’)}”: 表单提交对应的是admin对应的控制器，里面的add方法</p></blockquote><ul><li><ol start="3"><li>在controller里面新建Admin.php(必须大写),里面新增add方法</li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">namespace app\admin\controller;</span><br><span class="line"></span><br><span class="line">use think\Controller;</span><br><span class="line"></span><br><span class="line">class Admin extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    public <span class="keyword">function</span> add()</span><br><span class="line">    &#123;</span><br><span class="line">        // 是否是POST提交</span><br><span class="line">        <span class="keyword">if</span> (request()-&gt;isPost()) &#123;</span><br><span class="line">            //dump(input(<span class="string">'post.'</span>));</span><br><span class="line">            <span class="variable">$data</span> = input(<span class="string">'post.'</span>);</span><br><span class="line">            &lt;!--验证: AdminUser--&gt;</span><br><span class="line">            <span class="variable">$validate</span> = validate(<span class="string">'AdminUser'</span>);</span><br><span class="line">            <span class="keyword">if</span> (!<span class="variable">$validate</span>-&gt;check(<span class="variable">$data</span>)) &#123;</span><br><span class="line">                <span class="variable">$this</span>-&gt;error(<span class="variable">$validate</span>-&gt;getError());</span><br><span class="line">            &#125;</span><br><span class="line">            &lt;!--加密--&gt;</span><br><span class="line">            <span class="variable">$data</span>[<span class="string">'password'</span>] = md5(<span class="variable">$data</span>[<span class="string">'password'</span>].<span class="string">'_#dev_icocos_php'</span>);</span><br><span class="line"></span><br><span class="line">            <span class="variable">$data</span>[<span class="string">'status'</span>] = 1;</span><br><span class="line">            &lt;!--异常--&gt;</span><br><span class="line">            try &#123;</span><br><span class="line">                &lt;!--模型层数据传递：AdminUser--&gt;</span><br><span class="line">                <span class="variable">$id</span> = model(<span class="string">'AdminUser'</span>)-&gt;add(<span class="variable">$data</span>);</span><br><span class="line">            &#125; catch (\Exception <span class="variable">$e</span>) &#123;</span><br><span class="line">                <span class="variable">$this</span>-&gt;error(<span class="variable">$e</span>-&gt;getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">            &lt;!--状态判断--&gt;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$id</span>) &#123;</span><br><span class="line">                <span class="variable">$this</span>-&gt;success(<span class="string">'id='</span>.<span class="variable">$id</span>.<span class="string">'的用户新增成功'</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$this</span>-&gt;error(<span class="string">'error'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            // 非POST</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$this</span>-&gt;fetch(); //显示到view</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><ol start="4"><li>其中顶层模块新建common，里面新建两个文件夹</li></ol></li><li><p>4.1 validate里面AdminUser.php对应全局验证，配置规则就可以</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">namespace app\common\validate;</span><br><span class="line"></span><br><span class="line">use think\Validate;</span><br><span class="line"></span><br><span class="line">class AdminUser extends Validate &#123;</span><br><span class="line">    protected <span class="variable">$rule</span> = [</span><br><span class="line">    <span class="string">'username'</span> =&gt; <span class="string">'require|max:20'</span>,</span><br><span class="line">    <span class="string">'password'</span> =&gt; <span class="string">'require|max:20'</span>,</span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>4.2 common里面AdminUser.php对应模型数据</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">namespace app\common\model;</span><br><span class="line"></span><br><span class="line">use think\Model;</span><br><span class="line"></span><br><span class="line">class AdminUser extends Model &#123;</span><br><span class="line">    protected <span class="variable">$autoWriteTimestamp</span> = <span class="literal">true</span>; // 直接默认使用写入(创建)时间</span><br><span class="line">    public <span class="keyword">function</span> add(<span class="variable">$data</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!is_array(<span class="variable">$data</span>)) &#123;</span><br><span class="line">            exception(<span class="string">"数据传输不合法"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        &lt;!--数据库存储--&gt;</span><br><span class="line">        <span class="variable">$this</span>-&gt;allowField(<span class="literal">true</span>)-&gt;save(<span class="variable">$data</span>);</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$this</span>-&gt;id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MVC无人不知，可很多程序员对MVC的概念的理解似乎有误，换言之他们一直在错用MVC，尽管即使如此软件也能被写出来，然而软件内部代码的组织方式却是不科学的，这会影响到软件的可维护性、可移植性，代码的可重用性。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MVC即Model、View、Controller即模型、视图、控制器。我在和同行讨论技术，阅读别人的代码时发现，很多程序员倾向于将软件的业务逻辑放在Controller里，将数据库访问操作的代码放在Model里。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tp5入门——脚本与配置</title>
    <link href="https://icocos.github.io/2019/01/06/Tp5%E5%85%A5%E9%97%A8%E2%80%94%E2%80%94%E8%84%9A%E6%9C%AC%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>https://icocos.github.io/2019/01/06/Tp5入门——脚本与配置/</id>
    <published>2019-01-06T15:05:53.000Z</published>
    <updated>2019-03-17T14:28:34.419Z</updated>
    
    <content type="html"><![CDATA[<p>ThinkPHP提供了灵活的全局配置功能，采用最有效率的PHP返回数组方式定义，支持惯例配置、公共配置、模块配置、扩展配置、场景配置、环境变量配置和动态配置。</p><blockquote><p>对于有些简单的应用，你无需配置任何配置文件，而对于复杂的要求，你还可以扩展自己的独立配置文件。</p></blockquote><p>系统的配置参数是通过静态变量全局存取的，存取方式简单高效。</p><blockquote><p>配置功能由\think\Config类完成。</p></blockquote><a id="more"></a><h2 id="thinkphp配置类型有哪些？"><a href="#thinkphp配置类型有哪些？" class="headerlink" title="thinkphp配置类型有哪些？"></a>thinkphp配置类型有哪些？</h2><p>　　1.在thinkphp中，有6种配置。即惯例配置，应用配置、扩展配置、模块配置、场景配置、动态配置。<br>　　<br>　　2.惯例配置就是系统默认的配置。<br>　　<br>　　3.应用配置就是我们自己开发创建的应用单独的配置。<br>　　<br>　　4.扩展配置主要是实现我们项目在开发过程中有一些扩展程序用到的配置。<br>　　<br>　　5.模块配置就是我们在一个应用中，每一个模块的配置。<br>　　<br>　　6.场景配置主要是实现我们在不同的开发环境中设置的配置。若我们在家里面办公，电脑环境可能不一样;公司里面办公，公司的电脑环境有不一样。<br>　　<br>　　7.动态配置在我们模块中开发实现的动态配置。如我们在某一个控制器中定义数据库的配置。　　</p><h2 id="脚本与配置"><a href="#脚本与配置" class="headerlink" title="脚本与配置"></a>脚本与配置</h2><h3 id="配置类型和位置"><a href="#配置类型和位置" class="headerlink" title="配置类型和位置"></a>配置类型和位置</h3><ol><li><p>惯例配置：通用全局配置</p><p> thinkphp5_1/thinkphp/convention.php</p></li><li><p>应用配置：App应用，后台配置</p><p> thinkphp5_1/application/config.php</p></li></ol><!--more--><ol start="3"><li><p>拓展配置：对真个配置文件分类管理(分目录)</p><p> thinkphp5_1/application/database.php<br> thinkphp5_1/application/extra/自定义配置文件</p></li><li><p>场景配置：环境切换配置：</p><p> thinkphp5_1/application/config.php<br> // 应用模式状态<br> ‘app_status’             =&gt; ‘home’,  application新建对应home文件，编写配置<br> ‘app_status’             =&gt; ‘office’,  application新建对应office文件，编写配置</p></li><li><p>模块配置：模块特有，对应模块config.php</p><p> thinkphp5_1/application/admin</p></li><li><p>动态配置：临时性配置，执行的时候设置</p></li></ol><h3 id="设置动态配置"><a href="#设置动态配置" class="headerlink" title="设置动态配置"></a>设置动态配置</h3><p>系统方法：</p><pre><code>config(&apos;name&apos;, &apos;PHP动态配置&apos;);</code></pre><p>系统类: </p><pre><code>\think\Config::set(&apos;name&apos;, &apos;PHP动态配置&apos;);</code></pre><h3 id="读取配置"><a href="#读取配置" class="headerlink" title="读取配置"></a>读取配置</h3><p>系统方法：</p><pre><code>config(&apos;key&apos;)  </code></pre><p>系统类：</p><pre><code>\think\Config::get(&apos;key&apos;)</code></pre><p>使用use：</p><pre><code>use \think\Config     Config::get(&apos;key&apos;)</code></pre><p>数组：</p><pre><code>config(&apos;key&apos;) config(&apos;key.name&apos;) 上同</code></pre><p>扩展配置分类：</p><pre><code>config(&apos;key.name&apos;)  &apos;key&apos;所有</code></pre><h3 id="系统相关"><a href="#系统相关" class="headerlink" title="系统相关"></a>系统相关</h3><p>系统类：</p><pre><code>thinkphp5_1/thinkphp/library/think  </code></pre><p>系统方法：</p><pre><code>thinkphp5_1/thinkphp/helper.php</code></pre><h3 id="配置顺序"><a href="#配置顺序" class="headerlink" title="配置顺序"></a>配置顺序</h3><p>配置文件加载顺序：反向加载，合并同名覆盖，不同名保留</p><blockquote><p>动态配置 -&gt; 模块 -&gt; 场景 -&gt; 扩展 -&gt; 应用 -&gt; 管理</p></blockquote><h3 id="环境变量配置"><a href="#环境变量配置" class="headerlink" title="环境变量配置"></a>环境变量配置</h3><p>新建： thinkphp5_1/.env  // 非php，直接键值对或数组，不支持中文</p><pre><code>name=icocos[database]type=mysqlroot = root</code></pre><p>读取：</p><pre><code>think\Env::get(&apos;name&apos;)think\Env::get(&apos;database.type&apos;) // 不能直接database.type</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ThinkPHP提供了灵活的全局配置功能，采用最有效率的PHP返回数组方式定义，支持惯例配置、公共配置、模块配置、扩展配置、场景配置、环境变量配置和动态配置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于有些简单的应用，你无需配置任何配置文件，而对于复杂的要求，你还可以扩展自己的独立配置文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;系统的配置参数是通过静态变量全局存取的，存取方式简单高效。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;配置功能由\think\Config类完成。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tp5入门——数据库(MySQL)操作</title>
    <link href="https://icocos.github.io/2019/01/04/Tp5%E5%85%A5%E9%97%A8%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93-MySQL-%E6%93%8D%E4%BD%9C/"/>
    <id>https://icocos.github.io/2019/01/04/Tp5入门——数据库-MySQL-操作/</id>
    <published>2019-01-04T11:04:17.000Z</published>
    <updated>2019-01-02T10:24:32.266Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL 是最流行的关系型数据库管理系统，在WEB应用方面 MySQL 是最好的RDBMS(Relational Database Management System：关系数据库管理系统)应用软件之一。</p><p>在本教程中，会让大家快速掌握 MySQL 的基本知识，并轻松使用 MySQL 数据库。</p><a id="more"></a><h2 id="TP-gt-DB："><a href="#TP-gt-DB：" class="headerlink" title="TP-&gt;DB："></a>TP-&gt;DB：</h2><h5 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h5><pre><code>public function selectDB(){    // // 1. 原生更新记录    $result1 = Db::query(&apos;delete from t_php_0002 where id=38&apos;);    var_dump($result1);    // 2. TPS岔村构造器方法    $result2 = DB::table(&apos;t_php_0002&apos;)-&gt;where(&apos;id&apos;, 39)-&gt;delete();    var_dump($result2);    // 3. 去掉表前缀:think_    $result3 = Db::name(&apos;t_php_0002&apos;)-&gt;where(&apos;id&apos;, 40)-&gt;delete();    var_dump($result3);    // 4. 助手Db函数    $db = db(&apos;t_php_0002&apos;);    $result4 = $db-&gt;where(&apos;id&apos;, 41)-&gt;delete();    var_dump($result4);}</code></pre><!--more--><h5 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h5><pre><code>public function deleteDB(){    // 1. 原生更新记录    $result1 = Db::query(&apos;select * from t_php_0002 where id&lt;&gt;5&apos;);    var_dump($result1);    // 2. TPS岔村构造器方法    $result2 = DB::table(&apos;t_php_0002&apos;)-&gt;where(&apos;id&apos;, 16)-&gt;select();    var_dump($result2);    // 3. 去掉表前缀:think_    $result3 = Db::name(&apos;t_php_0002&apos;)-&gt;where(&apos;id&apos;, 16)-&gt;select();    var_dump($result3);    // 4. 助手Db函数    $db = db(&apos;t_php_0002&apos;);    $result4 = $db-&gt;where(&apos;id&apos;, 16)-&gt;select();    var_dump($result4);}</code></pre><h5 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h5><pre><code>public function updateDB(){    // 1. 原生更新记录    $result1 = Db::execute(&apos;update t_php_0002 set name = &quot;framework&quot; where id=16&apos;);    var_dump($result1);    // 2. TPS岔村构造器方法    DB::table(&apos;t_php_0002&apos;)-&gt;where(&apos;id&apos;, 16)-&gt;update([&apos;name&apos;=&gt;&quot;iCocos XXX&quot;]);    // 3. 去掉表前缀:think_    Db::name(&apos;t_php_0002&apos;)-&gt;where(&apos;id&apos;, 16)-&gt;update([&apos;name&apos;=&gt;&quot;iCocos YYY&quot;]);    // 4. 助手Db函数    $db = db(&apos;t_php_0002&apos;);    $db-&gt;where(&apos;id&apos;, 16)-&gt;update([&apos;name&apos;=&gt;&quot;iCocos MMM&quot;]);}</code></pre><h5 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h5><pre><code>public function insertDB(){        // 1. 原生插入记录    $result1 = Db::execute(&apos;insert into t_php_0002 (name, status) values (&quot;thinkphp002&quot;, 12)&apos;);    var_dump($result1);    // 2. TPS岔村构造器方法    Db::table(&apos;t_php_0002&apos;)-&gt;insert([&apos;name&apos;=&gt;&apos;PHP0002&apos;,&apos;status&apos;=&gt;10]);    // 3. 去掉表前缀:think_    Db::name(&apos;t_php_0002&apos;)-&gt;insert([&apos;name&apos;=&gt;&quot;iCocos&quot;]);     $db = db(&apos;t_php_0002&apos;);    // 4. 直接插    $result2 = $db-&gt;insert([&apos;name&apos;=&gt;&quot;iCocos four&quot;]);    var_dump($result2);    // 5. 插入并获取结果    $result3 = $db-&gt;insertGetId([&apos;name&apos;=&gt;&quot;iCocos four&quot;]);    var_dump($result3);    // 插入多条    $data1 = [    [&apos;name&apos;=&gt;&apos;x&apos;],    [&apos;name&apos;=&gt;&apos;Y&apos;],    [&apos;name&apos;=&gt;&apos;Z&apos;]    ];    $res = $db-&gt;insertAll($data1);    var_dump($res);}</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MySQL 是最流行的关系型数据库管理系统，在WEB应用方面 MySQL 是最好的RDBMS(Relational Database Management System：关系数据库管理系统)应用软件之一。&lt;/p&gt;
&lt;p&gt;在本教程中，会让大家快速掌握 MySQL 的基本知识，并轻松使用 MySQL 数据库。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tp5入门——模块和方法调用</title>
    <link href="https://icocos.github.io/2019/01/02/Tp5%E5%85%A5%E9%97%A8%E2%80%94%E2%80%94%E6%A8%A1%E5%9D%97%E5%92%8C%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8/"/>
    <id>https://icocos.github.io/2019/01/02/Tp5入门——模块和方法调用/</id>
    <published>2019-01-02T13:09:39.000Z</published>
    <updated>2019-01-02T10:24:27.135Z</updated>
    
    <content type="html"><![CDATA[<p>在ThinkPHP中，使用 $this 可以调用当前模块内的方法，但是很多情况下经常会在当前模块中调用其他模块的方法。这篇文章主要介绍了ThinkPHP跨模块调用操作,需要的朋友可以参考下。</p><a id="more"></a><h2 id="模块和方法调用"><a href="#模块和方法调用" class="headerlink" title="模块和方法调用"></a>模块和方法调用</h2><h5 id="跨控制器调用-当前模块"><a href="#跨控制器调用-当前模块" class="headerlink" title="跨控制器调用: 当前模块"></a>跨控制器调用: 当前模块</h5><pre><code>public function callback_current_model(){    // 调用前台User    // 方式1：直接实例化-&gt;前台    $model1 = new \app\index\controller\User;    echo $model1-&gt;index();    // 方法2： use \app\index\controller\User    $model2 = new User;    echo $model2-&gt;index();    // 方法3：系统方法    $model3 = controller(&quot;User&quot;);    echo $model3-&gt;index();}</code></pre><!--more--><h5 id="跨控制器调用-不同模块-gt-后台"><a href="#跨控制器调用-不同模块-gt-后台" class="headerlink" title="跨控制器调用: 不同模块-&gt;后台"></a>跨控制器调用: 不同模块-&gt;后台</h5><pre><code>public function callback_cothers_model(){    // 调用前台User    // 方式1：直接实例化    $model1 = new \app\admin\controller\Index;    echo $model1-&gt;index();    // 方法2： use \app\index\controller\User    $model2 = new AdminIndex;    echo $model2-&gt;index();    // 方法3：系统方法    $model3 = controller(&quot;admin/Index&quot;);    echo $model3-&gt;index();}</code></pre><h5 id="调动当前模块当前控制器中的方法"><a href="#调动当前模块当前控制器中的方法" class="headerlink" title="调动当前模块当前控制器中的方法"></a>调动当前模块当前控制器中的方法</h5><pre><code>public function callback_current_method(){    $this-&gt;test();    self::test();    Index::test();    action(&apos;test&apos;);}</code></pre><h5 id="调动当前模块其他控制器中的方法"><a href="#调动当前模块其他控制器中的方法" class="headerlink" title="调动当前模块其他控制器中的方法"></a>调动当前模块其他控制器中的方法</h5><pre><code>public function callback_others_method(){    $model1 = new \app\index\controller\User;    echo $model1-&gt;test();    echo action(&apos;User/test&apos;);}</code></pre><h5 id="调动其他模块其他控制器中的方法"><a href="#调动其他模块其他控制器中的方法" class="headerlink" title="调动其他模块其他控制器中的方法"></a>调动其他模块其他控制器中的方法</h5><pre><code>public function callback_others_model_method(){    // 方式1：直接实例化    $model1 = new \app\admin\controller\Index;    echo $model1-&gt;test();    echo action(&apos;admin/index/test&apos;);}</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在ThinkPHP中，使用 $this 可以调用当前模块内的方法，但是很多情况下经常会在当前模块中调用其他模块的方法。这篇文章主要介绍了ThinkPHP跨模块调用操作,需要的朋友可以参考下。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tp5入门——程序执行流程</title>
    <link href="https://icocos.github.io/2019/01/01/Tp5%E5%85%A5%E9%97%A8%E2%80%94%E2%80%94%E7%A8%8B%E5%BA%8F%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B/"/>
    <id>https://icocos.github.io/2019/01/01/Tp5入门——程序执行流程/</id>
    <published>2019-01-01T14:00:05.000Z</published>
    <updated>2019-03-17T14:37:06.816Z</updated>
    
    <content type="html"><![CDATA[<p>对用户的第一次URL访问 http://[ip]|[localhost]/My/index.php/Index/show/ 所执行的流程进行详细的分析.</p><p>用户的URL访问首先是定位到了My项目的index.php 入口文件，项目的入口文件所做的其实是实例化一个App应用实例，并且执行这个应用。</p><blockquote><p>注意：如果使用了URL_REWRITE，可能index.php已经被隐藏了</p></blockquote><a id="more"></a><h2 id="执行流程"><a href="#执行流程" class="headerlink" title="执行流程"></a>执行流程</h2><p><img src="https://img-blog.csdn.net/20180428165115702" alt="image"></p><h4 id="1，-入口文件：-public-index-php"><a href="#1，-入口文件：-public-index-php" class="headerlink" title="1， 入口文件： ~/public/index.php"></a>1， 入口文件： ~/public/index.php</h4><pre><code>// 定义应用目录常量define(&apos;APP_PATH&apos;, __DIR__ . &apos;/../application/&apos;);// 加载框架引导文件require __DIR__ . &apos;/../thinkphp/start.php&apos;;</code></pre><h4 id="2，加载框架引导文件：-thinkphp-start-php"><a href="#2，加载框架引导文件：-thinkphp-start-php" class="headerlink" title="2，加载框架引导文件：~/thinkphp/start.php"></a>2，加载框架引导文件：~/thinkphp/start.php</h4><pre><code>// 1. 加载基础文件require __DIR__ . &apos;/base.php&apos;;// 2. 执行应用App::run()-&gt;send();</code></pre><h4 id="3，加载基础文件"><a href="#3，加载基础文件" class="headerlink" title="3，加载基础文件"></a>3，加载基础文件</h4><pre><code>定义常量，文件后缀，环境常量加载环境变量配置文件载入Loader类：~/thinkphp/library/think/Loader.php(自动加载类)// 注册自动加载\think\Loader::register();// 注册错误和异常处理机制： ~/thinkphp/library/think/Error.php\think\Error::register();// 加载惯例配置文件:~/thinkphp/convention.php\think\Config::set(include THINK_PATH . &apos;convention&apos; . EXT);</code></pre><h4 id="4，加载运行应用：-thinkphp-library-think-App-php"><a href="#4，加载运行应用：-thinkphp-library-think-App-php" class="headerlink" title="4，加载运行应用：~/thinkphp/library/think/App.php"></a>4，加载运行应用：~/thinkphp/library/think/App.php</h4><pre><code>App::run()-&gt;send(); </code></pre><blockquote><p>run方法：public static function run(Request $request = null)</p></blockquote><h6 id="1-加载-config-self-initCommon"><a href="#1-加载-config-self-initCommon" class="headerlink" title="1, 加载$config = self::initCommon();"></a>1, 加载$config = self::initCommon();</h6><pre><code>// 加载命名空间: Loader::addNamespace($config[&apos;root_namespace&apos;]);// 初始化应用： config = self::init(); 加载各种配置文件// 应用调试模式:self::$debug = Env::get(&apos;app_debug&apos;, Config::get(&apos;app_debug&apos;));// 加载额外文件:$config[&apos;extra_file_list&apos;]// 设置系统时区: date_default_timezone_set($config[&apos;default_timezone&apos;]);// 监听 app_init： Hook::listen(&apos;app_init&apos;);</code></pre><h6 id="2-加载当前控制器中的init方法"><a href="#2-加载当前控制器中的init方法" class="headerlink" title="2,加载当前控制器中的init方法"></a>2,加载当前控制器中的init方法</h6><pre><code>// 加载各种配置文件// 加载公告文件// 加载语言包</code></pre><h6 id="3-设置时区"><a href="#3-设置时区" class="headerlink" title="3, 设置时区"></a>3, 设置时区</h6><h6 id="4-加载当前控制的路由检测"><a href="#4-加载当前控制的路由检测" class="headerlink" title="4, 加载当前控制的路由检测"></a>4, 加载当前控制的路由检测</h6><h6 id="5-调用控制器中的exec方法：根据用户请求进行分发处理"><a href="#5-调用控制器中的exec方法：根据用户请求进行分发处理" class="headerlink" title="5, 调用控制器中的exec方法：根据用户请求进行分发处理"></a>5, 调用控制器中的exec方法：根据用户请求进行分发处理</h6><h6 id="6-根据不同的请求类型，加载对应文件module方法"><a href="#6-根据不同的请求类型，加载对应文件module方法" class="headerlink" title="6, 根据不同的请求类型，加载对应文件module方法"></a>6, 根据不同的请求类型，加载对应文件module方法</h6><pre><code>// 获取控制器名// $controller = strip_tags($result[1] ?: $config[&apos;default_controller&apos;]);// $controller = $convert ? strtolower($controller) : $controller;// 设置当前请求的控制器、操作// $request-&gt;controller(Loader::parseName($controller, 1))-&gt;action($actionName);</code></pre><p>模块/控制器绑定，入口自动绑定，默认语言，系统语言包，监听 app_dispatch，URL 路由检测，记录路由和请求信息，监听 app_begin，请求缓存检查，清空类的实例化，输出数据到客户端，监听 app_end</p><h4 id="5，相应输出"><a href="#5，相应输出" class="headerlink" title="5，相应输出"></a>5，相应输出</h4><pre><code>// 输出数据到客户端if ($data instanceof Response) {    $response = $data;} elseif (!is_null($data)) {    // 默认自动识别响应输出类型    $type = $request-&gt;isAjax() ?    Config::get(&apos;default_ajax_return&apos;) :    Config::get(&apos;default_return_type&apos;);    $response = Response::create($data, $type);} else {    $response = Response::create();}</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对用户的第一次URL访问 http://[ip]|[localhost]/My/index.php/Index/show/ 所执行的流程进行详细的分析.&lt;/p&gt;
&lt;p&gt;用户的URL访问首先是定位到了My项目的index.php 入口文件，项目的入口文件所做的其实是实例化一个App应用实例，并且执行这个应用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：如果使用了URL_REWRITE，可能index.php已经被隐藏了&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PHP第三十一篇——注册登录验证入门实战</title>
    <link href="https://icocos.github.io/2018/12/28/PHP%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%80%E7%AF%87%E2%80%94%E2%80%94%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98/"/>
    <id>https://icocos.github.io/2018/12/28/PHP第三十一篇——注册登录验证入门实战/</id>
    <published>2018-12-28T15:43:00.000Z</published>
    <updated>2019-03-01T10:37:33.955Z</updated>
    
    <content type="html"><![CDATA[<p>实现处理PHP+MySQLi+HTML实战，简单到不能再简单的注册登录页面效果！</p><h2 id="PHP基础——注册登录验证入门实战"><a href="#PHP基础——注册登录验证入门实战" class="headerlink" title="PHP基础——注册登录验证入门实战"></a>PHP基础——注册登录验证入门实战</h2><h3 id="连接数据库："><a href="#连接数据库：" class="headerlink" title="连接数据库："></a>连接数据库：</h3><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">    header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">    <span class="comment">##### 建立连接: 这里使用MAMP默认提供的mysql和端口</span></span><br><span class="line">    <span class="variable">$link</span> = mysqli_connect(<span class="string">'localhost'</span>, <span class="string">'root'</span>, <span class="string">'root'</span>, <span class="string">'mysqli'</span>,<span class="string">'8889'</span>) or die(<span class="string">'连接数据失败&lt;\br&gt;'</span>.mysqli__connect_errno(<span class="variable">$link</span>).<span class="string">':'</span>.mysqli__connect_error(<span class="variable">$link</span>));</span><br><span class="line">    //var_dump(<span class="variable">$link</span>);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$link</span>) &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"错误连接"</span>;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'ERROR'</span>.mysqli_connect_errno().<span class="string">':'</span>.mysqli_connect_error();</span><br><span class="line">        <span class="built_in">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">##### 设置字符集</span></span><br><span class="line">    mysqli_query(<span class="variable">$link</span>, <span class="string">'SET NAMES UTF8'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">##### 打开指定数据库</span></span><br><span class="line">    <span class="variable">$res</span> = mysqli_select_db(<span class="variable">$link</span>,<span class="string">'mysqli'</span>) or die(<span class="string">'指定数据库不存在&lt;\br&gt;'</span>.mysqli__errno(<span class="variable">$link</span>).<span class="string">':'</span>.mysqli__error(<span class="variable">$link</span>));</span><br><span class="line"></span><br><span class="line">```  </span><br><span class="line">    </span><br><span class="line"><span class="comment">### PHP操作请求</span></span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">require_once <span class="string">'connect.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$act</span> = <span class="variable">$_REQUEST</span>[<span class="string">'act'</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">'username'</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">'password'</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$regtime</span> = time();</span><br><span class="line"></span><br><span class="line">// 根据不同的操作完成不同的功能</span><br><span class="line">switch (<span class="variable">$act</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> <span class="string">'regist'</span>:</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">"INSERT user(username,password,regtime) VALUES('&#123;<span class="variable">$username</span>&#125;','&#123;<span class="variable">$password</span>&#125;','&#123;<span class="variable">$regtime</span>&#125;')"</span>;</span><br><span class="line">        <span class="variable">$res</span> = mysqli_query(<span class="variable">$link</span>, <span class="variable">$sql</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$res</span>) &#123;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"注册成功，恭喜发财, 第"</span>.mysqli_insert_id(<span class="variable">$link</span>);</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">'&lt;meta http-equiv="refresh" content="3;url=login.php"/&gt;'</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"注册失败，请先前往注册"</span>;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">'&lt;meta http-equiv="refresh" content="3;url=regist.php"/&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> <span class="string">'login'</span>:</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">"SELECT * FROM user WHERE username='&#123;<span class="variable">$username</span>&#125;' AND password='&#123;<span class="variable">$password</span>&#125;'"</span>;</span><br><span class="line">        <span class="variable">$res</span> = mysqli_query(<span class="variable">$link</span>, <span class="variable">$sql</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$res</span> &amp;&amp; mysqli_num_rows(<span class="variable">$res</span>)&gt;0) &#123;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"登录成功，恭喜发财, 第"</span>.mysqli_insert_id(<span class="variable">$link</span>);</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">'&lt;meta http-equiv="refresh" content="3;url=home.php"/&gt;'</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"登录失败，请重新登录"</span>;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">'&lt;meta http-equiv="refresh" content="3;url=login.php"/&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注册页面与简单逻辑："><a href="#注册页面与简单逻辑：" class="headerlink" title="注册页面与简单逻辑："></a>注册页面与简单逻辑：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">&lt;title&gt;注册页面&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;注册页面&lt;/h3&gt;</span><br><span class="line">&lt;form action=<span class="string">"doAction.php?act=regist"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;table border=<span class="string">"1"</span> width=<span class="string">"80%"</span> cellpadding=<span class="string">"0"</span> cellspacing=<span class="string">"0"</span> bgcolor=<span class="string">"#ABCDEF"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;用户名&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"username"</span> id=<span class="string">"username"</span> placeholder=<span class="string">"请输入合法用户名"</span>&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;密码&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"password"</span> id=<span class="string">"password"</span> placeholder=<span class="string">"请输入密码"</span>&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td colspan=<span class="string">"2"</span>&gt;</span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"submit"</span> value=<span class="string">"注册"</span>&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">&lt;/table&gt;</span><br><span class="line"></span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="登录页面与简单逻辑："><a href="#登录页面与简单逻辑：" class="headerlink" title="登录页面与简单逻辑："></a>登录页面与简单逻辑：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;登录页面&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h3&gt;登录页面&lt;/h3&gt;</span><br><span class="line">    &lt;form action=<span class="string">"doAction.php?act=login"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;table border=<span class="string">"1"</span> width=<span class="string">"80%"</span> cellpadding=<span class="string">"0"</span> cellspacing=<span class="string">"0"</span> bgcolor=<span class="string">"#ABCDEF"</span>&gt;</span><br><span class="line"></span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;用户名&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"username"</span> id=<span class="string">""</span> placeholder=<span class="string">"请输入合法用户名"</span>&gt;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;密码&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"password"</span> id=<span class="string">""</span> placeholder=<span class="string">"请输入密码"</span>&gt;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td colspan=<span class="string">"2"</span>&gt;</span><br><span class="line">                    &lt;input <span class="built_in">type</span>=<span class="string">"submit"</span> value=<span class="string">"登录"</span>&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/table&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="首页展示："><a href="#首页展示：" class="headerlink" title="首页展示："></a>首页展示：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;首页&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h3&gt;首页&lt;/h3&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="实战代码"><a href="#实战代码" class="headerlink" title="实战代码"></a>实战代码</h3><p>以下是注册登录，验证PHP代码逻辑</p><h5 id="index-php"><a href="#index-php" class="headerlink" title="index.php"></a>index.php</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span> /&gt;</span><br><span class="line">&lt;title&gt;梦工厂系统&lt;/title&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"js/jquery-1.9.0.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"js/login.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;link href=<span class="string">"css/login.css"</span> rel=<span class="string">"stylesheet"</span> <span class="built_in">type</span>=<span class="string">"text/css"</span> /&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;</span><br><span class="line">登陆注册系统&lt;sup&gt;V2016&lt;/sup&gt;</span><br><span class="line">&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class=<span class="string">"login"</span> style=<span class="string">"margin-top: 50px;"</span>&gt;</span><br><span class="line">&lt;div class=<span class="string">"header"</span>&gt;</span><br><span class="line">&lt;div class=<span class="string">"switch"</span> id=<span class="string">"switch"</span>&gt;</span><br><span class="line">&lt;a class=<span class="string">"switch_btn_focus"</span> id=<span class="string">"switch_qlogin"</span></span><br><span class="line">href=<span class="string">"javascript:void(0);"</span> tabindex=<span class="string">"7"</span>&gt;快速登录&lt;/a&gt; &lt;a</span><br><span class="line">class=<span class="string">"switch_btn"</span> id=<span class="string">"switch_login"</span> href=<span class="string">"javascript:void(0);"</span></span><br><span class="line">tabindex=<span class="string">"8"</span>&gt;快速注册&lt;/a&gt;</span><br><span class="line">&lt;div class=<span class="string">"switch_bottom"</span> id=<span class="string">"switch_bottom"</span></span><br><span class="line">style=<span class="string">"position: absolute; width: 64px; left: 0px;"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=<span class="string">"web_qr_login"</span> id=<span class="string">"web_qr_login"</span></span><br><span class="line">style=<span class="string">"display: block; height: 235px;"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--登录--&gt;</span><br><span class="line">&lt;div class=<span class="string">"web_login"</span> id=<span class="string">"web_login"</span>&gt;</span><br><span class="line">&lt;div class=<span class="string">"login-box"</span>&gt;</span><br><span class="line">&lt;div class=<span class="string">"login_form"</span>&gt;</span><br><span class="line">&lt;!-- 表单操作 --&gt;</span><br><span class="line">&lt;form action=<span class="string">"doAction.php?act=login"</span> name=<span class="string">"loginform"</span></span><br><span class="line">  accept-charset=<span class="string">"utf-8"</span> id=<span class="string">"login_form"</span> class=<span class="string">"loginForm"</span></span><br><span class="line">  method=<span class="string">"post"</span>&gt;</span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"hidden"</span> name=<span class="string">"did"</span> value=<span class="string">"0"</span> /&gt; &lt;input <span class="built_in">type</span>=<span class="string">"hidden"</span></span><br><span class="line">name=<span class="string">"to"</span> value=<span class="string">"log"</span> /&gt;</span><br><span class="line">&lt;div class=<span class="string">"uinArea"</span> id=<span class="string">"uinArea"</span>&gt;</span><br><span class="line">&lt;label class=<span class="string">"input-tips"</span> <span class="keyword">for</span>=<span class="string">"u"</span>&gt;帐号：&lt;/label&gt;</span><br><span class="line">&lt;div class=<span class="string">"inputOuter"</span> id=<span class="string">"uArea"</span>&gt;</span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> id=<span class="string">"u"</span> name=<span class="string">"username"</span> class=<span class="string">"inputstyle"</span> /&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=<span class="string">"pwdArea"</span> id=<span class="string">"pwdArea"</span>&gt;</span><br><span class="line">&lt;label class=<span class="string">"input-tips"</span> <span class="keyword">for</span>=<span class="string">"p"</span>&gt;密码：&lt;/label&gt;</span><br><span class="line">&lt;div class=<span class="string">"inputOuter"</span> id=<span class="string">"pArea"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"password"</span> id=<span class="string">"p"</span> name=<span class="string">"password"</span> class=<span class="string">"inputstyle"</span> /&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div style=<span class="string">"padding-left: 50px; margin-top: 20px;"</span>&gt;</span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"submit"</span> value=<span class="string">"登 录"</span> style=<span class="string">"width: 150px;"</span></span><br><span class="line">   class=<span class="string">"button_blue"</span> /&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;!--登录end--&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--注册--&gt;</span><br><span class="line">&lt;div class=<span class="string">"qlogin"</span> id=<span class="string">"qlogin"</span> style=<span class="string">"display: none;"</span>&gt;</span><br><span class="line">&lt;div class=<span class="string">"web_login"</span>&gt;</span><br><span class="line">&lt;!-- 表单操作 --&gt;</span><br><span class="line">&lt;form name=<span class="string">"form2"</span> id=<span class="string">"regUser"</span> accept-charset=<span class="string">"utf-8"</span></span><br><span class="line">action=<span class="string">"doAction.php?act=reg"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"hidden"</span> name=<span class="string">"to"</span> value=<span class="string">"reg"</span> /&gt; &lt;input <span class="built_in">type</span>=<span class="string">"hidden"</span></span><br><span class="line">name=<span class="string">"did"</span> value=<span class="string">"0"</span> /&gt;</span><br><span class="line">&lt;ul class=<span class="string">"reg_form"</span> id=<span class="string">"reg-ul"</span>&gt;</span><br><span class="line">&lt;div id=<span class="string">"userCue"</span> class=<span class="string">"cue"</span>&gt;快速注册请注意格式&lt;/div&gt;</span><br><span class="line">&lt;li&gt;&lt;label <span class="keyword">for</span>=<span class="string">"user"</span> class=<span class="string">"input-tips2"</span>&gt;用户名：&lt;/label&gt;</span><br><span class="line">&lt;div class=<span class="string">"inputOuter2"</span>&gt;</span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> id=<span class="string">"user"</span> name=<span class="string">"username"</span> maxlength=<span class="string">"16"</span></span><br><span class="line">class=<span class="string">"inputstyle2"</span> /&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;label <span class="keyword">for</span>=<span class="string">"passwd"</span> class=<span class="string">"input-tips2"</span>&gt;密码：&lt;/label&gt;</span><br><span class="line">&lt;div class=<span class="string">"inputOuter2"</span>&gt;</span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"password"</span> id=<span class="string">"passwd"</span> name=<span class="string">"password"</span> maxlength=<span class="string">"16"</span></span><br><span class="line">class=<span class="string">"inputstyle2"</span> /&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;label <span class="keyword">for</span>=<span class="string">"passwd2"</span> class=<span class="string">"input-tips2"</span>&gt;确认密码：&lt;/label&gt;</span><br><span class="line">&lt;div class=<span class="string">"inputOuter2"</span>&gt;</span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"password"</span> id=<span class="string">"passwd2"</span> name=<span class="string">"password2"</span> maxlength=<span class="string">"16"</span></span><br><span class="line">class=<span class="string">"inputstyle2"</span> /&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line"></span><br><span class="line">&lt;li&gt;&lt;label <span class="keyword">for</span>=<span class="string">"email"</span> class=<span class="string">"input-tips2"</span>&gt;邮箱：&lt;/label&gt;</span><br><span class="line">&lt;div class=<span class="string">"inputOuter2"</span>&gt;</span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"email"</span> id=<span class="string">"email"</span> name=<span class="string">"email"</span> class=<span class="string">"inputstyle2"</span> /&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;li&gt;</span><br><span class="line">&lt;div class=<span class="string">"inputArea"</span>&gt;</span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"button"</span> id=<span class="string">"reg"</span></span><br><span class="line">style=<span class="string">"margin-top: 10px; margin-left: 85px;"</span></span><br><span class="line">class=<span class="string">"button_blue"</span> value=<span class="string">"同意协议并注册"</span> /&gt; &lt;a href=<span class="string">"#"</span> class=<span class="string">"zcxy"</span></span><br><span class="line">target=<span class="string">"_blank"</span>&gt;注册协议&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;div class=<span class="string">"cl"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;!--注册end--&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="login-css"><a href="#login-css" class="headerlink" title="login.css"></a>login.css</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br></pre></td><td class="code"><pre><span class="line">html &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">body &#123;</span><br><span class="line">font-family:<span class="string">"Microsoft Yahei"</span>;</span><br><span class="line">font-size:12px;</span><br><span class="line">margin:0;</span><br><span class="line">background: <span class="comment">#fff url(../images/1.jpg) 50% 0 no-repeat;&#125;</span></span><br><span class="line">ul &#123;</span><br><span class="line">padding:0;</span><br><span class="line">margin:0;</span><br><span class="line">&#125;</span><br><span class="line">ul li &#123;</span><br><span class="line">list-style-type:none;</span><br><span class="line">&#125;</span><br><span class="line">a &#123;</span><br><span class="line">text-decoration:none;</span><br><span class="line">&#125;</span><br><span class="line">a:hover &#123;</span><br><span class="line">text-decoration:none;color:<span class="comment">#f00;</span></span><br><span class="line">&#125;</span><br><span class="line">.cl&#123; clear: both;&#125;</span><br><span class="line">input[<span class="built_in">type</span>=<span class="string">"text"</span>]:focus, input[<span class="built_in">type</span>=<span class="string">"password"</span>]:focus &#123;</span><br><span class="line">outline:none;</span><br><span class="line">&#125;</span><br><span class="line">input::-ms-clear &#123;</span><br><span class="line">display:none;</span><br><span class="line">&#125;</span><br><span class="line">.login &#123;</span><br><span class="line">margin:0 auto;</span><br><span class="line">width:370px;</span><br><span class="line">border:2px solid <span class="comment">#eee;</span></span><br><span class="line">border-bottom:none;</span><br><span class="line">position:relative;</span><br><span class="line">&#125;</span><br><span class="line">.header &#123;</span><br><span class="line">height:50px;</span><br><span class="line">border-bottom:1px solid <span class="comment">#e2e2e2;</span></span><br><span class="line">position:relative;</span><br><span class="line">font-family:<span class="string">"Microsoft Yahei"</span>;</span><br><span class="line">&#125;</span><br><span class="line">.header .switch &#123;</span><br><span class="line">height:45px;</span><br><span class="line">position:absolute;</span><br><span class="line">left:60px;</span><br><span class="line">bottom:0;</span><br><span class="line">font-size:16px;</span><br><span class="line">&#125;</span><br><span class="line">.header .switch <span class="comment">#switch_qlogin &#123;</span></span><br><span class="line">margin-right:85px;</span><br><span class="line">&#125;</span><br><span class="line">.header .switch .switch_btn &#123;</span><br><span class="line">color:<span class="comment">#999;</span></span><br><span class="line">display:inline-block;</span><br><span class="line">height:45px;</span><br><span class="line">line-height:45px;</span><br><span class="line">outline:none;</span><br><span class="line">*hide-focus:expression(this.hideFocus=<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">.header .switch .switch_btn_focus &#123;</span><br><span class="line">color:<span class="comment">#333;</span></span><br><span class="line">display:inline-block;</span><br><span class="line">height:45px;</span><br><span class="line">line-height:45px;</span><br><span class="line">outline:none;</span><br><span class="line">*hide-focus:expression(this.hideFocus=<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">.header .switch .switch_btn:hover &#123;</span><br><span class="line">color:<span class="comment">#333;</span></span><br><span class="line">text-decoration:none;</span><br><span class="line">&#125;</span><br><span class="line">.header .switch .switch_btn_focus:hover &#123;</span><br><span class="line">text-decoration:none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#switch_bottom &#123;</span></span><br><span class="line">position:absolute;</span><br><span class="line">bottom:-1px;_bottom:-2px;</span><br><span class="line">border-bottom:2px solid <span class="comment">#848484;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.web_login &#123;</span><br><span class="line">width:370px;</span><br><span class="line">position:relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#web_login&#123;_left:60px;*left:0;&#125;</span></span><br><span class="line">.web_login .login_form &#123;</span><br><span class="line">width:272px;</span><br><span class="line">margin:0 auto;</span><br><span class="line">&#125;</span><br><span class="line">.web_login .reg_form &#123;</span><br><span class="line">width:300px;</span><br><span class="line">margin:0 auto;</span><br><span class="line">&#125;</span><br><span class="line">.web_login .input-tips &#123;</span><br><span class="line"><span class="built_in">float</span>:left;</span><br><span class="line">margin-top:10px;</span><br><span class="line">width:50px;</span><br><span class="line">height:42px;</span><br><span class="line">font-size:16px;</span><br><span class="line">line-height:42px;</span><br><span class="line">font-family:<span class="string">"Hiragino Sans GB"</span>, <span class="string">"Microsoft Yahei"</span>;</span><br><span class="line">&#125;</span><br><span class="line">.web_login .input-tips2 &#123;</span><br><span class="line"><span class="built_in">float</span>:left;</span><br><span class="line">text-align:right;</span><br><span class="line">padding-right:10px;</span><br><span class="line">width:75px;</span><br><span class="line">height:30px;</span><br><span class="line">font-size:16px;</span><br><span class="line">margin-top:10px;</span><br><span class="line">clear:both;</span><br><span class="line">line-height:30px;</span><br><span class="line">font-family:<span class="string">"Hiragino Sans GB"</span>, <span class="string">"Microsoft Yahei"</span>;</span><br><span class="line">&#125;</span><br><span class="line">.web_login .inputOuter &#123;</span><br><span class="line">width:200px;</span><br><span class="line">height:42px;</span><br><span class="line">margin-top:10px;</span><br><span class="line"><span class="built_in">float</span>:left;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.web_login .inputOuter2 &#123;</span><br><span class="line">width:200px;</span><br><span class="line">margin-top:6px;margin-top:5px\9;</span><br><span class="line"><span class="built_in">float</span>:left;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.web_login .inputstyle &#123;</span><br><span class="line">width:200px;</span><br><span class="line">height:38px;</span><br><span class="line">padding-left:5px;</span><br><span class="line">line-height:30px;line-height:38px;</span><br><span class="line">border:1px solid <span class="comment">#D7D7D7;</span></span><br><span class="line">background:<span class="comment">#fff;</span></span><br><span class="line">color:<span class="comment">#333;border-radius:2px;</span></span><br><span class="line">font-family:Verdana, Tahoma, Arial;</span><br><span class="line">font-size:16px;</span><br><span class="line">ime-mode:disabled;</span><br><span class="line">&#125;</span><br><span class="line">.web_login input.inputstyle2:focus,.web_login input.inputstyle:focus&#123;border:1px solid <span class="comment">#198BD4;box-shadow:0 0 2px #198BD4;&#125;</span></span><br><span class="line">.web_login .inputstyle2 &#123;</span><br><span class="line">width:200px;</span><br><span class="line">height:34px;</span><br><span class="line">padding-left:5px;</span><br><span class="line">line-height:34px;</span><br><span class="line">border:1px solid <span class="comment">#D7D7D7;</span></span><br><span class="line">background:<span class="comment">#fff;</span></span><br><span class="line">color:<span class="comment">#333;border-radius:2px;</span></span><br><span class="line">font-family:Verdana, Tahoma, Arial;</span><br><span class="line">font-size:16px;</span><br><span class="line">ime-mode:disabled;</span><br><span class="line">&#125;</span><br><span class="line">.web_login .uinArea &#123;</span><br><span class="line">height:55px;</span><br><span class="line">position:relative;</span><br><span class="line">z-index:10;</span><br><span class="line">&#125;</span><br><span class="line">.web_login .pwdArea &#123;</span><br><span class="line">height:55px;</span><br><span class="line">margin-bottom:10px;</span><br><span class="line">position:relative;</span><br><span class="line">z-index:3;</span><br><span class="line">&#125;</span><br><span class="line">.web_qr_login &#123;</span><br><span class="line">position:relative;</span><br><span class="line"></span><br><span class="line">overflow:hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.cue &#123;</span><br><span class="line">height:40px;</span><br><span class="line">line-height:40px;</span><br><span class="line">font-size:14px;</span><br><span class="line">border:1px <span class="comment">#CCCCCC solid;</span></span><br><span class="line">margin-top:10px;margin-bottom:5px;</span><br><span class="line">text-align:center;</span><br><span class="line">font-family:<span class="string">"Hiragino Sans GB"</span>, <span class="string">"Microsoft Yahei"</span>;</span><br><span class="line">&#125;</span><br><span class="line">.login &#123;</span><br><span class="line">background-color:<span class="comment">#ffffff;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h1&#123;margin:80px auto 50px auto;text-align:center;color:<span class="comment">#fff;margin-left:-25px;font-size:35px;font-weight: bold;text-shadow: 0px 1px 1px #555;&#125;</span></span><br><span class="line">h1 sup&#123;</span><br><span class="line">    font-size: 18px;</span><br><span class="line">    font-style: normal;</span><br><span class="line">    position: absolute;</span><br><span class="line">    margin-left: 10px;&#125;</span><br><span class="line">.login &#123;border:0;padding:5px 0;</span><br><span class="line">background: <span class="comment">#fff;</span></span><br><span class="line">margin: 0 auto;</span><br><span class="line">-webkit-box-shadow: 1px 1px 2px 0 rgba(0, 0, 0, .3);</span><br><span class="line">box-shadow: 1px 1px 2px 0 rgba(0, 0, 0, .3);&#125;</span><br><span class="line"></span><br><span class="line">.web_login&#123;padding-bottom:20px;&#125;</span><br><span class="line"></span><br><span class="line">.jianyi&#123;color:<span class="comment">#fff;text-align:center;margin-top:25px;color:#B3B8C4;&#125;</span></span><br><span class="line">.reg_form li &#123;</span><br><span class="line">height: 55px;</span><br><span class="line">&#125;</span><br><span class="line">.cue &#123;</span><br><span class="line">margin-top: 15px;</span><br><span class="line">margin-bottom: 10px;border:1px solid <span class="comment">#eee;border-radius:3px;</span></span><br><span class="line">&#125;</span><br><span class="line">.web_login input.inputstyle2:focus, .web_login input.inputstyle:focus &#123;</span><br><span class="line">border: 1px solid <span class="comment">#5796f;</span></span><br><span class="line">box-shadow: 0 0 0;</span><br><span class="line">&#125;</span><br><span class="line">.web_login .reg_form &#123;</span><br><span class="line">width: 300px;</span><br><span class="line">margin: 0 auto;</span><br><span class="line">&#125;</span><br><span class="line">.web_login .inputstyle2 &#123;border-radius:2px;width:210px;&#125;</span><br><span class="line">.web_login .input-tips2 &#123;</span><br><span class="line">padding-right: 5px;</span><br><span class="line">width: 80px;_width: 75px;_font-size:12px;&#125;</span><br><span class="line">.button_blue</span><br><span class="line">&#123;</span><br><span class="line">display:inline-block;</span><br><span class="line"><span class="built_in">float</span>:left;</span><br><span class="line">height:41px;border-radius:4px;</span><br><span class="line">background:<span class="comment">#2795dc;border:none;cursor:pointer;</span></span><br><span class="line">border-bottom:3px solid <span class="comment">#0078b3;*border-bottom:none;</span></span><br><span class="line">color:<span class="comment">#fff;</span></span><br><span class="line">font-size:16px;padding:0 10px;*width:140px;</span><br><span class="line">text-align:center;outline:none;font-family: <span class="string">"Microsoft Yahei"</span>,Arial, Helvetica, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line">input.button_blue:hover</span><br><span class="line">&#123;</span><br><span class="line">background:<span class="comment">#0081c1;</span></span><br><span class="line">border-bottom:3px solid <span class="comment">#006698;*border-bottom:none;</span></span><br><span class="line">color:<span class="comment">#fff;</span></span><br><span class="line">text-decoration:none;</span><br><span class="line">&#125;</span><br><span class="line">a.zcxy &#123;text-decoration: underline;line-height:58px;margin-left:15px;color: <span class="comment">#959ca8;&#125;</span></span><br><span class="line">.web_login .login_form &#123;margin-top:30px;&#125;</span><br><span class="line">.web_login .uinArea &#123;</span><br><span class="line">height: 60px;&#125;</span><br><span class="line">.header .switch&#123;left:70px;&#125;</span><br></pre></td></tr></table></figure><h5 id="login-js"><a href="#login-js" class="headerlink" title="login.js"></a>login.js</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">$(<span class="string">'#switch_qlogin'</span>).click(</span><br><span class="line"><span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">$(<span class="string">'#switch_login'</span>).removeClass(<span class="string">"switch_btn_focus"</span>).addClass(</span><br><span class="line"><span class="string">'switch_btn'</span>);</span><br><span class="line">$(<span class="string">'#switch_qlogin'</span>).removeClass(<span class="string">"switch_btn"</span>).addClass(</span><br><span class="line"><span class="string">'switch_btn_focus'</span>);</span><br><span class="line">$(<span class="string">'#switch_bottom'</span>).animate(&#123;</span><br><span class="line">left : <span class="string">'0px'</span>,</span><br><span class="line">width : <span class="string">'70px'</span></span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">'#qlogin'</span>).css(<span class="string">'display'</span>, <span class="string">'none'</span>);</span><br><span class="line">$(<span class="string">'#web_qr_login'</span>).css(<span class="string">'display'</span>, <span class="string">'block'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">'#switch_login'</span>).click(</span><br><span class="line"><span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">$(<span class="string">'#switch_login'</span>).removeClass(<span class="string">"switch_btn"</span>).addClass(</span><br><span class="line"><span class="string">'switch_btn_focus'</span>);</span><br><span class="line">$(<span class="string">'#switch_qlogin'</span>).removeClass(<span class="string">"switch_btn_focus"</span>).addClass(</span><br><span class="line"><span class="string">'switch_btn'</span>);</span><br><span class="line">$(<span class="string">'#switch_bottom'</span>).animate(&#123;</span><br><span class="line">left : <span class="string">'154px'</span>,</span><br><span class="line">width : <span class="string">'70px'</span></span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">'#qlogin'</span>).css(<span class="string">'display'</span>, <span class="string">'block'</span>);</span><br><span class="line">$(<span class="string">'#web_qr_login'</span>).css(<span class="string">'display'</span>, <span class="string">'none'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">if</span> (getParam(<span class="string">"a"</span>) == <span class="string">'0'</span>) &#123;</span><br><span class="line">$(<span class="string">'#switch_login'</span>).trigger(<span class="string">'click'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">logintab</span></span>()&#123;</span><br><span class="line">scrollTo(0);</span><br><span class="line">$(<span class="string">'#switch_qlogin'</span>).removeClass(<span class="string">"switch_btn_focus"</span>).addClass(<span class="string">'switch_btn'</span>);</span><br><span class="line">$(<span class="string">'#switch_login'</span>).removeClass(<span class="string">"switch_btn"</span>).addClass(<span class="string">'switch_btn_focus'</span>);</span><br><span class="line">$(<span class="string">'#switch_bottom'</span>).animate(&#123;left:<span class="string">'154px'</span>,width:<span class="string">'96px'</span>&#125;);</span><br><span class="line">$(<span class="string">'#qlogin'</span>).css(<span class="string">'display'</span>,<span class="string">'none'</span>);</span><br><span class="line">$(<span class="string">'#web_qr_login'</span>).css(<span class="string">'display'</span>,<span class="string">'block'</span>);</span><br><span class="line">&#125;</span><br><span class="line">//根据参数名获得该参数 pname等于想要的参数名 </span><br><span class="line"><span class="keyword">function</span> getParam(pname) &#123; </span><br><span class="line">    var params = location.search.substr(1); // 获取参数 平且去掉？ </span><br><span class="line">    var ArrParam = params.split(<span class="string">'&amp;'</span>); </span><br><span class="line">    <span class="keyword">if</span> (ArrParam.length == 1) &#123; </span><br><span class="line">        //只有一个参数的情况 </span><br><span class="line">        <span class="built_in">return</span> params.split(<span class="string">'='</span>)[1]; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> &#123; </span><br><span class="line">         //多个参数参数的情况 </span><br><span class="line">        <span class="keyword">for</span> (var i = 0; i &lt; ArrParam.length; i++) &#123; </span><br><span class="line">            <span class="keyword">if</span> (ArrParam[i].split(<span class="string">'='</span>)[0] == pname) &#123; </span><br><span class="line">                <span class="built_in">return</span> ArrParam[i].split(<span class="string">'='</span>)[1]; </span><br><span class="line">            &#125; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;  </span><br><span class="line">var reMethod = <span class="string">"GET"</span>,</span><br><span class="line">pwdmin = 6;</span><br><span class="line">$(document).ready(<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">$(<span class="string">'#user'</span>).blur(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">$.ajax(&#123;</span><br><span class="line"><span class="built_in">type</span>: reMethod,</span><br><span class="line">url: <span class="string">"doAction.php?act=checkUser"</span>,</span><br><span class="line">data: <span class="string">"username="</span> + $(<span class="string">"#user"</span>).val(),</span><br><span class="line">dataType: <span class="string">'html'</span>,</span><br><span class="line">success: <span class="keyword">function</span>(result) &#123;</span><br><span class="line"><span class="keyword">if</span> (result==1) &#123;</span><br><span class="line">$(<span class="string">'#user'</span>).focus().css(&#123;</span><br><span class="line">border: <span class="string">"1px solid red"</span>,</span><br><span class="line">boxShadow: <span class="string">"0 0 2px red"</span></span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">"#userCue"</span>).html(<span class="string">'用户名已存在!'</span>);</span><br><span class="line"><span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$(<span class="string">'#user'</span>).css(&#123;</span><br><span class="line">border: <span class="string">"1px solid #D7D7D7"</span>,</span><br><span class="line">boxShadow: <span class="string">"none"</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="string">'#reg'</span>).click(<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line"><span class="keyword">if</span> ($(<span class="string">'#user'</span>).val() == <span class="string">""</span>) &#123;</span><br><span class="line">$(<span class="string">'#user'</span>).focus().css(&#123;</span><br><span class="line">border: <span class="string">"1px solid red"</span>,</span><br><span class="line">boxShadow: <span class="string">"0 0 2px red"</span></span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">'#userCue'</span>).html(<span class="string">"&lt;font color='red'&gt;&lt;b&gt;×用户名不能为空&lt;/b&gt;&lt;/font&gt;"</span>);</span><br><span class="line"><span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($(<span class="string">'#user'</span>).val().length &lt; 4 || $(<span class="string">'#user'</span>).val().length &gt; 16) &#123;</span><br><span class="line">$(<span class="string">'#user'</span>).focus().css(&#123;</span><br><span class="line">border: <span class="string">"1px solid red"</span>,</span><br><span class="line">boxShadow: <span class="string">"0 0 2px red"</span></span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">'#userCue'</span>).html(<span class="string">"&lt;font color='red'&gt;&lt;b&gt;×用户名位4-16字符&lt;/b&gt;&lt;/font&gt;"</span>);</span><br><span class="line"><span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($(<span class="string">'#passwd'</span>).val().length &lt; pwdmin) &#123;</span><br><span class="line">$(<span class="string">'#passwd'</span>).focus();</span><br><span class="line">$(<span class="string">'#userCue'</span>).html(<span class="string">"&lt;font color='red'&gt;&lt;b&gt;×密码不能小于"</span> + pwdmin + <span class="string">"位&lt;/b&gt;&lt;/font&gt;"</span>);</span><br><span class="line"><span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($(<span class="string">'#passwd2'</span>).val() != $(<span class="string">'#passwd'</span>).val()) &#123;</span><br><span class="line">$(<span class="string">'#passwd2'</span>).focus();</span><br><span class="line">$(<span class="string">'#userCue'</span>).html(<span class="string">"&lt;font color='red'&gt;&lt;b&gt;×两次密码不一致！&lt;/b&gt;&lt;/font&gt;"</span>);</span><br><span class="line"><span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">var reg = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/; </span><br><span class="line"><span class="keyword">if</span> (!reg.test($(<span class="string">'#email'</span>).val())) &#123;</span><br><span class="line">$(<span class="string">'#email'</span>).focus().css(&#123;</span><br><span class="line">border: <span class="string">"1px solid red"</span>,</span><br><span class="line">boxShadow: <span class="string">"0 0 2px red"</span></span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">'#userCue'</span>).html(<span class="string">"&lt;font color='red'&gt;&lt;b&gt;×email格式不正确&lt;/b&gt;&lt;/font&gt;"</span>);<span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$(<span class="string">'#email'</span>).css(&#123;</span><br><span class="line">border: <span class="string">"1px solid #D7D7D7"</span>,</span><br><span class="line">boxShadow: <span class="string">"none"</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">$(<span class="string">'#regUser'</span>).submit();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="doAction-php"><a href="#doAction-php" class="headerlink" title="doAction.php"></a>doAction.php</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line"></span><br><span class="line">//基础引入</span><br><span class="line">require_once <span class="string">'functions/mysql.func.php'</span>;</span><br><span class="line">require_once <span class="string">'config/config.php'</span>;</span><br><span class="line">//邮件发送库</span><br><span class="line">require_once <span class="string">'swiftmailer-master/lib/swift_required.php'</span>;</span><br><span class="line"></span><br><span class="line">require_once <span class="string">'functions/common.func.php'</span>;</span><br><span class="line"></span><br><span class="line">//接受信息</span><br><span class="line"><span class="variable">$act</span> = <span class="variable">$_REQUEST</span>[<span class="string">'act'</span>];        // 请求跳转操作</span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">'username'</span>]; // 用户名</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">'password'</span>]; // 密码</span><br><span class="line"></span><br><span class="line"><span class="variable">$link</span> = connect3(); // 连接数据库</span><br><span class="line"></span><br><span class="line"><span class="variable">$table</span> = <span class="string">'maizi_user'</span>;</span><br><span class="line"></span><br><span class="line">// 根据用户不同操作执行不同功能</span><br><span class="line">switch (<span class="variable">$act</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> <span class="string">'reg'</span>:</span><br><span class="line"></span><br><span class="line">        // 事务操作</span><br><span class="line">        // 1.关闭自动提交</span><br><span class="line">        mysqli_autocommit(<span class="variable">$link</span>, FALSE);</span><br><span class="line"></span><br><span class="line">        // 用户输入加产生数据</span><br><span class="line">        <span class="variable">$email</span> = <span class="variable">$_POST</span>[<span class="string">'email'</span>];</span><br><span class="line">        <span class="variable">$reg_time</span> = time();</span><br><span class="line">        <span class="variable">$token</span> = md5(<span class="variable">$username</span>.<span class="variable">$password</span>.<span class="variable">$reg_time</span>); // 生成Token</span><br><span class="line">        <span class="variable">$token_exptime</span> = <span class="variable">$reg_time</span>+24*3600; // Token过期时间</span><br><span class="line">        <span class="variable">$status</span> = 1; // Token过期时间</span><br><span class="line">        <span class="variable">$data</span> = compact(<span class="string">"username"</span>, <span class="string">"password"</span>,<span class="string">"email"</span>,<span class="string">"reg_time"</span>,<span class="string">"token"</span>,<span class="string">"token_exptime"</span>,<span class="string">"status"</span>);</span><br><span class="line"></span><br><span class="line">        // 插入数据</span><br><span class="line">        <span class="variable">$res_insert</span> = insert(<span class="variable">$link</span>, <span class="variable">$data</span>, <span class="variable">$table</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$res_insert</span>) &#123;</span><br><span class="line">            mysqli_commit(<span class="variable">$link</span>);</span><br><span class="line">            mysqli_autocommit(<span class="variable">$link</span>, TRUE);</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"&lt;script&gt;alert('注册成功,立即登录');location.href='index.php'&lt;/script&gt;"</span>;</span><br><span class="line">            //alertMessage(<span class="string">'注册成功,立即登录'</span>, <span class="string">'index.php'</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mysqli_rollback(<span class="variable">$link</span>);</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"&lt;script&gt;alert('注册失败,重新注册');location.href='index.php'&lt;/script&gt;"</span>;</span><br><span class="line">            //alertMessage(<span class="string">'注册失败,重新注册'</span>, <span class="string">'index.php'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line">        // ================================== 发送邮件: 存在问题, 待调试 ==================================</span><br><span class="line">        // 1. 初始化邮件服务器对象</span><br><span class="line">        <span class="variable">$transport</span> = Swift_SmtpTransport::newInstance(<span class="string">'smtp.qq.com'</span>, 25);</span><br><span class="line">        // 设置邮箱信息</span><br><span class="line">        <span class="variable">$transport</span>-&gt;setUsername(Mail_Name);</span><br><span class="line">        <span class="variable">$transport</span>-&gt;setUsername(Mail_PWD);</span><br><span class="line"></span><br><span class="line">        // 发送邮件对象</span><br><span class="line">        <span class="variable">$mailer</span> = Swift_Mailer::newInstance(<span class="variable">$transport</span>);</span><br><span class="line"></span><br><span class="line">        // ================= 消息对象: 发件人,收件人,设置主题和内天 =================</span><br><span class="line">        <span class="variable">$message</span> = Swift_Message::newInstance();</span><br><span class="line">        //发件人</span><br><span class="line">        <span class="variable">$message</span>-&gt;setFrom(array(Mail_Name));</span><br><span class="line">        //收件人</span><br><span class="line">        <span class="variable">$message</span>-&gt;setTo(array(<span class="variable">$email</span>));</span><br><span class="line"></span><br><span class="line">        //主题</span><br><span class="line">        <span class="variable">$message</span>-&gt;setSubject(<span class="string">"【梦工厂@iCocos】注册账号激活主题"</span>);</span><br><span class="line">        //内容</span><br><span class="line">        <span class="variable">$actStr</span> = <span class="string">"?act=active&amp;username=&#123;<span class="variable">$username</span>&#125;&amp;token=&#123;<span class="variable">$token</span>&#125;"</span>;</span><br><span class="line">        <span class="variable">$url</span> = <span class="string">"http://"</span>.<span class="variable">$_SERVER</span>[<span class="string">'HTTP_HOST'</span>].<span class="variable">$_SERVER</span>[<span class="string">'PHP_SELF'</span>].<span class="variable">$actStr</span>;</span><br><span class="line">        <span class="variable">$urlEncode</span> = urlencode(<span class="variable">$url</span>);</span><br><span class="line">        <span class="variable">$messageBody</span> = &lt;&lt;&lt;EOF</span><br><span class="line">        尊敬的梦工厂用户，您好:</span><br><span class="line">        账号 &#123;<span class="variable">$email</span>&#125; ，注册并创建成功，请点击并激活, 前往主页, 详情如下：</span><br><span class="line">        &lt;a href=<span class="string">'&#123;$url&#125;'</span> target=<span class="string">'_blank'</span>&gt;&#123;<span class="variable">$urlEncode</span>&#125;&lt;/a&gt;</span><br><span class="line">        (该链接24小时内有效)</span><br><span class="line">        感谢您使用梦工厂，如果您在使用过程中有任何疑问，请参见下方提交工单联系我们。</span><br><span class="line">        谢谢！</span><br><span class="line">EOF;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$message</span>-&gt;setBody(<span class="variable">$messageBody</span>, <span class="string">"text/html"</span>,<span class="string">'utf-8'</span>);</span><br><span class="line"></span><br><span class="line">        // 附件</span><br><span class="line">        <span class="variable">$path</span> = <span class="string">"images/maizi.png"</span>;</span><br><span class="line">        <span class="variable">$message</span>-&gt;attach(Swift_Attachment::fromPath(<span class="variable">$path</span>, <span class="string">'image/png'</span>));</span><br><span class="line"></span><br><span class="line">        // 发送操作</span><br><span class="line">        try &#123;</span><br><span class="line">            <span class="variable">$mail_res</span> = <span class="variable">$mailer</span>-&gt;send(<span class="variable">$message</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$mail_res</span> &amp;&amp; <span class="variable">$res_insert</span>) &#123;</span><br><span class="line">                mysqli_commit(<span class="variable">$link</span>);</span><br><span class="line">                mysqli_autocommit(<span class="variable">$link</span>, TRUE);</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"&lt;script&gt;alert('注册成功,立即登录');location.href='index.php'&lt;/script&gt;"</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                mysqli_rollback(<span class="variable">$link</span>);</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"&lt;script&gt;alert('注册失败,重新注册');location.href='index.php'&lt;/script&gt;"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (Swift_ConnectionException <span class="variable">$e</span>) &#123;</span><br><span class="line">            die(<span class="string">"邮件服务器错误"</span>) . <span class="variable">$e</span>-&gt;getMessage();</span><br><span class="line">        &#125;</span><br><span class="line">        // ================================== 发送邮件 ==================================</span><br><span class="line">        <span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> <span class="string">'login'</span>:  // 用户登录操作</span><br><span class="line">        <span class="variable">$username</span> = addslashes(<span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">"SELECT id, status FROM &#123;<span class="variable">$table</span>&#125; WHERE username='&#123;<span class="variable">$username</span>&#125;' AND password='&#123;<span class="variable">$password</span>&#125;'"</span>;</span><br><span class="line">        <span class="variable">$user</span> = fetchOne(<span class="variable">$link</span>, <span class="variable">$sql</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$user</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$user</span>[<span class="string">'status'</span>] == 0) &#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"&lt;script&gt;alert('请先激活,再登录');location.href='index.php'&lt;/script&gt;"</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"&lt;script&gt;alert('登录成功');location.href='index.php'&lt;/script&gt;"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"&lt;script&gt;alert('用户名密码错误');location.href='index.php'&lt;/script&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> <span class="string">'active'</span>:  // 邮箱邮件外链激活操作</span><br><span class="line">        // http://com.mysqli.php:8888/logregmail/doAction.php</span><br><span class="line">        // act=active&amp;username=sdsds&amp;token=ec821fcf18762a8cce7df5c47874b2f4</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"点击邮件连接,跳转并激活成功,设置表status状态为1"</span>;</span><br><span class="line">        <span class="variable">$token</span> = <span class="variable">$_POST</span>[<span class="string">'token'</span>]; // token</span><br><span class="line">        <span class="variable">$username</span> = mysqli_real_escape_string(<span class="variable">$link</span>, <span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$query</span> = <span class="string">"SELECT id, token_exptime FROM &#123;<span class="variable">$table</span>&#125; WHERE username='&#123;<span class="variable">$username</span>&#125;'"</span>;</span><br><span class="line">        <span class="variable">$user</span> = fetchOne(<span class="variable">$link</span>, <span class="variable">$query</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$user</span>) &#123;</span><br><span class="line">            // 检查是否超时</span><br><span class="line">            <span class="variable">$now</span> = time();</span><br><span class="line">            <span class="variable">$token_exptime</span> = <span class="variable">$user</span>[<span class="string">'token_exptime'</span>];</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$now</span>&gt;<span class="variable">$token_exptime</span>) &#123;</span><br><span class="line">                // 清空用户</span><br><span class="line">                delete(<span class="variable">$link</span>, <span class="variable">$table</span>, <span class="string">"username='&#123;<span class="variable">$username</span>&#125;'"</span>);</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"&lt;script&gt;alert('激活码无效,或者过期,请重新注册!!!');location.href='index.php'&lt;/script&gt;"</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                // 激活操作:update-ststus</span><br><span class="line">                <span class="variable">$data</span>=array(<span class="string">'status'</span>=&gt;1);</span><br><span class="line">                <span class="variable">$update</span> = update(<span class="variable">$link</span>, <span class="variable">$data</span>, <span class="variable">$table</span>, <span class="string">"username='&#123;<span class="variable">$username</span>&#125;'"</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$update</span>) &#123;</span><br><span class="line">                    <span class="built_in">echo</span> <span class="string">"&lt;script&gt;alert('激活成功, 立即登录');location.href='index.php'&lt;/script&gt;"</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="built_in">echo</span> <span class="string">"&lt;script&gt;alert('激活失败,请重新激活!');location.href='index.php'&lt;/script&gt;"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"&lt;script&gt;alert('激活失败,没有找到要激活的用户!!!');location.href='index.php'&lt;/script&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'checkUser'</span>:  // Ajax用户注册状态检测</span><br><span class="line">        <span class="variable">$username</span> = mysqli_real_escape_string(<span class="variable">$link</span>, <span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$query</span> = <span class="string">"SELECT id FROM &#123;<span class="variable">$table</span>&#125; WHERE username='&#123;<span class="variable">$username</span>&#125;'"</span>;</span><br><span class="line">        <span class="variable">$user</span> = fetchOne(<span class="variable">$link</span>, <span class="variable">$query</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$user</span>) &#123;</span><br><span class="line">            <span class="built_in">return</span> 1;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">return</span> 0;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">break</span>;</span><br><span class="line">    default:</span><br><span class="line">        die(<span class="string">"非法操作"</span>);</span><br><span class="line">        <span class="built_in">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="config-php"><a href="#config-php" class="headerlink" title="config.php"></a>config.php</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="variable">$config</span>=[</span><br><span class="line"><span class="string">'host'</span>=&gt;<span class="string">'localhost'</span>,</span><br><span class="line"><span class="string">'user'</span>=&gt;<span class="string">'root'</span>,</span><br><span class="line"><span class="string">'password'</span>=&gt;<span class="string">'root'</span>,</span><br><span class="line"><span class="string">'charset'</span>=&gt;<span class="string">'utf8'</span>,</span><br><span class="line"><span class="string">'dbName'</span>=&gt;<span class="string">'maizi'</span>,</span><br><span class="line"><span class="string">'dbPort'</span>=&gt;<span class="string">'8889'</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">define(<span class="string">'DB_HOST'</span>,<span class="string">'localhost'</span>);</span><br><span class="line">define(<span class="string">'DB_USER'</span>,<span class="string">'root'</span>);</span><br><span class="line">define(<span class="string">'DB_PWD'</span>,<span class="string">'root'</span>);</span><br><span class="line">define(<span class="string">'DB_CHARSET'</span>,<span class="string">'utf8'</span>);</span><br><span class="line">define(<span class="string">'DB_DBNAME'</span>,<span class="string">'maizi'</span>);</span><br><span class="line">define(<span class="string">'DB_PORT'</span>,<span class="string">'8889'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">define(<span class="string">'Mail_Name'</span>,<span class="string">'2211523681@qq.com'</span>);</span><br><span class="line">define(<span class="string">'Mail_PWD'</span>,<span class="string">'???????'</span>);</span><br></pre></td></tr></table></figure><h5 id="mysql-func-php"><a href="#mysql-func-php" class="headerlink" title="mysql.func.php"></a>mysql.func.php</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line"> * 连接</span><br><span class="line"> * @param string <span class="variable">$host</span></span><br><span class="line"> * @param string <span class="variable">$user</span></span><br><span class="line"> * @param string <span class="variable">$password</span></span><br><span class="line"> * @param string <span class="variable">$charset</span></span><br><span class="line"> * @param string <span class="variable">$database</span></span><br><span class="line"> * @<span class="built_in">return</span> object 连接标识符</span><br><span class="line"> */</span><br><span class="line"><span class="keyword">function</span> connect1(<span class="variable">$host</span>,<span class="variable">$user</span>,<span class="variable">$password</span>,<span class="variable">$charset</span>,<span class="variable">$database</span>) &#123;</span><br><span class="line"><span class="variable">$link</span> = mysqli_connect ( <span class="variable">$host</span>, <span class="variable">$user</span>, <span class="variable">$password</span> ) or die ( <span class="string">'数据库连接失败&lt;br/&gt;ERROR '</span> . mysqli_connect_errno () . <span class="string">':'</span> . mysqli_connect_error () );</span><br><span class="line">mysqli_set_charset ( <span class="variable">$link</span>, <span class="variable">$charset</span> );</span><br><span class="line">mysqli_select_db ( <span class="variable">$link</span>, <span class="variable">$database</span> ) or die ( <span class="string">'指定数据库打开失败&lt;br/&gt;ERROR '</span> . mysqli_errno ( <span class="variable">$link</span> ) . <span class="string">':'</span> . mysqli_error ( <span class="variable">$link</span> ) );</span><br><span class="line"><span class="built_in">return</span> <span class="variable">$link</span>;</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * 连接 需要传递数组</span><br><span class="line"> * @param array <span class="variable">$config</span></span><br><span class="line"> * @<span class="built_in">return</span> object</span><br><span class="line"> */</span><br><span class="line"><span class="keyword">function</span> connect2(<span class="variable">$config</span>) &#123;</span><br><span class="line"><span class="variable">$link</span> = mysqli_connect ( <span class="variable">$config</span> [<span class="string">'host'</span>], <span class="variable">$config</span> [<span class="string">'user'</span>], <span class="variable">$config</span> [<span class="string">'password'</span>] ) or die ( <span class="string">'数据库连接失败&lt;br/&gt;ERROR '</span> . mysqli_connect_errno () . <span class="string">':'</span> . mysqli_connect_error () );</span><br><span class="line">mysqli_set_charset ( <span class="variable">$link</span>, <span class="variable">$config</span> [<span class="string">'charset'</span>] );</span><br><span class="line">mysqli_select_db ( <span class="variable">$link</span>, <span class="variable">$config</span> [<span class="string">'dbName'</span>] ) or die ( <span class="string">'指定数据库打开失败&lt;br/&gt;ERROR '</span> . mysqli_errno ( <span class="variable">$link</span> ) . <span class="string">':'</span> . mysqli_error ( <span class="variable">$link</span> ) );</span><br><span class="line"><span class="built_in">return</span> <span class="variable">$link</span>;</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * 用常量的形式建立连接</span><br><span class="line"> * @<span class="built_in">return</span> unknown</span><br><span class="line"> */</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">connect3</span></span>()&#123;</span><br><span class="line"><span class="variable">$link</span> = mysqli_connect ( DB_HOST, DB_USER, DB_PWD, DB_DBNAME, DB_PORT ) or die ( <span class="string">'数据库连接失败&lt;br/&gt;ERROR '</span> . mysqli_connect_errno () . <span class="string">':'</span> . mysqli_connect_error () );</span><br><span class="line">mysqli_set_charset ( <span class="variable">$link</span>, DB_CHARSET );</span><br><span class="line">mysqli_select_db ( <span class="variable">$link</span>, DB_DBNAME ) or die ( <span class="string">'指定数据库打开失败&lt;br/&gt;ERROR '</span> . mysqli_errno ( <span class="variable">$link</span> ) . <span class="string">':'</span> . mysqli_error ( <span class="variable">$link</span> ) );</span><br><span class="line"><span class="built_in">return</span> <span class="variable">$link</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> array(</span><br><span class="line"> <span class="string">'username'</span>=&gt;<span class="string">'king'</span>,</span><br><span class="line"> <span class="string">'password'</span>=&gt;<span class="string">'king'</span>,</span><br><span class="line"> <span class="string">'age'</span>=&gt;<span class="string">'12'</span>,</span><br><span class="line"> <span class="string">'regTime'</span>=&gt;<span class="string">'123123123'</span></span><br><span class="line"> );</span><br><span class="line"> INSERT user(username,password,age,regTime) VALUES(<span class="string">'king'</span>,<span class="string">'king'</span>,<span class="string">'12'</span>,<span class="string">'123123123'</span>);</span><br><span class="line"> */</span><br><span class="line">/**</span><br><span class="line"> * 插入操作</span><br><span class="line"> * @param object <span class="variable">$link</span></span><br><span class="line"> * @param array <span class="variable">$data</span></span><br><span class="line"> * @param string <span class="variable">$table</span></span><br><span class="line"> * @<span class="built_in">return</span> boolean</span><br><span class="line"> */</span><br><span class="line"><span class="keyword">function</span> insert(<span class="variable">$link</span>,<span class="variable">$data</span>,<span class="variable">$table</span>)&#123;</span><br><span class="line"><span class="variable">$keys</span> = join ( <span class="string">','</span>, array_keys ( <span class="variable">$data</span> ) );</span><br><span class="line"><span class="variable">$vals</span> = <span class="string">"'"</span> . join ( <span class="string">"','"</span>, array_values ( <span class="variable">$data</span> ) ) . <span class="string">"'"</span>;</span><br><span class="line"><span class="variable">$query</span> = <span class="string">"INSERT &#123;<span class="variable">$table</span>&#125;(&#123;<span class="variable">$keys</span>&#125;) VALUES(&#123;<span class="variable">$vals</span>&#125;)"</span>;</span><br><span class="line"><span class="variable">$res</span> = mysqli_query ( <span class="variable">$link</span>, <span class="variable">$query</span> );</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$res</span>) &#123;</span><br><span class="line"><span class="built_in">return</span> mysqli_insert_id ( <span class="variable">$link</span> );</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> array(</span><br><span class="line"> <span class="string">'username'</span>=&gt;<span class="string">'king123'</span>,</span><br><span class="line"> <span class="string">'password'</span>=&gt;<span class="string">'king123'</span>,</span><br><span class="line"> <span class="string">'age'</span>=&gt;<span class="string">'32'</span>,</span><br><span class="line"> <span class="string">'regTime'</span>=&gt;<span class="string">'123123123'</span></span><br><span class="line"> );</span><br><span class="line"> UPDATE user SET username=<span class="string">'king123'</span>,password=<span class="string">'king123'</span>,age=<span class="string">'32'</span>,regTime=<span class="string">'123123123'</span> WHERE id=1</span><br><span class="line">*/</span><br><span class="line">/**</span><br><span class="line"> * 更新操作</span><br><span class="line"> * @param object <span class="variable">$link</span></span><br><span class="line"> * @param array <span class="variable">$data</span></span><br><span class="line"> * @param string <span class="variable">$table</span></span><br><span class="line"> * @param string <span class="variable">$where</span></span><br><span class="line"> * @<span class="built_in">return</span> boolean</span><br><span class="line"> */</span><br><span class="line"><span class="keyword">function</span> update(<span class="variable">$link</span>, <span class="variable">$data</span>, <span class="variable">$table</span>, <span class="variable">$where</span> = null) &#123;</span><br><span class="line">foreach ( <span class="variable">$data</span> as <span class="variable">$key</span> =&gt; <span class="variable">$val</span> ) &#123;</span><br><span class="line"><span class="variable">$set</span> .= <span class="string">"&#123;<span class="variable">$key</span>&#125;='&#123;<span class="variable">$val</span>&#125;',"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$set</span> = trim ( <span class="variable">$set</span>, <span class="string">','</span> );</span><br><span class="line"><span class="variable">$where</span> = <span class="variable">$where</span> == null ? <span class="string">''</span> : <span class="string">' WHERE '</span> . <span class="variable">$where</span>;</span><br><span class="line"><span class="variable">$query</span> = <span class="string">"UPDATE &#123;<span class="variable">$table</span>&#125; SET &#123;<span class="variable">$set</span>&#125; &#123;<span class="variable">$where</span>&#125;"</span>;</span><br><span class="line"><span class="variable">$res</span> = mysqli_query ( <span class="variable">$link</span>, <span class="variable">$query</span> );</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$res</span>) &#123;</span><br><span class="line"><span class="built_in">return</span> mysqli_affected_rows ( <span class="variable">$link</span> );</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//DELETE FROM user WHERE id=</span><br><span class="line">/**</span><br><span class="line"> * 删除操作</span><br><span class="line"> * @param object <span class="variable">$link</span></span><br><span class="line"> * @param string <span class="variable">$table</span></span><br><span class="line"> * @param string <span class="variable">$where</span></span><br><span class="line"> * @<span class="built_in">return</span> boolean</span><br><span class="line"> */</span><br><span class="line"><span class="keyword">function</span> delete(<span class="variable">$link</span>, <span class="variable">$table</span>, <span class="variable">$where</span> = null) &#123;</span><br><span class="line"><span class="variable">$where</span> = <span class="variable">$where</span> ? <span class="string">' WHERE '</span> . <span class="variable">$where</span> : <span class="string">''</span>;</span><br><span class="line"><span class="variable">$query</span> = <span class="string">"DELETE FROM &#123;<span class="variable">$table</span>&#125; &#123;<span class="variable">$where</span>&#125;"</span>;</span><br><span class="line"><span class="variable">$res</span> = mysqli_query ( <span class="variable">$link</span>, <span class="variable">$query</span> );</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$res</span>) &#123;</span><br><span class="line"><span class="built_in">return</span> mysqli_affected_rows ( <span class="variable">$link</span> );</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 查询指定记录</span><br><span class="line"> * @param object <span class="variable">$link</span></span><br><span class="line"> * @param string <span class="variable">$query</span></span><br><span class="line"> * @param string <span class="variable">$result_type</span></span><br><span class="line"> * @<span class="built_in">return</span> array|boolean</span><br><span class="line"> */</span><br><span class="line"><span class="keyword">function</span> fetchOne(<span class="variable">$link</span>, <span class="variable">$query</span>, <span class="variable">$result_type</span> = MYSQLI_ASSOC) &#123;</span><br><span class="line"><span class="variable">$result</span> = mysqli_query ( <span class="variable">$link</span>, <span class="variable">$query</span> );</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$result</span> &amp;&amp; mysqli_num_rows ( <span class="variable">$result</span> ) &gt; 0) &#123;</span><br><span class="line"><span class="variable">$row</span> = mysqli_fetch_array ( <span class="variable">$result</span>, <span class="variable">$result_type</span> );</span><br><span class="line"><span class="built_in">return</span> <span class="variable">$row</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 查询所有记录</span><br><span class="line"> * @param object <span class="variable">$link</span></span><br><span class="line"> * @param string <span class="variable">$query</span></span><br><span class="line"> * @param string <span class="variable">$result_type</span></span><br><span class="line"> * @<span class="built_in">return</span> array|boolean</span><br><span class="line"> */</span><br><span class="line"><span class="keyword">function</span> fetchAll(<span class="variable">$link</span>, <span class="variable">$query</span>, <span class="variable">$result_type</span> = MYSQLI_ASSOC) &#123;</span><br><span class="line"><span class="variable">$result</span> = mysqli_query ( <span class="variable">$link</span>, <span class="variable">$query</span> );</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$result</span> &amp;&amp; mysqli_num_rows ( <span class="variable">$result</span> ) &gt; 0) &#123;</span><br><span class="line"><span class="keyword">while</span> ( <span class="variable">$row</span> = mysqli_fetch_array ( <span class="variable">$result</span>, <span class="variable">$result_type</span> ) ) &#123;</span><br><span class="line"><span class="variable">$rows</span> [] = <span class="variable">$row</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">return</span> <span class="variable">$rows</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 得到表中的记录数</span><br><span class="line"> * @param object <span class="variable">$link</span></span><br><span class="line"> * @param string <span class="variable">$table</span></span><br><span class="line"> * @<span class="built_in">return</span> number|boolean</span><br><span class="line"> */</span><br><span class="line"><span class="keyword">function</span> getTotalRows(<span class="variable">$link</span>, <span class="variable">$table</span>) &#123;</span><br><span class="line"><span class="variable">$query</span> = <span class="string">"SELECT COUNT(*) AS totalRows FROM &#123;<span class="variable">$table</span>&#125;"</span>;</span><br><span class="line"><span class="variable">$result</span> = mysqli_query ( <span class="variable">$link</span>, <span class="variable">$query</span> );</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$result</span> &amp;&amp; mysqli_num_rows ( <span class="variable">$result</span> ) == 1) &#123;</span><br><span class="line"><span class="variable">$row</span> = mysqli_fetch_assoc ( <span class="variable">$result</span> );</span><br><span class="line"><span class="built_in">return</span> <span class="variable">$row</span> [<span class="string">'totalRows'</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 得到结果集的记录条数</span><br><span class="line"> * @param object <span class="variable">$link</span></span><br><span class="line"> * @param string <span class="variable">$query</span></span><br><span class="line"> * @<span class="built_in">return</span> boolean</span><br><span class="line"> */</span><br><span class="line"><span class="keyword">function</span> getResultRows(<span class="variable">$link</span>, <span class="variable">$query</span>) &#123;</span><br><span class="line"><span class="variable">$result</span> = mysqli_query ( <span class="variable">$link</span>, <span class="variable">$query</span> );</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$result</span>) &#123;</span><br><span class="line"><span class="built_in">return</span> mysqli_num_rows ( <span class="variable">$result</span> );</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @param object <span class="variable">$link</span></span><br><span class="line"> */</span><br><span class="line"><span class="keyword">function</span> getServerInfo(<span class="variable">$link</span>) &#123;</span><br><span class="line"><span class="built_in">return</span> mysqli_get_server_info ( <span class="variable">$link</span> );</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * @param object <span class="variable">$link</span></span><br><span class="line"> */</span><br><span class="line"><span class="keyword">function</span> getClientInfo(<span class="variable">$link</span>) &#123;</span><br><span class="line"><span class="built_in">return</span> mysqli_get_client_info ( <span class="variable">$link</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @param object <span class="variable">$link</span></span><br><span class="line"> */</span><br><span class="line"><span class="keyword">function</span> getHostInfo(<span class="variable">$link</span>)&#123;</span><br><span class="line"><span class="built_in">return</span> mysqli_get_host_info(<span class="variable">$link</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @param object <span class="variable">$link</span></span><br><span class="line"> */</span><br><span class="line"><span class="keyword">function</span> getProtoInfo(<span class="variable">$link</span>) &#123;</span><br><span class="line"><span class="built_in">return</span> mysqli_get_proto_info ( <span class="variable">$link</span> );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上使用jquery-1.9.0.min.js实现JS基本功能交互，SwiftMailer实现用户邮箱验证，后期会根据实战抽一篇文章说关于邮箱和短信验证的实战！</p><h3 id="笔记总结："><a href="#笔记总结：" class="headerlink" title="笔记总结："></a>笔记总结：</h3><h5 id="检测MySQLi扩展是否已经开启"><a href="#检测MySQLi扩展是否已经开启" class="headerlink" title="检测MySQLi扩展是否已经开启"></a>检测MySQLi扩展是否已经开启</h5><ul><li>phpinfo();<ul><li>检测MySQLi扩展是否已经加载，如果已经加载返回true，否则返回false</li></ul></li><li>var_dump(extension_loaded(‘mysqli’));<ul><li>Fatal error(致命错误): Call to undefined function mysqli_connect()<br>in G:\maizi\PHPAdvance\MySQLi\1-mysqli_connect.php on line 6</li></ul></li><li>function_exists():检测某个函数是否存在<ul><li>var_dump(function_exists(‘mysqli_connect’));</li></ul></li><li>print_r(get_defined_functions());</li></ul><h5 id="mysqli-multi-query"><a href="#mysqli-multi-query" class="headerlink" title="mysqli_multi_query"></a>mysqli_multi_query</h5><ul><li>执行多条SQL语句,每条SQL语句一定要以分号结尾，否则就会失败</li><li>如果多条SQL语句中有一条失败了，整个都会失败</li></ul><h5 id="结果集"><a href="#结果集" class="headerlink" title="结果集"></a>结果集</h5><ul><li>mysqli_store_result():传输上一次产生的结果集</li><li>mysqli_more_results():判读是否有更多的结果集</li><li>mysqli_next_result():将结果集的指针向下移动一位</li></ul><h5 id="错误信息与编号"><a href="#错误信息与编号" class="headerlink" title="错误信息与编号"></a>错误信息与编号</h5><ul><li>mysqli_connect_errno():连接产生的错误编号</li><li>mysqli_connect_error():连接产生的错误信息</li><li>mysqli_errno($link):得到上一步操作产生的错误编号</li><li>mysqli_error($link):得到上一步操作产生的错误信息</li></ul><h5 id="mysqli-query"><a href="#mysqli-query" class="headerlink" title="mysqli_query"></a>mysqli_query</h5><p>mysqli_query($link,$sql):执行SQL查询</p><ul><li>1》只能执行一条SQL语句，SQL语句可以没有分号 </li><li>2》mysqli_query()执行SELECT/SHOW/EXPLAIN/DESC/DESCRIBE这样关键字的SQL语句，执行</li></ul><blockquote><p>成功返回的是mysqli_result结果集，执行失败返回false；</p></blockquote><blockquote><p>执行其他SQL语句，执行成功返回true，失败返回false</p></blockquote><h5 id="mysqli-affected-rows"><a href="#mysqli-affected-rows" class="headerlink" title="mysqli_affected_rows"></a>mysqli_affected_rows</h5><p>mysqli_affected_rows($link):得到上一步操作产生的受影响的记录数</p><ul><li>大于0的：受影响的记录数</li><li>等于0：没有记录被影响</li><li>等于-1：代表的SQL语句有问题</li></ul><h5 id="result-type"><a href="#result-type" class="headerlink" title="result_type"></a>result_type</h5><p>$result_type的值为：</p><ul><li>MYSQLI_BOTH:关联+索引</li><li>MYSQLI_ASSOC:关联</li><li>MYSQLI_NUM:索引</li></ul><h5 id="连接不成功的情况："><a href="#连接不成功的情况：" class="headerlink" title="连接不成功的情况："></a>连接不成功的情况：</h5><ul><li><p>1》用户名密码不正确</p><ul><li>Warning: mysqli_connect(): (HY000/1045): Access denied for user ‘root‘@’localhost’ (using password: YES) in G:\maizi\PHPAdvance\MySQLi\2-mysqli_connect.php on line 5</li></ul></li></ul><blockquote><p>bool(false)</p></blockquote><ul><li><p>2》MySQL服务器没有开启</p><ul><li>ERROR 2003 (HY000): Can’t connect to MySQL server on ‘localhost’ (10061)<br>Warning: mysqli_connect(): in G:\maizi\PHPAdvance\MySQLi\2-mysqli_connect.php on line 13</li></ul></li></ul><blockquote><p>bool(false)</p></blockquote><h5 id="防止SQL注入-‘-or-1-1"><a href="#防止SQL注入-‘-or-1-1" class="headerlink" title="防止SQL注入 : ‘ or 1=1"></a>防止SQL注入 : ‘ or 1=1</h5><ol><li>转义特殊字符</li><li>预处理</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$username</span>=addslashes(<span class="variable">$username</span>);</span><br><span class="line"><span class="variable">$username</span>=mysqli_real_escape_string(<span class="variable">$username</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">"SELECT * FROM user WHERE username=? AND password=?"</span>;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">"SELECT id,username,password FROM user WHERE username=? AND password=?"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$stmt</span>=mysqli_prepare(<span class="variable">$link</span>, <span class="variable">$sql</span>)) &#123;</span><br><span class="line">    mysqli_stmt_bind_param(<span class="variable">$stmt</span>, <span class="string">'ss'</span>, <span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line">    mysqli_stmt_execute(<span class="variable">$stmt</span>);</span><br><span class="line">    mysqli_stmt_store_result(<span class="variable">$stmt</span>);</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"--------"</span>;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">'&lt;/br&gt;'</span>.mysqli_stmt_affected_rows(<span class="variable">$stmt</span>).<span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">    <span class="built_in">echo</span> mysqli_stmt_num_rows(<span class="variable">$stmt</span>).<span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"--------&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span> (mysqli_stmt_affected_rows(<span class="variable">$stmt</span>) == 1) &#123;</span><br><span class="line">        mysqli_stmt_bind_result(<span class="variable">$stmt</span>,<span class="variable">$id</span>,<span class="variable">$username</span>,<span class="variable">$password</span>);</span><br><span class="line">        mysqli_stmt_reset(<span class="variable">$stmt</span>);</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"登录成功"</span>;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"&lt;/br&gt;编号："</span>.<span class="variable">$id</span>.<span class="string">'&lt;br/&gt;用户名:'</span>.<span class="variable">$username</span>.<span class="string">'&lt;br/&gt;密码:'</span>.<span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实现处理PHP+MySQLi+HTML实战，简单到不能再简单的注册登录页面效果！&lt;/p&gt;
&lt;h2 id=&quot;PHP基础——注册登录验证入门实战&quot;&gt;&lt;a href=&quot;#PHP基础——注册登录验证入门实战&quot; class=&quot;headerlink&quot; title=&quot;PHP基础——注册登录验证入门实战&quot;&gt;&lt;/a&gt;PHP基础——注册登录验证入门实战&lt;/h2&gt;&lt;h3 id=&quot;连接数据库：&quot;&gt;&lt;a href=&quot;#连接数据库：&quot; class=&quot;headerlink&quot; title=&quot;连接数据库：&quot;&gt;&lt;/a&gt;连接数据库：&lt;/h3&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PHP第三十篇——数据库相关操作与分页功能封装</title>
    <link href="https://icocos.github.io/2018/12/28/PHP%E7%AC%AC%E4%B8%89%E5%8D%81%E7%AF%87%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C%E4%B8%8E%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD%E5%B0%81%E8%A3%85/"/>
    <id>https://icocos.github.io/2018/12/28/PHP第三十篇——数据库相关操作与分页功能封装/</id>
    <published>2018-12-28T07:43:45.000Z</published>
    <updated>2019-03-01T10:37:41.977Z</updated>
    
    <content type="html"><![CDATA[<p>实现数据库相关操作(MySQLi)与分页功能初步实战与封装，入门学习笔记</p><h3 id="连接与配置"><a href="#连接与配置" class="headerlink" title="连接与配置"></a>连接与配置</h3><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$config</span>=[</span><br><span class="line">    <span class="string">'host'</span>=&gt;<span class="string">'localhost'</span>,</span><br><span class="line">    <span class="string">'user'</span>=&gt;<span class="string">'root'</span>,</span><br><span class="line">    <span class="string">'password'</span>=&gt;<span class="string">'root'</span>,</span><br><span class="line">    <span class="string">'charset'</span>=&gt;<span class="string">'utf8'</span>,</span><br><span class="line">    <span class="string">'dbName'</span>=&gt;<span class="string">'mysqli'</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">define(<span class="string">'DB_HOST'</span>,<span class="string">'localhost'</span>);</span><br><span class="line">define(<span class="string">'DB_USER'</span>,<span class="string">'root'</span>);</span><br><span class="line">define(<span class="string">'DB_PWD'</span>,<span class="string">'root'</span>);</span><br><span class="line">define(<span class="string">'DB_CHARSET'</span>,<span class="string">'utf8'</span>);</span><br><span class="line">define(<span class="string">'DB_DBNAME'</span>,<span class="string">'mysqli'</span>);</span><br><span class="line">define(<span class="string">'DB_PORT'</span>,<span class="string">'8889'</span>);</span><br></pre></td></tr></table></figure><h3 id="MySQL连接与d封装操作"><a href="#MySQL连接与d封装操作" class="headerlink" title="MySQL连接与d封装操作"></a>MySQL连接与d封装操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line">* 连接</span><br><span class="line">* @param string <span class="variable">$host</span></span><br><span class="line">* @param string <span class="variable">$user</span></span><br><span class="line">* @param string <span class="variable">$password</span></span><br><span class="line">* @param string <span class="variable">$charset</span></span><br><span class="line">* @param string <span class="variable">$database</span></span><br><span class="line">* @<span class="built_in">return</span> object 连接标识符</span><br><span class="line">*/</span><br><span class="line"><span class="keyword">function</span> connect1(<span class="variable">$host</span>,<span class="variable">$user</span>,<span class="variable">$password</span>,<span class="variable">$charset</span>,<span class="variable">$database</span>) &#123;</span><br><span class="line">    <span class="variable">$link</span> = mysqli_connect ( <span class="variable">$host</span>, <span class="variable">$user</span>, <span class="variable">$password</span> ) or die ( <span class="string">'数据库连接失败&lt;br/&gt;ERROR '</span> . mysqli_connect_errno () . <span class="string">':'</span> . mysqli_connect_error () );</span><br><span class="line">    mysqli_set_charset ( <span class="variable">$link</span>, <span class="variable">$charset</span> );</span><br><span class="line">    mysqli_select_db ( <span class="variable">$link</span>, <span class="variable">$database</span> ) or die ( <span class="string">'指定数据库打开失败&lt;br/&gt;ERROR '</span> . mysqli_errno ( <span class="variable">$link</span> ) . <span class="string">':'</span> . mysqli_error ( <span class="variable">$link</span> ) );</span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$link</span>;</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line">* 连接 需要传递数组</span><br><span class="line">* @param array <span class="variable">$config</span></span><br><span class="line">* @<span class="built_in">return</span> object</span><br><span class="line">*/</span><br><span class="line"><span class="keyword">function</span> connect2(<span class="variable">$config</span>) &#123;</span><br><span class="line">    <span class="variable">$link</span> = mysqli_connect ( <span class="variable">$config</span> [<span class="string">'host'</span>], <span class="variable">$config</span> [<span class="string">'user'</span>], <span class="variable">$config</span> [<span class="string">'password'</span>] ) or die ( <span class="string">'数据库连接失败&lt;br/&gt;ERROR '</span> . mysqli_connect_errno () . <span class="string">':'</span> . mysqli_connect_error () );</span><br><span class="line">    mysqli_set_charset ( <span class="variable">$link</span>, <span class="variable">$config</span> [<span class="string">'charset'</span>] );</span><br><span class="line">    mysqli_select_db ( <span class="variable">$link</span>, <span class="variable">$config</span> [<span class="string">'dbName'</span>] ) or die ( <span class="string">'指定数据库打开失败&lt;br/&gt;ERROR '</span> . mysqli_errno ( <span class="variable">$link</span> ) . <span class="string">':'</span> . mysqli_error ( <span class="variable">$link</span> ) );</span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$link</span>;</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line">* 用常量的形式建立连接</span><br><span class="line">* @<span class="built_in">return</span> unknown</span><br><span class="line">*/</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">connect3</span></span>()&#123;</span><br><span class="line">    // define(<span class="string">'DB_HOST'</span>,<span class="string">'localhost'</span>);</span><br><span class="line">    // define(<span class="string">'DB_USER'</span>,<span class="string">'root'</span>);</span><br><span class="line">    // define(<span class="string">'DB_PWD'</span>,<span class="string">'root'</span>);</span><br><span class="line">    // define(<span class="string">'DB_CHARSET'</span>,<span class="string">'utf8'</span>);</span><br><span class="line">    // define(<span class="string">'DB_DBNAME'</span>,<span class="string">'mysqli'</span>);</span><br><span class="line">    // define(<span class="string">'DB_POST'</span>,<span class="string">'8889'</span>);</span><br><span class="line">    //mysqli_connect(<span class="string">'localhost'</span>, <span class="string">'root'</span>, <span class="string">'root'</span>, <span class="string">'mysqli'</span>,<span class="string">'8889'</span>) </span><br><span class="line">    <span class="variable">$link</span> = mysqli_connect ( DB_HOST, DB_USER, DB_PWD ,DB_DBNAME, DB_PORT) or die ( <span class="string">'数据库连接失败&lt;br/&gt;ERROR '</span> . mysqli_connect_errno () . <span class="string">':'</span> . mysqli_connect_error () );</span><br><span class="line">    mysqli_set_charset ( <span class="variable">$link</span>, DB_CHARSET );</span><br><span class="line">    mysqli_select_db ( <span class="variable">$link</span>, DB_DBNAME ) or die ( <span class="string">'指定数据库打开失败&lt;br/&gt;ERROR '</span> . mysqli_errno ( <span class="variable">$link</span> ) . <span class="string">':'</span> . mysqli_error ( <span class="variable">$link</span> ) );</span><br><span class="line">    // <span class="built_in">echo</span> <span class="string">"连接成功"</span>;</span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$link</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">array(</span><br><span class="line">    <span class="string">'username'</span>=&gt;<span class="string">'king'</span>,</span><br><span class="line">    <span class="string">'password'</span>=&gt;<span class="string">'king'</span>,</span><br><span class="line">    <span class="string">'age'</span>=&gt;<span class="string">'12'</span>,</span><br><span class="line">    <span class="string">'regTime'</span>=&gt;<span class="string">'123123123'</span></span><br><span class="line">);</span><br><span class="line">INSERT user(username,password,age,regTime) VALUES(<span class="string">'king'</span>,<span class="string">'king'</span>,<span class="string">'12'</span>,<span class="string">'123123123'</span>);</span><br><span class="line">*/</span><br><span class="line">/**</span><br><span class="line">* 插入操作</span><br><span class="line">* @param object <span class="variable">$link</span></span><br><span class="line">* @param array <span class="variable">$data</span></span><br><span class="line">* @param string <span class="variable">$table</span></span><br><span class="line">* @<span class="built_in">return</span> boolean</span><br><span class="line">*/</span><br><span class="line"><span class="keyword">function</span> insert(<span class="variable">$link</span>,<span class="variable">$data</span>,<span class="variable">$table</span>)&#123;</span><br><span class="line">    <span class="variable">$keys</span> = join ( <span class="string">','</span>, array_keys ( <span class="variable">$data</span> ) );</span><br><span class="line">    <span class="variable">$vals</span> = <span class="string">"'"</span> . join ( <span class="string">"','"</span>, array_values ( <span class="variable">$data</span> ) ) . <span class="string">"'"</span>;</span><br><span class="line">    <span class="variable">$query</span> = <span class="string">"INSERT &#123;<span class="variable">$table</span>&#125;(&#123;<span class="variable">$keys</span>&#125;) VALUES(&#123;<span class="variable">$vals</span>&#125;)"</span>;</span><br><span class="line">    <span class="variable">$res</span> = mysqli_query ( <span class="variable">$link</span>, <span class="variable">$query</span> );</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$res</span>) &#123;</span><br><span class="line">        <span class="built_in">return</span> mysqli_insert_id ( <span class="variable">$link</span> );</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">array(</span><br><span class="line">    <span class="string">'username'</span>=&gt;<span class="string">'king123'</span>,</span><br><span class="line">    <span class="string">'password'</span>=&gt;<span class="string">'king123'</span>,</span><br><span class="line">    <span class="string">'age'</span>=&gt;<span class="string">'32'</span>,</span><br><span class="line">    <span class="string">'regTime'</span>=&gt;<span class="string">'123123123'</span></span><br><span class="line">);</span><br><span class="line">UPDATE user SET username=<span class="string">'king123'</span>,password=<span class="string">'king123'</span>,age=<span class="string">'32'</span>,regTime=<span class="string">'123123123'</span> WHERE id=1</span><br><span class="line">*/</span><br><span class="line">/**</span><br><span class="line">* 更新操作</span><br><span class="line">* @param object <span class="variable">$link</span></span><br><span class="line">* @param array <span class="variable">$data</span></span><br><span class="line">* @param string <span class="variable">$table</span></span><br><span class="line">* @param string <span class="variable">$where</span></span><br><span class="line">* @<span class="built_in">return</span> boolean</span><br><span class="line">*/</span><br><span class="line"><span class="keyword">function</span> update(<span class="variable">$link</span>, <span class="variable">$data</span>, <span class="variable">$table</span>, <span class="variable">$where</span> = null) &#123;</span><br><span class="line">    foreach ( <span class="variable">$data</span> as <span class="variable">$key</span> =&gt; <span class="variable">$val</span> ) &#123;</span><br><span class="line">        <span class="variable">$set</span> .= <span class="string">"&#123;<span class="variable">$key</span>&#125;='&#123;<span class="variable">$val</span>&#125;',"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$set</span> = trim ( <span class="variable">$set</span>, <span class="string">','</span> );</span><br><span class="line">    <span class="variable">$where</span> = <span class="variable">$where</span> == null ? <span class="string">''</span> : <span class="string">' WHERE '</span> . <span class="variable">$where</span>;</span><br><span class="line">    <span class="variable">$query</span> = <span class="string">"UPDATE &#123;<span class="variable">$table</span>&#125; SET &#123;<span class="variable">$set</span>&#125; &#123;<span class="variable">$where</span>&#125;"</span>;</span><br><span class="line">    <span class="variable">$res</span> = mysqli_query ( <span class="variable">$link</span>, <span class="variable">$query</span> );</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$res</span>) &#123;</span><br><span class="line">        <span class="built_in">return</span> mysqli_affected_rows ( <span class="variable">$link</span> );</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//DELETE FROM user WHERE id=</span><br><span class="line">/**</span><br><span class="line">* 删除操作</span><br><span class="line">* @param object <span class="variable">$link</span></span><br><span class="line">* @param string <span class="variable">$table</span></span><br><span class="line">* @param string <span class="variable">$where</span></span><br><span class="line">* @<span class="built_in">return</span> boolean</span><br><span class="line">*/</span><br><span class="line"><span class="keyword">function</span> delete(<span class="variable">$link</span>, <span class="variable">$table</span>, <span class="variable">$where</span> = null) &#123;</span><br><span class="line">    <span class="variable">$where</span> = <span class="variable">$where</span> ? <span class="string">' WHERE '</span> . <span class="variable">$where</span> : <span class="string">''</span>;</span><br><span class="line">    <span class="variable">$query</span> = <span class="string">"DELETE FROM &#123;<span class="variable">$table</span>&#125; &#123;<span class="variable">$where</span>&#125;"</span>;</span><br><span class="line">    <span class="variable">$res</span> = mysqli_query ( <span class="variable">$link</span>, <span class="variable">$query</span> );</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$res</span>) &#123;</span><br><span class="line">        <span class="built_in">return</span> mysqli_affected_rows ( <span class="variable">$link</span> );</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">* 查询指定记录</span><br><span class="line">* @param object <span class="variable">$link</span></span><br><span class="line">* @param string <span class="variable">$query</span></span><br><span class="line">* @param string <span class="variable">$result_type</span></span><br><span class="line">* @<span class="built_in">return</span> array|boolean</span><br><span class="line">*/</span><br><span class="line"><span class="keyword">function</span> fetchOne(<span class="variable">$link</span>, <span class="variable">$query</span>, <span class="variable">$result_type</span> = MYSQLI_ASSOC) &#123;</span><br><span class="line">    <span class="variable">$result</span> = mysqli_query ( <span class="variable">$link</span>, <span class="variable">$query</span> );</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$result</span> &amp;&amp; mysqli_num_rows ( <span class="variable">$result</span> ) &gt; 0) &#123;</span><br><span class="line">        <span class="variable">$row</span> = mysqli_fetch_array ( <span class="variable">$result</span>, <span class="variable">$result_type</span> );</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$row</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">* 查询所有记录</span><br><span class="line">* @param object <span class="variable">$link</span></span><br><span class="line">* @param string <span class="variable">$query</span></span><br><span class="line">* @param string <span class="variable">$result_type</span></span><br><span class="line">* @<span class="built_in">return</span> array|boolean</span><br><span class="line">*/</span><br><span class="line"><span class="keyword">function</span> fetchAll(<span class="variable">$link</span>, <span class="variable">$query</span>, <span class="variable">$result_type</span> = MYSQLI_ASSOC) &#123;</span><br><span class="line">    <span class="variable">$result</span> = mysqli_query ( <span class="variable">$link</span>, <span class="variable">$query</span> );</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$result</span> &amp;&amp; mysqli_num_rows ( <span class="variable">$result</span> ) &gt; 0) &#123;</span><br><span class="line">        <span class="keyword">while</span> ( <span class="variable">$row</span> = mysqli_fetch_array ( <span class="variable">$result</span>, <span class="variable">$result_type</span> ) ) &#123;</span><br><span class="line">            <span class="variable">$rows</span> [] = <span class="variable">$row</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$rows</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">* 得到表中的记录数</span><br><span class="line">* @param object <span class="variable">$link</span></span><br><span class="line">* @param string <span class="variable">$table</span></span><br><span class="line">* @<span class="built_in">return</span> number|boolean</span><br><span class="line">*/</span><br><span class="line"><span class="keyword">function</span> getTotalRows(<span class="variable">$link</span>, <span class="variable">$table</span>) &#123;</span><br><span class="line">    <span class="variable">$query</span> = <span class="string">"SELECT COUNT(*) AS totalRows FROM &#123;<span class="variable">$table</span>&#125;"</span>;</span><br><span class="line">    <span class="variable">$result</span> = mysqli_query ( <span class="variable">$link</span>, <span class="variable">$query</span> );</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$result</span> &amp;&amp; mysqli_num_rows ( <span class="variable">$result</span> ) == 1) &#123;</span><br><span class="line">        <span class="variable">$row</span> = mysqli_fetch_assoc ( <span class="variable">$result</span> );</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$row</span> [<span class="string">'totalRows'</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">* 得到结果集的记录条数</span><br><span class="line">* @param object <span class="variable">$link</span></span><br><span class="line">* @param string <span class="variable">$query</span></span><br><span class="line">* @<span class="built_in">return</span> boolean</span><br><span class="line">*/</span><br><span class="line"><span class="keyword">function</span> getResultRows(<span class="variable">$link</span>, <span class="variable">$query</span>) &#123;</span><br><span class="line">    <span class="variable">$result</span> = mysqli_query ( <span class="variable">$link</span>, <span class="variable">$query</span> );</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$result</span>) &#123;</span><br><span class="line">        <span class="built_in">return</span> mysqli_num_rows ( <span class="variable">$result</span> );</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">* @param object <span class="variable">$link</span></span><br><span class="line">*/</span><br><span class="line"><span class="keyword">function</span> getServerInfo(<span class="variable">$link</span>) &#123;</span><br><span class="line">    <span class="built_in">return</span> mysqli_get_server_info ( <span class="variable">$link</span> );</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line">* @param object <span class="variable">$link</span></span><br><span class="line">*/</span><br><span class="line"><span class="keyword">function</span> getClientInfo(<span class="variable">$link</span>) &#123;</span><br><span class="line">    <span class="built_in">return</span> mysqli_get_client_info ( <span class="variable">$link</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">* @param object <span class="variable">$link</span></span><br><span class="line">*/</span><br><span class="line"><span class="keyword">function</span> getHostInfo(<span class="variable">$link</span>)&#123;</span><br><span class="line">    <span class="built_in">return</span> mysqli_get_host_info(<span class="variable">$link</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">* @param object <span class="variable">$link</span></span><br><span class="line">*/</span><br><span class="line"><span class="keyword">function</span> getProtoInfo(<span class="variable">$link</span>) &#123;</span><br><span class="line">    <span class="built_in">return</span> mysqli_get_proto_info ( <span class="variable">$link</span> );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分页功能的封装与实战操作"><a href="#分页功能的封装与实战操作" class="headerlink" title="分页功能的封装与实战操作"></a>分页功能的封装与实战操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    require_once <span class="string">'mysql.func.php'</span>;</span><br><span class="line">    require_once <span class="string">'config.php'</span>;</span><br><span class="line"></span><br><span class="line">    // 连接</span><br><span class="line">    <span class="variable">$link</span>=connect3();</span><br><span class="line">    // 表名</span><br><span class="line">    <span class="variable">$table</span> = <span class="string">'user'</span>;</span><br><span class="line">    // 总条数</span><br><span class="line">    <span class="variable">$totalRows</span> = getTotalRows(<span class="variable">$link</span>,<span class="variable">$table</span>);</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$totalRows</span>;</span><br><span class="line">    // 每页10条</span><br><span class="line">    <span class="variable">$pageSize</span> = 10;</span><br><span class="line">    // 总页数</span><br><span class="line">    <span class="variable">$totalPages</span> = ceil(<span class="variable">$totalRows</span>/<span class="variable">$pageSize</span>);</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$totalPages</span>;</span><br><span class="line">    // 接受当前页</span><br><span class="line">    <span class="variable">$page</span> = <span class="variable">$_GET</span>[<span class="string">'page'</span>]?<span class="variable">$_GET</span>[<span class="string">'page'</span>]:1;</span><br><span class="line">    // 边界处理</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$page</span>&lt;1||<span class="variable">$page</span>==<span class="string">''</span>||!is_numeric(<span class="variable">$page</span>)) &#123;</span><br><span class="line">        <span class="variable">$page</span>=1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$page</span>&gt;<span class="variable">$totalPages</span>) &#123;</span><br><span class="line">        <span class="variable">$page</span>=<span class="variable">$totalPages</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    // 计算偏移量</span><br><span class="line">    <span class="variable">$offset</span> = (<span class="variable">$page</span>-1)*<span class="variable">$pageSize</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$query</span> = <span class="string">"SELECT id,username,password,age,regtime FROM &#123;<span class="variable">$table</span>&#125; LIMIT &#123;<span class="variable">$offset</span>&#125;, &#123;<span class="variable">$pageSize</span>&#125;"</span>;</span><br><span class="line">    <span class="variable">$users</span> = fetchAll(<span class="variable">$link</span>, <span class="variable">$query</span>);</span><br><span class="line">    //var_dump(<span class="variable">$users</span>);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$users</span>) &#123;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="string">"没有用户数据"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    // 形成用户列表</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;用户列表&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h2&gt;用户列表&lt;/h2&gt;</span><br><span class="line">    &lt;table border=<span class="string">"1"</span> width=<span class="string">"80%"</span> cellpadding=<span class="string">"0"</span> cellspacing=<span class="string">"0"</span> bgcolor=<span class="string">"#ABCDEF"</span>&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;编码&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;用户名&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;密码&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;年龄&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;注册时间&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;?php foreach(<span class="variable">$users</span> as <span class="variable">$user</span>):?&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;&lt;?php <span class="built_in">echo</span> <span class="variable">$user</span>[<span class="string">'id'</span>];?&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;?php <span class="built_in">echo</span> <span class="variable">$user</span>[<span class="string">'username'</span>];?&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;?php <span class="built_in">echo</span> <span class="variable">$user</span>[<span class="string">'password'</span>];?&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;?php <span class="built_in">echo</span> <span class="variable">$user</span>[<span class="string">'age'</span>];?&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;?php <span class="built_in">echo</span> <span class="variable">$user</span>[<span class="string">'regtime'</span>];?&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;?php endforeach;?&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line"></span><br><span class="line">    &lt;p&gt;</span><br><span class="line"></span><br><span class="line">    &lt;?php</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"&lt;a href=mainpage.php?page=1&gt;[首页]&lt;/a&gt;"</span>;</span><br><span class="line">        <span class="variable">$prev</span> = <span class="variable">$page</span> == 1 ? 1 : (<span class="variable">$page</span>-1);</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"&lt;a href=mainpage.php?page="</span>.(<span class="variable">$prev</span>).<span class="string">"&gt;[上一页]&lt;/a&gt;"</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span>=1; <span class="variable">$i</span>&lt;=<span class="variable">$totalPages</span> ; <span class="variable">$i</span>++) &#123; </span><br><span class="line">            // 当前页无连接</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$page</span>==<span class="variable">$i</span>) &#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"[&#123;<span class="variable">$i</span>&#125;]"</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"&lt;a href='mainpage.php?page=&#123;<span class="variable">$i</span>&#125;'&gt;[&#123;<span class="variable">$i</span>&#125;]&lt;/a&gt;"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$nextv</span> = <span class="variable">$page</span> == <span class="variable">$totalPages</span> ? <span class="variable">$totalPages</span> : (<span class="variable">$page</span>+1);</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"&lt;a href=mainpage.php?page="</span>.(<span class="variable">$nextv</span>).<span class="string">"&gt;[下一页]&lt;/a&gt;"</span>;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"&lt;a href=mainpage.php?page=<span class="variable">$totalPages</span>&gt;[尾页]&lt;/a&gt;"</span>;</span><br><span class="line">    ?&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实现数据库相关操作(MySQLi)与分页功能初步实战与封装，入门学习笔记&lt;/p&gt;
&lt;h3 id=&quot;连接与配置&quot;&gt;&lt;a href=&quot;#连接与配置&quot; class=&quot;headerlink&quot; title=&quot;连接与配置&quot;&gt;&lt;/a&gt;连接与配置&lt;/h3&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PHP第二十九篇——MySQLi入门与常用操作总结</title>
    <link href="https://icocos.github.io/2018/12/26/PHP%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B9%9D%E7%AF%87%E2%80%94%E2%80%94MySQLi%E5%85%A5%E9%97%A8%E4%B8%8E%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    <id>https://icocos.github.io/2018/12/26/PHP第二十九篇——MySQLi入门与常用操作总结/</id>
    <published>2018-12-26T15:06:14.000Z</published>
    <updated>2019-03-01T10:38:49.246Z</updated>
    
    <content type="html"><![CDATA[<h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><ul><li>1.数据库</li><li>2.SQL语言</li><li>3.MySQLi扩展简介<ul><li>为什么使用MySQLi扩展</li><li>MySQLi的安装及配置</li></ul></li></ul><a id="more"></a><ul><li>4.MySQLi操作数据库步骤<ul><li>1.连接MySQL</li><li>2.设置字符集</li><li>3.打开指定数据库</li><li>4.执行SQL查询<ul><li>增</li><li>删</li><li>改</li><li>查</li></ul></li><li>5.释放结果集</li><li>6.关闭连接</li></ul></li><li>5.MySQLi常用函数<ul><li>连接相关</li><li>数据操作</li><li>预处理操作</li><li>结果集相关</li><li>事务</li></ul></li></ul><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><ul><li><p>数据库是一某种有组织的方式存储数据或文件的集合，容器</p></li><li><p>表是一种结构化的文件(特定类型数据的结构化清单)，存储特定类型的数据</p></li></ul><p>模式：描述了数据库和表的布局及特性信息，定义数据在表中如何存储，存储什么样的数据，数据如何分解，各部分信息如何命名</p><pre><code>列：表中的一个字段 行：一条记录主健：一列或一组(多)列，其值能唯一区分表中的每一行。即表示特定的行。习惯：不重用，不更新，不修改</code></pre><ul><li>任意两行都不具有相同的值</li><li>每一个行都必须具有一个主健值，且不允许为空</li></ul><p>数据库的好处：将数据持久化到本地，可以实现结构化查询，方便管理</p><ul><li>DB：数据库</li><li>DBMS：数据库管理系统/软件</li><li>SQL：结构化查询语言，用户和DBMS通讯</li></ul><p>MySQL缺点: 并不总是支持其他DBMS提供的功能和特性</p><ul><li>存储特点：将数据存储到表中，再将表存储到库中，<ul><li>一个数据库中多个表，有名字且唯一。</li><li>表具有一些特性，定义数据在表中如何存储，类似‘类’。</li><li>表由列(字段)组成，类似’属性’.</li><li>表中数据按照行存储，类似‘对象’.</li></ul></li></ul><h5 id="DBMS分类"><a href="#DBMS分类" class="headerlink" title="DBMS分类"></a>DBMS分类</h5><ol><li>基础共享文件系统</li><li>基础客户机-服务器软件: 服务器负责所有数据的访问处理软件，客户机与用户打交道的软件。</li></ol><p>MySQL在4中引入InnoDB引擎，增加事务处理，改进全文搜索。4.1增加函数库，子查询，集成帮助。5增加存储过程，触发器，游标，视图。</p><ul><li>读写分离：路由和分发的DS(datasource)<ul><li>一个server方法必须定位到一个唯一的数据库上</li><li>在应用中需要自己去确定或者高速路由DS,访问的真实目标DS</li><li>让路由知道有那些真实的DS和他们的名字对应</li><li>让路由根据我传入的名字去返回真实的DataSource</li></ul></li></ul><p>依赖注入容器：就是一个对象，他知道怎么样初始化并配置对象及其依赖的所有对象</p><h3 id="SQL语言"><a href="#SQL语言" class="headerlink" title="SQL语言"></a>SQL语言</h3><ul><li>DQL：数据库查询语言<ul><li>基础查询，条件查询，排序查询，常见函数，分组函数，分组查询，连接查询，子查询，分页查询，union查询</li></ul></li><li>DML：数据操作语言<ul><li>插入，修改，删除</li></ul></li><li>DDL：数据定义语言<ul><li>库和表管理，常见数据类型，常见约束</li></ul></li><li>TCL：事务控制语言<ul><li>事务和事务处理</li></ul></li></ul><blockquote><p>不区分大小写：建议关键字大小，自定义名字小写！<br>分号结尾，索引与换行<br>注释 (#)或(– )或(/<em> </em>/)</p></blockquote><h5 id="相关操作"><a href="#相关操作" class="headerlink" title="相关操作"></a>相关操作</h5><ul><li><p>显示所有数据库</p><ul><li>show databases;</li></ul></li><li><p>使用(进入)指定数据库</p><ul><li>use mysql;</li></ul></li><li><p>显示库中所有表</p><ul><li>show tables;</li><li>show tables from phpstudy;</li></ul></li><li><p>选择查询当前所在数据库</p><ul><li>select databases();</li></ul></li><li><p>创建表：</p><ul><li>create table t_mysql (id int, name varchar(20));</li></ul></li><li><p>删除表：</p><ul><li>drop table t_mysql;</li></ul></li><li><p>查看表结构：</p><ul><li>desc t_mysql;</li></ul></li><li><p>插入数据：</p><ul><li>insert into t_mysql (id, name) values (2,”Vivian”);</li></ul></li><li><p>查询数据库所有字段：</p><ul><li>select * from t_mysql;</li></ul></li><li><p>更新数据库：</p><ul><li>update t_mysql set name=”MySQL” where id=4;</li></ul></li><li><p>删除表中数据</p><ul><li>delete from t_mysql where id=4 or name=”MySQL”;</li><li>delete from t_mysql; // 删除所有</li></ul></li></ul><blockquote><p>使用delete删除的数据可以找回<br>使用drop删除的数据找不回来</p></blockquote><ul><li>查看版本：<ul><li>mysql&gt; select version();</li></ul></li></ul><h3 id="MySQLi简介"><a href="#MySQLi简介" class="headerlink" title="MySQLi简介"></a>MySQLi简介</h3><p>PHP5.4之后mysql扩展废弃，不再更新，官方推荐使用mysqli，mysqli是mysql扩展的增强版，5.4默认支持</p><p>#####mysqli功能</p><ol><li>操作数据库</li><li>面向对象和面向过程</li><li>支持预处理</li><li>支持多语句</li><li>支持事务</li></ol><h3 id="MySQLi配置"><a href="#MySQLi配置" class="headerlink" title="MySQLi配置"></a>MySQLi配置</h3><blockquote><p>略过安装，因为默认支持，如果是集成环境，也是不用安装和配置的！</p></blockquote><ol><li>配置php_mysqli.dll扩展，在php.ini中开启</li><li>配置extension_dir=”ext所在目录”</li><li>重启服务器</li></ol><h5 id="MySQL相关配置"><a href="#MySQL相关配置" class="headerlink" title="MySQL相关配置"></a>MySQL相关配置</h5><ul><li>mysqli.max_persistent = -1<ul><li>可以创建的持久化连接的最大数量，-1代表无限制</li></ul></li><li>mysqli.allow_local_infile = On<ul><li>允许Mysql的Load Data语句访问PHP角度看的本地文件。</li></ul></li><li>mysqli.allow_persistent = On<ul><li>开启使用mysqli_connect()函数创建持久化连接的能力</li></ul></li><li>mysqli.max_links = -1<ul><li>最大连接数，-1代表无限制</li></ul></li><li>mysqli.default_port = 3306<ul><li>默认端口号3306</li></ul></li><li>mysqli.default_socket =<ul><li>当连接到本地数据库服务器时如果没有指定其他socket名称，使用的默认socket名称</li></ul></li><li>mysqli.default_host =<ul><li>当连接到数据库服务器时， 如果没有指定其他主机地址，使用的默认服务器主机。不要在 安全模式下使用</li></ul></li><li>mysqli.default_user =<ul><li>当连接到数据库服务器时，如果没有指定其他用户名，使用的默认用户名。不要在 安全模式下使用。</li></ul></li><li>mysqli.default_pw =<ul><li>当连接到数据库服务器时，如果灭有指定其他密码，使用的默认密码。不要在 安全模式下使用。</li></ul></li><li>mysqli.reconnect = Off<ul><li>连接丢失时是否自动重新连接。</li></ul></li></ul><h3 id="MySQLi检测"><a href="#MySQLi检测" class="headerlink" title="MySQLi检测"></a>MySQLi检测</h3><ol><li>phpinfo #php配置</li><li>extension_loaded(‘mysqli’) #连接方法</li><li>mysqli_connect() # 直接调用</li><li>function_exists(‘mysqli_connect’) #是否存在方法</li><li>get_defined_functions() #s获取定义的方法</li></ol><h3 id="MySQLi操作步骤"><a href="#MySQLi操作步骤" class="headerlink" title="MySQLi操作步骤"></a>MySQLi操作步骤</h3><h5 id="PHP打开错误提示和关闭错误提示的方法"><a href="#PHP打开错误提示和关闭错误提示的方法" class="headerlink" title="PHP打开错误提示和关闭错误提示的方法"></a>PHP打开错误提示和关闭错误提示的方法</h5><ol><li>找到php的配置文件，也就是php.ini</li></ol><blockquote><p>在文件中查找 ‘display_errors’   查找到 display_errors = Off 或者 display_errors = On， Off为关闭错误提示，On为打开错误提示，根据需求修改即可。</p></blockquote><ol start="2"><li>也可在php文件中加入以下代码</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//禁用错误报告</span><br><span class="line">error_reporting(0);</span><br><span class="line">//报告运行时错误</span><br><span class="line">error_reporting(E_ERROR | E_WARNING | E_PARSE);</span><br><span class="line">//报告所有错误</span><br><span class="line">error_reporting(E_ALL);</span><br></pre></td></tr></table></figure><h5 id="一、建立连接"><a href="#一、建立连接" class="headerlink" title="一、建立连接"></a>一、建立连接</h5><ul><li>直接连接</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line"><span class="comment">##### 建立连接: 这里使用MAMP默认提供的mysql和端口</span></span><br><span class="line"><span class="variable">$link</span> = mysqli_connect(<span class="string">'localhost'</span>, <span class="string">'root'</span>, <span class="string">'root'</span>, <span class="string">'mysqli'</span>,<span class="string">'8889'</span>);</span><br><span class="line">var_dump(<span class="variable">$link</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$link</span>) &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"错误连接"</span>;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">'ERROR'</span>.mysqli_connect_errno().<span class="string">':'</span>.mysqli_connect_error();</span><br><span class="line">    <span class="built_in">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"成功"</span>;</span><br></pre></td></tr></table></figure><ul><li>初始化连接</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$link</span>=mysqli_init();</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$link</span>)&#123;</span><br><span class="line">    die(<span class="string">'MySQLi Init Failed'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">设置连接选项</span><br><span class="line"><span class="keyword">if</span>(!mysqli_options(<span class="variable">$link</span>,MYSQLI_INIT_COMMAND,<span class="string">'SET AUTOCOMMIT=0'</span>))&#123;</span><br><span class="line">    die(<span class="string">'MySQLI Options Failed'</span>);</span><br><span class="line">&#125;</span><br><span class="line">//建立MySQL的连接</span><br><span class="line"><span class="keyword">if</span>(!mysqli_real_connect(<span class="variable">$link</span>,<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">'root'</span>))&#123;</span><br><span class="line">die(<span class="string">'Connect Error &lt;br/&gt;'</span>.mysqli_connect_errno().<span class="string">':'</span>.mysqli_connect_error());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(mysqli_ping(<span class="variable">$link</span>))&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'Connect is Ok'</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'Error '</span>.mysqli_error();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>查看配置信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">//得到和MySQL相关信息</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'MySQL客户端版本信息：'</span>.mysqli_get_client_info(<span class="variable">$link</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'MySQL客户端版本：'</span>.mysqli_get_client_version(<span class="variable">$link</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'MySQL服务器的版本号：'</span>.mysqli_get_server_info(<span class="variable">$link</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'MySQL服务器的版本：'</span>.mysqli_get_server_version(<span class="variable">$link</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'MySQL服务器主机名和连接类型：'</span>.mysqli_get_host_info(<span class="variable">$link</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'MySQL协议的版本信息：'</span>.mysqli_get_proto_info(<span class="variable">$link</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'当前系统的状态：'</span>.mysqli_stat(<span class="variable">$link</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'当前线程连接ID：'</span>.mysqli_thread_id(<span class="variable">$link</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="keyword">if</span>(mysqli_thread_safe())&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'启动安全线程'</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'未启动安全线程'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>错误类型</p><ul><li>1》用户名密码不正确<ul><li>Warning: mysqli_connect(): (HY000/1045): Access denied for user ‘root‘@’localhost’<br>(using password: YES) in G:\maizi\PHPAdvance\MySQLi\2-mysqli_connect.php on line 5<br>bool(false)<ul><li>2》MySQL服务器没有开启<ul><li>ERROR 2003 (HY000): Can’t connect to MySQL server on ‘localhost’ (10061)<br>Warning: mysqli_connect(): in G:\maizi\PHPAdvance\MySQLi\2-mysqli_connect.php on line 13<br>bool(false)</li></ul></li></ul></li></ul></li></ul></li><li><p>抑制错误：</p><ul><li>@mysqli_connect(‘localhost’, ‘root’, ‘root’, ‘mysqli’,’8889’) or die(‘数据库连接失败<br>ERROR’.mysqli_connect_errno().’:’.mysqli_connect_error());</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//mysqli_connect_errno():连接产生的错误编号</span><br><span class="line">//mysqli_connect_error():连接产生的错误信息</span><br></pre></td></tr></table></figure><h5 id="二、设置字符集"><a href="#二、设置字符集" class="headerlink" title="二、设置字符集"></a>二、设置字符集</h5><ol><li>命令：SET NAMES GBK</li><li>mysqli_set_charset($link, ‘UTF8’);</li><li>mysqli_query($link, ‘SET NAMES UTF8’);<ul><li>print_r(mysqli_character_set_name($link)); // 默认</li><li>print_r(mysqli_get_charset($link)); // 获取</li></ul></li></ol><h5 id="三、打开指定数据库"><a href="#三、打开指定数据库" class="headerlink" title="三、打开指定数据库"></a>三、打开指定数据库</h5><pre><code>$res = mysqli_select_db($link,&apos;mysqli&apos;); # or die(&apos;指定数据库不存在&lt;\br&gt;&apos;.mysqli__errno($link).&apos;:&apos;.mysqli__error($link));var_dump($res);</code></pre><h5 id="执行SQL查询"><a href="#执行SQL查询" class="headerlink" title="执行SQL查询"></a>执行SQL查询</h5><ul><li>SQL直接Query创建和插入</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">执行SQL查询 mysqli_query()执行SQL查询</span><br><span class="line">//创建test2数据库</span><br><span class="line">// <span class="variable">$sql</span>=<span class="string">"CREATE DATABASE IF NOT EXISTS test2 DEFAULT CHARACTER SET 'utf8'"</span>;</span><br><span class="line">// <span class="variable">$sql</span>=<span class="string">"DROP DATABASE IF EXISTS test2"</span>;</span><br><span class="line">// mysqli_query(<span class="variable">$link</span>,<span class="variable">$sql</span>);</span><br><span class="line">/*</span><br><span class="line">mysqli_query(<span class="variable">$link</span>,<span class="variable">$sql</span>):执行SQL查询</span><br><span class="line">1》只能执行一条SQL语句，SQL语句可以没有分号 </span><br><span class="line">2》mysqli_query()执行SELECT/SHOW/EXPLAIN/DESC/DESCRIBE这样关键字的SQL语句，执行</span><br><span class="line">成功返回的是mysqli_result结果集，执行失败返回<span class="literal">false</span>；</span><br><span class="line">执行其他SQL语句，执行成功返回<span class="literal">true</span>，失败返回<span class="literal">false</span></span><br><span class="line"> */</span><br><span class="line"><span class="variable">$sql</span>=&lt;&lt;&lt;EOF</span><br><span class="line">INSERT user(username,password,age,regTime)</span><br><span class="line">VALUES(<span class="string">'king1'</span>,<span class="string">'king1'</span>,123,<span class="string">'123123'</span>);</span><br><span class="line">EOF;</span><br><span class="line"><span class="variable">$res</span>=mysqli_query(<span class="variable">$link</span>,<span class="variable">$sql</span>);</span><br><span class="line">var_dump(<span class="variable">$res</span>);</span><br></pre></td></tr></table></figure><ul><li>SQL-Query插入和查询</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">执行SQL查询</span><br><span class="line">// <span class="variable">$sql</span>=<span class="string">'INSERT user(username,password,age,regTime) VALUES("maizi1","maizi1",3,"1234123")'</span>;</span><br><span class="line">// <span class="variable">$sql</span>=<span class="string">"INSERT user1(id,username,password,age,regTime) VALUES(8,'queen','queen',14,'123123123')"</span>;</span><br><span class="line"><span class="variable">$sql</span>=&lt;&lt;&lt;EOF</span><br><span class="line">INSERT user(username,password,age,regTime) VALUES(<span class="string">'maizi11'</span>,<span class="string">'maizi11'</span>,3,<span class="string">'123123'</span>),</span><br><span class="line">(<span class="string">'maizi12'</span>,<span class="string">'maizi12'</span>,3,<span class="string">'123123'</span>),</span><br><span class="line">(<span class="string">'maizi13'</span>,<span class="string">'maizi13'</span>,3,<span class="string">'123123'</span>),</span><br><span class="line">(<span class="string">'maizi14'</span>,<span class="string">'maizi14'</span>,3,<span class="string">'123123'</span>),</span><br><span class="line">(<span class="string">'maizi15'</span>,<span class="string">'maizi15'</span>,3,<span class="string">'123123'</span>);</span><br><span class="line">EOF;</span><br><span class="line"><span class="variable">$res</span>=mysqli_query(<span class="variable">$link</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$res</span>)&#123;</span><br><span class="line">    // mysqli_insert_id(<span class="variable">$link</span>)：得到上一步插入操作产生的自增长(AUTO_INCREMENT)值,如果表中没有自增长，返回0</span><br><span class="line"><span class="variable">$lastInsertId</span>=mysqli_insert_id(<span class="variable">$link</span>);</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'恭喜您注册成功，您是网站的第'</span>.<span class="variable">$lastInsertId</span>.<span class="string">'位用户&lt;br/&gt;'</span>;</span><br><span class="line">//mysqli_affected_rows(<span class="variable">$link</span>):得到上一步操作产生的受影响的记录数</span><br><span class="line"><span class="variable">$affectRows</span>=mysqli_affected_rows(<span class="variable">$link</span>);</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'Query Ok, '</span>.<span class="variable">$affectRows</span>.<span class="string">' Rows Affected'</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'Insert Error '</span>.mysqli_errno(<span class="variable">$link</span>).<span class="string">':'</span>.mysqli_error(<span class="variable">$link</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>mysqli_affected_rows</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">执行SQL查询</span><br><span class="line">// <span class="variable">$sql</span>=<span class="string">"INSERT user(username,password,age,regTime) VALUES('AA','AA',12,'123123')"</span>;</span><br><span class="line">// <span class="variable">$sql</span>=<span class="string">"UPDATE user SET age=78 WHERE id&lt;=5"</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"DELETE FROM user324234 WHERE id=9"</span>;</span><br><span class="line"><span class="variable">$res</span>=mysqli_query(<span class="variable">$link</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'受影响的记录数为：'</span>.mysqli_affected_rows(<span class="variable">$link</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">/*</span><br><span class="line"> mysqli_affected_rows(<span class="variable">$link</span>):得到上一步操作产生的受影响的记录数</span><br><span class="line"> 大于0的：受影响的记录数</span><br><span class="line"> 等于0：没有记录被影响</span><br><span class="line"> 等于-1：代表的SQL语句有问题</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><ul><li>mysqli_fetch</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">执行SQL查询</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM user"</span>;</span><br><span class="line">// <span class="variable">$sql</span>=<span class="string">"SHOW DATABASES;"</span>;</span><br><span class="line">// <span class="variable">$sql</span>=<span class="string">"DESC user"</span>;</span><br><span class="line">// <span class="variable">$sql</span>=<span class="string">"DESCRIBE user"</span>;</span><br><span class="line">// <span class="variable">$sql</span>=<span class="string">"EXPLAIN SELECT * FROM user WHERE id=12"</span>;</span><br><span class="line"><span class="variable">$result</span>=mysqli_query(<span class="variable">$link</span>,<span class="variable">$sql</span>);</span><br><span class="line">//得到结果集中的记录条数</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'结果集中记录条数为：'</span>.mysqli_num_rows(<span class="variable">$result</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'上一步操作产生的受影响的记录条数为：'</span>.mysqli_affected_rows(<span class="variable">$link</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'结果集中字段数为：'</span>.mysqli_num_fields(<span class="variable">$result</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'获得最近一次查询所得到的列数：'</span>.mysqli_field_count(<span class="variable">$link</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;hr color="red"/&gt;'</span>;</span><br><span class="line">//取得结果集中的记录</span><br><span class="line">// mysqli_fetch_row(<span class="variable">$result</span>):取得结果集中的一条记录作为索引数组返回</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;pre&gt;'</span>;</span><br><span class="line"><span class="variable">$row</span>=mysqli_fetch_row(<span class="variable">$result</span>);</span><br><span class="line">print_r(<span class="variable">$row</span>);</span><br><span class="line">//mysqli_fetch_assoc(<span class="variable">$result</span>):取得结果集中的一条记录作为关联数组返回</span><br><span class="line"><span class="variable">$row</span>=mysqli_fetch_assoc(<span class="variable">$result</span>);</span><br><span class="line">print_r(<span class="variable">$row</span>);</span><br><span class="line">//mysqli_fetch_array(<span class="variable">$result</span>,<span class="variable">$result_type</span>):取得结果集中的一条记录作为关联数组或者索引数组或者二者都有的数组来返回</span><br><span class="line"><span class="variable">$row</span>=mysqli_fetch_array(<span class="variable">$result</span>, MYSQLI_ASSOC);</span><br><span class="line">/*</span><br><span class="line"> <span class="variable">$result_type</span>的值为：</span><br><span class="line"> MYSQLI_BOTH:关联+索引</span><br><span class="line"> MYSQLI_ASSOC:关联</span><br><span class="line"> MYSQLI_NUM:索引</span><br><span class="line"> */</span><br><span class="line">print_r(<span class="variable">$row</span>);</span><br><span class="line">// mysqli_fetch_object(<span class="variable">$result</span>):作为对象返回</span><br><span class="line"><span class="variable">$row</span>=mysqli_fetch_object(<span class="variable">$result</span>);</span><br><span class="line">print_r(<span class="variable">$row</span>);</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;hr color="red"/&gt;'</span>;</span><br><span class="line">var_dump(mysqli_fetch_assoc(<span class="variable">$result</span>));</span><br></pre></td></tr></table></figure><h5 id="查询并显示用户列表数据"><a href="#查询并显示用户列表数据" class="headerlink" title="查询并显示用户列表数据"></a>查询并显示用户列表数据</h5><ul><li>mysqli_fetch</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">执行SQL查询</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM user"</span>;</span><br><span class="line">//5.得到所有记录</span><br><span class="line"><span class="variable">$result</span>=mysqli_query(<span class="variable">$link</span>,<span class="variable">$sql</span>);</span><br><span class="line">//是结果集，并且结果集中有记录</span><br><span class="line">// <span class="keyword">if</span>(<span class="variable">$result</span> &amp;&amp; mysqli_num_rows(<span class="variable">$result</span>)&gt;0)&#123;</span><br><span class="line">// <span class="keyword">while</span>(<span class="variable">$row</span>=mysqli_fetch_assoc(<span class="variable">$result</span>))&#123;</span><br><span class="line">// <span class="variable">$rows</span>[]=<span class="variable">$row</span>;</span><br><span class="line">// &#125;</span><br><span class="line">// &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">// <span class="built_in">echo</span> <span class="string">'没有记录&lt;br/&gt;'</span>;</span><br><span class="line">// &#125;</span><br><span class="line"></span><br><span class="line">// print_r(<span class="variable">$rows</span>);</span><br><span class="line">// <span class="keyword">if</span>(<span class="variable">$result</span> &amp;&amp; mysqli_num_rows(<span class="variable">$result</span>)&gt;0)&#123;</span><br><span class="line">// // <span class="variable">$rows</span>=mysqli_fetch_all(<span class="variable">$result</span>);</span><br><span class="line">// <span class="variable">$rows</span>=mysqli_fetch_all(<span class="variable">$result</span>,MYSQLI_BOTH);</span><br><span class="line">// &#125;</span><br><span class="line">// print_r(<span class="variable">$rows</span>);</span><br><span class="line"><span class="variable">$string</span>=join(<span class="string">''</span>,array_merge(range(<span class="string">'a'</span>,<span class="string">'z'</span>),range(<span class="string">'A'</span>,<span class="string">'Z'</span>)));</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=1;<span class="variable">$i</span>&lt;=100;<span class="variable">$i</span>++)&#123;</span><br><span class="line"><span class="variable">$username</span>=substr(str_shuffle(<span class="variable">$string</span>),0,5);</span><br><span class="line"><span class="variable">$password</span>=md5(<span class="variable">$username</span>);</span><br><span class="line"><span class="variable">$age</span>=mt_rand(1,99);</span><br><span class="line"><span class="variable">$regTime</span>=time()+10*<span class="variable">$i</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"INSERT user(username,password,age,regTime) VALUES('&#123;<span class="variable">$username</span>&#125;','&#123;<span class="variable">$password</span>&#125;','&#123;<span class="variable">$age</span>&#125;','&#123;<span class="variable">$regTime</span>&#125;')"</span>;</span><br><span class="line">mysqli_query(<span class="variable">$link</span>,<span class="variable">$sql</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>user_list</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">执行SQL查询</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT id,username,age,regTime FROM user"</span>;</span><br><span class="line">//5.得到所有记录</span><br><span class="line"><span class="variable">$result</span>=mysqli_query(<span class="variable">$link</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span> &amp;&amp; mysqli_num_rows(<span class="variable">$result</span>)&gt;0)&#123;</span><br><span class="line"><span class="variable">$rows</span>=mysqli_fetch_all(<span class="variable">$result</span>,MYSQLI_ASSOC);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span> /&gt;</span><br><span class="line">&lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;用户列表&lt;/h3&gt;</span><br><span class="line">&lt;table border=<span class="string">'1'</span> cellpadding=<span class="string">'0'</span> cellspacing=<span class="string">'0'</span> bgcolor=<span class="string">'#ABCDEF'</span> width=<span class="string">'80%'</span>&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;编号&lt;/td&gt;</span><br><span class="line">&lt;td&gt;用户名&lt;/td&gt;</span><br><span class="line">&lt;td&gt;年龄&lt;/td&gt;</span><br><span class="line">&lt;td&gt;注册时间&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;?php <span class="variable">$i</span>=1; foreach(<span class="variable">$rows</span> as <span class="variable">$user</span>):?&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;&lt;?php <span class="built_in">echo</span> <span class="variable">$i</span>++;?&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;?php <span class="built_in">echo</span> <span class="variable">$user</span>[<span class="string">'username'</span>];?&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;?php <span class="built_in">echo</span> <span class="variable">$user</span>[<span class="string">'age'</span>];?&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;?php <span class="built_in">echo</span> date(<span class="string">"Y-m-d H:i:s"</span>,<span class="variable">$user</span>[<span class="string">'regTime'</span>]);?&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;?php endforeach;?&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr><hr><ul><li>mysqli_data_seek</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM user"</span>;</span><br><span class="line"><span class="variable">$result</span>=mysqli_query(<span class="variable">$link</span>, <span class="variable">$sql</span>);</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;pre&gt;'</span>;</span><br><span class="line">// <span class="variable">$row</span>=mysqli_fetch_assoc(<span class="variable">$result</span>);</span><br><span class="line">// print_r(<span class="variable">$row</span>);</span><br><span class="line">// <span class="variable">$row</span>=mysqli_fetch_assoc(<span class="variable">$result</span>);</span><br><span class="line">// print_r(<span class="variable">$row</span>);</span><br><span class="line">// <span class="variable">$row</span>=mysqli_fetch_assoc(<span class="variable">$result</span>);</span><br><span class="line">// print_r(<span class="variable">$row</span>);</span><br><span class="line">// <span class="built_in">echo</span> <span class="string">'&lt;hr/&gt;'</span>;</span><br><span class="line">// //mysqli_data_seek(<span class="variable">$result</span>,<span class="variable">$offset</span>):将结果集的指针移动到指定位置</span><br><span class="line">// mysqli_data_seek(<span class="variable">$result</span>, 0);</span><br><span class="line"></span><br><span class="line">// <span class="variable">$row</span>=mysqli_fetch_assoc(<span class="variable">$result</span>);</span><br><span class="line">// print_r(<span class="variable">$row</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$rows</span>=mysqli_fetch_all(<span class="variable">$result</span>,MYSQLI_ASSOC);</span><br><span class="line">print_r(<span class="variable">$rows</span>);</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;hr color="red"/&gt;'</span>;</span><br><span class="line">mysqli_data_seek(<span class="variable">$result</span>, 0);</span><br><span class="line"><span class="variable">$row</span>=mysqli_fetch_assoc(<span class="variable">$result</span>);</span><br><span class="line">print_r(<span class="variable">$row</span>);</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;hr color="pink"/&gt;'</span>;</span><br><span class="line">//释放结果集</span><br><span class="line">mysqli_free_result(<span class="variable">$result</span>);</span><br><span class="line">//关闭连接</span><br><span class="line">mysqli_close(<span class="variable">$link</span>);</span><br><span class="line">mysqli_set_charset(<span class="variable">$link</span>,<span class="string">'utf8'</span>);</span><br></pre></td></tr></table></figure><ul><li>mysqli_field</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM user"</span>;</span><br><span class="line"><span class="variable">$result</span>=mysqli_query(<span class="variable">$link</span>, <span class="variable">$sql</span>);</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'结果集中字段数：'</span>.mysqli_num_fields(<span class="variable">$result</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="built_in">echo</span> mysqli_field_count(<span class="variable">$link</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;hr/&gt;'</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;pre&gt;'</span>;</span><br><span class="line">// <span class="variable">$fieldInfo</span>=mysqli_fetch_field(<span class="variable">$result</span>);</span><br><span class="line">// print_r(<span class="variable">$fieldInfo</span>);</span><br><span class="line"></span><br><span class="line">// <span class="variable">$fieldInfo</span>=mysqli_fetch_field(<span class="variable">$result</span>);</span><br><span class="line">// print_r(<span class="variable">$fieldInfo</span>);</span><br><span class="line">// <span class="variable">$fieldsInfo</span>=mysqli_fetch_fields(<span class="variable">$result</span>);</span><br><span class="line">// print_r(<span class="variable">$fieldsInfo</span>);</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'当前指针所在位置：'</span>.mysqli_field_tell(<span class="variable">$result</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">print_r(mysqli_fetch_field_direct(<span class="variable">$result</span>, 0)).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;hr/&gt;'</span>;</span><br><span class="line">mysqli_field_seek(<span class="variable">$result</span>, 3);</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'当前指针所在位置：'</span>.mysqli_field_tell(<span class="variable">$result</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br></pre></td></tr></table></figure><ul><li>mysqli_multi_query</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//执行多条SQL语句,每条SQL语句一定要以分号结尾，否则就会失败</span><br><span class="line">//如果多条SQL语句中有一条失败了，整个都会失败</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"DELETE FROM user WHERE id=3;"</span>;</span><br><span class="line"><span class="variable">$sql</span>.=<span class="string">"INSERT user(username,password,age,regTime) VALUES('AAAA1','AAAAA1',99,'1234123');"</span>;</span><br><span class="line"><span class="variable">$sql</span>.=<span class="string">"UPDATE user123 SET age=5 WHERE id=1;"</span>;</span><br><span class="line"><span class="variable">$res</span>=mysqli_multi_query(<span class="variable">$link</span>,<span class="variable">$sql</span>);</span><br><span class="line">var_dump(<span class="variable">$res</span>);</span><br></pre></td></tr></table></figure><ul><li>mysqli_multi_result</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sql</span> =<span class="string">"SELECT id,username,age,regTime FROM user limit 5;"</span>;</span><br><span class="line"><span class="variable">$sql</span>.=<span class="string">"SELECT VERSION() AS mysql_version;"</span>;</span><br><span class="line"><span class="variable">$sql</span>.=<span class="string">"SELECT NOW() AS time_now;"</span>;</span><br><span class="line"><span class="variable">$sql</span>.=<span class="string">"SELECT * FROM mysql.user;"</span>;</span><br><span class="line"><span class="variable">$res</span>=mysqli_multi_query(<span class="variable">$link</span>, <span class="variable">$sql</span>);</span><br><span class="line">//mysqli_store_result():传输上一次产生的结果集</span><br><span class="line">//mysqli_more_results():判读是否有更多的结果集</span><br><span class="line">//mysqli_next_result():将结果集的指针向下移动一位</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$res</span>)&#123;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>=mysqli_store_result(<span class="variable">$link</span>))&#123;</span><br><span class="line"><span class="variable">$rows</span>[]=mysqli_fetch_all(<span class="variable">$result</span>,MYSQLI_ASSOC);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">while</span>(mysqli_more_results(<span class="variable">$link</span>)&amp;&amp;mysqli_next_result(<span class="variable">$link</span>));</span><br><span class="line">&#125;</span><br><span class="line">print_r(<span class="variable">$rows</span>);</span><br></pre></td></tr></table></figure><ul><li>mysqli_prepare</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">require_once <span class="string">'conn.php'</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"INSERT user(username,password,age,regTime) VALUES(?,?,?,?)"</span>;</span><br><span class="line"><span class="variable">$stmt</span>=mysqli_prepare(<span class="variable">$link</span>, <span class="variable">$sql</span>);//准备要执行的SQL语句</span><br><span class="line">// print_r(<span class="variable">$stmt</span>);</span><br><span class="line"><span class="variable">$username</span>=<span class="string">'maizi123412'</span>;</span><br><span class="line"><span class="variable">$password</span>=<span class="string">'maizi123412'</span>;</span><br><span class="line"><span class="variable">$age</span>=3;</span><br><span class="line"><span class="variable">$regTime</span>=time();</span><br><span class="line">@mysqli_stmt_bind_param(<span class="variable">$stmt</span>, <span class="string">'ssii'</span>,<span class="variable">$username</span>,<span class="variable">$password</span>,<span class="variable">$age</span>);</span><br><span class="line"><span class="variable">$res</span>=mysqli_stmt_execute(<span class="variable">$stmt</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">die (<span class="string">"ERROR "</span>.mysqli_stmt_errno(<span class="variable">$stmt</span>).<span class="string">':'</span>.mysqli_stmt_error(<span class="variable">$stmt</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="string">'maizi1234567'</span>;</span><br><span class="line"><span class="variable">$password</span>=<span class="string">'maizi1234567'</span>;</span><br><span class="line"><span class="variable">$age</span>=35;</span><br><span class="line"><span class="variable">$regTime</span>=time();</span><br><span class="line">mysqli_stmt_execute(<span class="variable">$stmt</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'受影响的记录条数为：'</span>.mysqli_stmt_affected_rows(<span class="variable">$stmt</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'得到AUTO_INCREMENT的之为：'</span>.mysqli_stmt_insert_id(<span class="variable">$stmt</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysqli_stmt_close(<span class="variable">$stmt</span>);</span><br><span class="line">mysqli_close(<span class="variable">$link</span>);</span><br></pre></td></tr></table></figure><ul><li>mysqli_stmt_bind_result</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">require_once <span class="string">'conn.php'</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT id,username,age FROM user WHERE id&lt;=?"</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$stmt</span>=mysqli_prepare(<span class="variable">$link</span>, <span class="variable">$sql</span>))&#123;</span><br><span class="line"><span class="built_in">echo</span> mysqli_stmt_param_count(<span class="variable">$stmt</span>).<span class="string">'个参数&lt;br/&gt;'</span>;</span><br><span class="line"><span class="variable">$id</span>=143;</span><br><span class="line">mysqli_stmt_bind_param(<span class="variable">$stmt</span>, <span class="string">'i'</span>,<span class="variable">$id</span>);</span><br><span class="line">mysqli_stmt_execute(<span class="variable">$stmt</span>);</span><br><span class="line">mysqli_stmt_bind_result(<span class="variable">$stmt</span>,<span class="variable">$res_id</span>,<span class="variable">$res_username</span>,<span class="variable">$res_age</span>);</span><br><span class="line">// mysqli_stmt_fetch(<span class="variable">$stmt</span>);</span><br><span class="line">// <span class="built_in">printf</span>(<span class="string">'我的编号为：'</span>.<span class="variable">$res_id</span>.<span class="string">'--我的名字为：'</span>.<span class="variable">$res_username</span>.<span class="string">'--我的年龄为：'</span>.<span class="variable">$res_age</span>);</span><br><span class="line"><span class="keyword">while</span>(mysqli_stmt_fetch(<span class="variable">$stmt</span>))&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">'我的编号为：'</span>.<span class="variable">$res_id</span>.<span class="string">'--我的名字为：'</span>.<span class="variable">$res_username</span>.<span class="string">'--我的年龄为：'</span>.<span class="variable">$res_age</span>);</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;hr/&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;hr color="red"/&gt;'</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>mysqli_stmt_data_seek</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">require_once <span class="string">'conn.php'</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT id,username,age FROM user WHERE id&lt;=30"</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$stmt</span>=mysqli_prepare(<span class="variable">$link</span>, <span class="variable">$sql</span>))&#123;</span><br><span class="line">mysqli_execute(<span class="variable">$stmt</span>);</span><br><span class="line">mysqli_stmt_store_result(<span class="variable">$stmt</span>);</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'受影响的记录条数为：'</span>.mysqli_stmt_affected_rows(<span class="variable">$stmt</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'结果集中的记录条数为：'</span>.mysqli_stmt_num_rows(<span class="variable">$stmt</span>).<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">mysqli_stmt_bind_result(<span class="variable">$stmt</span>,<span class="variable">$id</span>,<span class="variable">$username</span>,<span class="variable">$age</span>);</span><br><span class="line"><span class="keyword">while</span>(mysqli_stmt_fetch(<span class="variable">$stmt</span>))&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'编号：'</span>.<span class="variable">$id</span>.<span class="string">'--'</span>.<span class="string">'用户名：'</span>.<span class="variable">$username</span>.<span class="string">'--年龄：'</span>.<span class="variable">$age</span>.<span class="string">"&lt;hr/&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;hr color="red"/&gt;'</span>;</span><br><span class="line">mysqli_stmt_data_seek(<span class="variable">$stmt</span>, 1);</span><br><span class="line">mysqli_stmt_bind_result(<span class="variable">$stmt</span>,<span class="variable">$id</span>,<span class="variable">$username</span>,<span class="variable">$age</span>);</span><br><span class="line">mysqli_stmt_fetch(<span class="variable">$stmt</span>);</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'编号：'</span>.<span class="variable">$id</span>.<span class="string">'--'</span>.<span class="string">'用户名：'</span>.<span class="variable">$username</span>.<span class="string">'--年龄：'</span>.<span class="variable">$age</span>.<span class="string">"&lt;hr/&gt;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>mysqli_commit</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">require_once <span class="string">'conn.php'</span>;</span><br><span class="line">//关闭自动提交</span><br><span class="line">mysqli_autocommit(<span class="variable">$link</span>, FALSE);</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"UPDATE account SET money=money-2000 WHERE username='maizi'"</span>;</span><br><span class="line"><span class="variable">$res</span>=mysqli_query(<span class="variable">$link</span>, <span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">'UPDATE account123 SET money=money+2000 WHERE username="king"'</span>;</span><br><span class="line"><span class="variable">$res1</span>=mysqli_query(<span class="variable">$link</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$res</span> &amp;&amp; <span class="variable">$res1</span>)&#123;</span><br><span class="line">mysqli_commit(<span class="variable">$link</span>);//提交</span><br><span class="line">mysqli_autocommit(<span class="variable">$link</span>, TRUE);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">mysqli_rollback(<span class="variable">$link</span>);//回滚</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>reg</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span> /&gt;</span><br><span class="line">&lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;注册页面&lt;/h3&gt;</span><br><span class="line">&lt;form action=<span class="string">"doAction.php?act=reg"</span> method=<span class="string">'post'</span>&gt;</span><br><span class="line">&lt;table border=<span class="string">'1'</span> width=<span class="string">'80%'</span> cellpadding=<span class="string">'0'</span> cellspacing=<span class="string">'0'</span> bgcolor=<span class="string">'#ABCDEF'</span> &gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;用户名&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"username"</span> id=<span class="string">""</span> placeholder=<span class="string">'请输入合法用户名'</span>/&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;密码&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;input <span class="built_in">type</span>=<span class="string">"password"</span> name=<span class="string">"password"</span> id=<span class="string">""</span> placeholder=<span class="string">'密码不能为空'</span> /&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td colspan=<span class="string">'2'</span>&gt;</span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"submit"</span> value=<span class="string">"注册"</span> /&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>testFunction</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">require_once <span class="string">'functions/mysql.func.php'</span>;</span><br><span class="line">require_once <span class="string">'config/config.php'</span>;</span><br><span class="line">// <span class="variable">$host</span>=<span class="string">'localhost'</span>;</span><br><span class="line">// <span class="variable">$user</span>=<span class="string">'root'</span>;</span><br><span class="line">// <span class="variable">$password</span>=<span class="string">'root'</span>;</span><br><span class="line">// <span class="variable">$charset</span>=<span class="string">'utf8'</span>;</span><br><span class="line">// <span class="variable">$database</span>=<span class="string">'test1'</span>;</span><br><span class="line">// <span class="variable">$link</span>=connect1(<span class="variable">$host</span>, <span class="variable">$user</span>, <span class="variable">$password</span>, <span class="variable">$charset</span>, <span class="variable">$database</span>);</span><br><span class="line">// var_dump(<span class="variable">$link</span>);</span><br><span class="line">// <span class="variable">$link</span>=connect2(<span class="variable">$config</span>);</span><br><span class="line">// var_dump(<span class="variable">$link</span>);</span><br><span class="line"><span class="variable">$link</span>=connect3();</span><br><span class="line">// var_dump(<span class="variable">$link</span>);</span><br><span class="line">// <span class="variable">$array</span>=[</span><br><span class="line">// <span class="string">'username'</span>=&gt;<span class="string">'queen1'</span>,</span><br><span class="line">// <span class="string">'password'</span>=&gt;md5(<span class="string">'queen1'</span>),</span><br><span class="line">// <span class="string">'age'</span>=&gt;22,</span><br><span class="line">// <span class="string">'regTime'</span>=&gt;time()</span><br><span class="line">// ];</span><br><span class="line"><span class="variable">$table</span>=<span class="string">'user'</span>;</span><br><span class="line">// <span class="keyword">if</span>(insert(<span class="variable">$link</span>, <span class="variable">$array</span>, <span class="variable">$table</span>))&#123;</span><br><span class="line">// <span class="built_in">echo</span> <span class="string">'注册成功'</span>;</span><br><span class="line">// &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">// <span class="built_in">echo</span> <span class="string">'注册失败'</span>;</span><br><span class="line">// &#125;</span><br><span class="line">// <span class="variable">$array</span>=[<span class="string">'age'</span>=&gt;<span class="string">'12'</span>];</span><br><span class="line">// // <span class="variable">$res</span>=update(<span class="variable">$link</span>, <span class="variable">$array</span>, <span class="variable">$table</span>);</span><br><span class="line">// <span class="variable">$res</span>=update(<span class="variable">$link</span>,<span class="variable">$array</span>,<span class="variable">$table</span>,<span class="string">'id=2'</span>);</span><br><span class="line">// <span class="keyword">if</span>(<span class="variable">$res</span>)&#123;</span><br><span class="line">// <span class="built_in">echo</span> <span class="string">'更新成功'</span>;</span><br><span class="line">// &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">// <span class="built_in">echo</span> <span class="string">'更新失败'</span>;</span><br><span class="line">// &#125;</span><br><span class="line"></span><br><span class="line">// <span class="variable">$res</span>=delete(<span class="variable">$link</span>, <span class="variable">$table</span>,<span class="string">'id=3'</span>);</span><br><span class="line">// <span class="keyword">if</span>(<span class="variable">$res</span>)&#123;</span><br><span class="line">// <span class="built_in">echo</span> <span class="string">'删除成功'</span>;</span><br><span class="line">// &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">// <span class="built_in">echo</span> <span class="string">'删除失败'</span>;</span><br><span class="line">// &#125;</span><br><span class="line"><span class="variable">$query</span>=<span class="string">"SELECT id,username,age FROM user WHERE id=1"</span>;</span><br><span class="line"><span class="variable">$row</span>=fetchOne(<span class="variable">$link</span>, <span class="variable">$query</span>);</span><br><span class="line">print_r(<span class="variable">$row</span>);</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;hr/&gt;'</span>;</span><br><span class="line"><span class="variable">$query</span>=<span class="string">"SELECT id,username,age FROM user WHERE id&gt;=1"</span>;</span><br><span class="line"><span class="variable">$rows</span>=fetchAll(<span class="variable">$link</span>, <span class="variable">$query</span>);</span><br><span class="line">print_r(<span class="variable">$rows</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;hr/&gt;'</span>;</span><br><span class="line"><span class="built_in">echo</span> getTotalRows(<span class="variable">$link</span>,<span class="string">'user1'</span>);</span><br></pre></td></tr></table></figure><h5 id="释放结果集"><a href="#释放结果集" class="headerlink" title="释放结果集"></a>释放结果集</h5><h5 id="关闭连接"><a href="#关闭连接" class="headerlink" title="关闭连接"></a>关闭连接</h5><h3 id="MySQLi常见函数"><a href="#MySQLi常见函数" class="headerlink" title="MySQLi常见函数"></a>MySQLi常见函数</h3><h4 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h4><h6 id="连接-1"><a href="#连接-1" class="headerlink" title="连接"></a>连接</h6><ul><li><p>mysqli_connect()</p><ul><li>作用<ul><li>打开一个到MySQL服务器的新的连接</li></ul></li><li>语法<ul><li>mysqli mysqli_connect ([ string $host = ini_get(“mysqli.default_host”) [, string $username = ini_get(“mysqli.default_user”) [, string $passwd = ini_get(“mysqli.default_pw”) [, string $dbname = “” [, int $port = ini_get(“mysqli.default_port”) [, string $socket = ini_get(“mysqli.default_socket”) ]]]]]] )</li></ul></li></ul></li><li><p>mysqli_real_connect()</p><ul><li>作用<ul><li>建立一个 MySQL 服务器连接</li></ul></li><li>语法<ul><li>bool mysqli_real_connect ( mysqli $link [, string $host [, string $username [, string $passwd [, string $dbname [, int $port [, string $socket [, int $flags ]]]]]]] )</li></ul></li><li>注意<ul><li>mysqli_real_connect() 需要一个有效的对象，这个对象由 mysqli_init() 创建</li><li>可以使用 mysqli_options() 设置各种连接设置</li><li>提供 flags 参数</li></ul></li></ul></li><li><p>mysqli_init()</p><ul><li>作用<ul><li>初始化mysqli并且返回一个由mysqli_real_connect使用的资源类型。</li></ul></li><li>语法<ul><li>mysqli mysqli_init ( void )</li></ul></li></ul></li><li><p>mysqli_options()</p><ul><li>作用<ul><li>设置选项</li></ul></li><li>语法<ul><li>bool mysqli_options ( mysqli $link , int $option , mixed $value )</li></ul></li><li>注意<ul><li>常用选项    </li></ul></li></ul></li><li><p>mysqli_ping()</p><ul><li>作用<ul><li>ping一个服务器连接，或者如果那个连接断了尝试重连</li></ul></li><li>语法<ul><li>bool mysqli_ping ( mysqli $link )</li></ul></li></ul></li></ul><h6 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h6><ul><li>mysqli_connect_errno()<ul><li>作用<ul><li>返回最后一次连接调用的错误代码</li></ul></li></ul></li><li>mysqli_connect_error()<ul><li>作用<ul><li>返回一个字符串描述的最后一次连接调用的错误代码</li></ul></li></ul></li><li>mysqli_errno()<ul><li>作用<ul><li>返回最近的函数调用产生的错误代码</li></ul></li><li>语法<ul><li>int mysqli_errno ( mysqli $link )</li></ul></li></ul></li><li>mysqli_error()<ul><li>作用<ul><li>返回字符串描述的最近一次函数调用产生的错误代码</li></ul></li><li>语法<ul><li>string mysqli_error ( mysqli $link )</li></ul></li></ul></li></ul><h6 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h6><ul><li>mysqli_character_set_name()<ul><li>作用<ul><li>返回数据库连接的默认字符集</li></ul></li></ul></li><li>mysqli_get_charset()<ul><li>作用<ul><li>返回对象的字符集</li></ul></li><li>语法<ul><li>object mysqli_get_charset ( mysqli $link )</li></ul></li></ul></li><li>mysqli_set_charset()<ul><li>作用<ul><li>设置默认的客户端字符集</li></ul></li><li>语法<ul><li>bool mysqli_set_charset ( mysqli $link , string $charset )</li></ul></li></ul></li></ul><h6 id="信息相关"><a href="#信息相关" class="headerlink" title="信息相关"></a>信息相关</h6><ul><li>mysqli_get_client_info()<ul><li>作用<ul><li>返回字符串类型的Mysql客户端版本信息</li></ul></li><li>语法<ul><li>string mysqli_get_client_info ( mysqli $link )<br>mysqli_get_client_version()</li></ul></li><li>作用<ul><li>将 MySQL 客户端库版本作为整数返回</li></ul></li><li>语法<ul><li>int mysqli_get_client_version ( mysqli $link )</li></ul></li></ul></li><li>mysqli_get_server_info()<ul><li>作用<ul><li>返回MySQL服务器的版本号</li></ul></li><li>语法<ul><li>string mysqli_get_server_info ( mysqli $link )<br>mysqli_get_server_version()</li></ul></li><li>作用<ul><li>作为一个整数返回MySQL服务器的版本</li></ul></li><li>语法<ul><li>int mysqli_get_server_version ( mysqli $link )</li></ul></li></ul></li><li>mysqli_get_host_info()<ul><li>作用<ul><li>返回 MySQL 服务器主机名和连接类型。</li></ul></li><li>语法<ul><li>string mysqli_get_host_info ( mysqli $link )</li></ul></li></ul></li><li>mysqli_get_proto_info()<ul><li>作用<ul><li>返回使用的Mysql协议的版本信息</li></ul></li><li>语法<ul><li>int mysqli_get_proto_info ( mysqli $link )</li></ul></li></ul></li><li>mysqli_stat()<ul><li>作用<ul><li>获取当前系统状态</li></ul></li><li>语法<ul><li>string mysqli_stat ( mysqli $link )</li></ul></li></ul></li><li>mysqli_thread_id()<ul><li>作用<ul><li>返回当前连接的线程ID</li></ul></li><li>语法<ul><li>int mysqli_thread_id ( mysqli $link )</li></ul></li></ul></li><li>mysqli_thread_safe()<ul><li>作用<ul><li>返回是否设定了线程安全</li></ul></li><li>语法<ul><li>bool mysqli_thread_safe ( void )</li></ul></li></ul></li></ul><h4 id="数据操作"><a href="#数据操作" class="headerlink" title="数据操作"></a>数据操作</h4><h6 id="数据库-1"><a href="#数据库-1" class="headerlink" title="数据库"></a>数据库</h6><ul><li>mysqli_select_db()<ul><li>作用<ul><li>为数据库查询选择默认数据库</li></ul></li><li>语法<ul><li>bool mysqli_select_db ( mysqli $link , string $dbname )</li></ul></li></ul></li></ul><h6 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h6><ul><li>mysqli_query()<ul><li>作用<ul><li>执行SQL查询</li></ul></li><li>语法<ul><li>mixed mysqli_query ( mysqli $link , string $query [, int $resultmode = MYSQLI_STORE_RESULT ] )</li></ul></li><li>注意<ul><li>$resultmode值<ul><li>MYSQLI_USE_RESULT,检索大数据量</li><li>MYSQLI_STORE_RESULT,默认值</li></ul></li><li>执行其它查询，成功返回true，失败返回false</li></ul></li></ul></li><li>mysqli_real_query()<ul><li>作用<ul><li>执行一个mysql查询</li></ul></li><li>语法<ul><li>bool mysqli_real_query ( mysqli $link , string $query )</li></ul></li><li>注意<ul><li>执行一个单条数据库查询, 其结果可以使用mysqli_store_result()或mysqli_use_result()检索或存储.</li><li>可以通过mysqli_field_count()得到结果集的数量</li></ul></li></ul></li><li>mysqli_multi_query()<ul><li>作用<ul><li>在数据库上执行一个多语句查询</li></ul></li></ul></li><li>mysqli_affected_rows()<ul><li>作用<ul><li>得到上一次MySQL操作影响的记录数</li></ul></li><li>语法<ul><li>int mysqli_affected_rows ( mysqli $link )</li></ul></li></ul></li><li>mysqli_insert_id()<ul><li>作用<ul><li>返回上一插入操作产生的AUTO_INCREMENT的值</li></ul></li><li>语法<ul><li>mixed mysqli_insert_id ( mysqli $link )</li></ul></li></ul></li></ul><h4 id="预处理操作"><a href="#预处理操作" class="headerlink" title="预处理操作"></a>预处理操作</h4><ul><li>mysqli_prepare()<ul><li>作用<ul><li>准备一个用于执行的SQL语句</li></ul></li><li>语法<ul><li>mysqli_stmt mysqli_prepare ( mysqli $link , string $query )</li></ul></li></ul></li><li><p>mysqli_stmt_bind_param()</p><ul><li>作用<ul><li>将一个变量作为参数绑定到prepared语句上</li></ul></li><li>语法<ul><li>bool mysqli_stmt_bind_param ( mysqli_stmt $stmt , string $types , mixed &amp;$var1 [, mixed &amp;$… ] )</li></ul></li><li>注意<ul><li>$types的值</li></ul></li></ul></li><li><p>mysqli_stmt_bind_result()</p><ul><li>作用<ul><li>将一个变量绑定到一个prepared语句上用于结果存储</li></ul></li><li>语法<ul><li>bool mysqli_stmt_bind_result ( mysqli_stmt $stmt , mixed &amp;$var1 [, mixed &amp;$… ] )<br>mysqli_stmt_execute()</li></ul></li><li>作用<ul><li>执行一个prepared查询</li></ul></li><li>语法<ul><li>bool mysqli_stmt_execute ( mysqli_stmt $stmt )</li></ul></li></ul></li><li>mysqli_stmt_affected_rows()<ul><li>作用<ul><li>返回最后一条倍执行的语句改变，删除或插入的总行数</li></ul></li><li>语法<ul><li>int mysqli_stmt_affected_rows ( mysqli_stmt $stmt )</li></ul></li></ul></li><li>mysqli_stmt_insert_id()<ul><li>作用<ul><li>获取前一个INSERT操作生成的ID</li></ul></li><li>语法<ul><li>mixed mysqli_stmt_insert_id ( mysqli_stmt $stmt )</li></ul></li></ul></li><li>mysqli_stmt_errno()<ul><li>作用<ul><li>返回最近一次语句调用的错误代码</li></ul></li><li>语法<ul><li>int mysqli_stmt_errno ( mysqli_stmt $stmt )</li></ul></li></ul></li><li>mysqli_stmt_error()<ul><li>作用<ul><li>返回最后一条语句错误的字符串描述</li></ul></li><li>语法<ul><li>string mysqli_stmt_error ( mysqli_stmt $stmt )</li></ul></li></ul></li><li>mysqli_stmt_num_rows()<ul><li>作用<ul><li>返回语句结果集中的行数</li></ul></li><li>语法<ul><li>int mysqli_stmt_num_rows ( mysqli_stmt $stmt )</li></ul></li></ul></li><li>mysqli_stmt_param_count()<ul><li>作用<ul><li>返回给定语句中参数数量</li></ul></li><li>语法<ul><li>int mysqli_stmt_param_count ( mysqli_stmt $stmt )</li></ul></li></ul></li><li>mysqli_stmt_data_seek()<ul><li>作用<ul><li>查看语句结果集中的任意行</li></ul></li><li>语法<ul><li>void mysqli_stmt_data_seek ( mysqli_stmt $stmt , int $offset )</li></ul></li></ul></li><li>mysqli_stmt_fetch()<ul><li>作用<ul><li>从一个prepared语句中抓取结果到指定变量中</li></ul></li><li>语法<ul><li>bool mysqli_stmt_fetch ( mysqli_stmt $stmt )</li></ul></li></ul></li><li>mysqli_stmt_free_result()<ul><li>作用<ul><li>释放给定语句处理存储的结果集所占内存</li></ul></li><li>语法<ul><li>void mysqli_stmt_free_result ( mysqli_stmt $stmt )</li></ul></li></ul></li><li>mysqli_stmt_num_rows()<ul><li>作用<ul><li>返回结果集中记录的条数</li></ul></li><li>语法<ul><li>int mysqli_stmt_num_rows ( mysqli_stmt $stmt )</li></ul></li></ul></li><li>mysqli_stmt_store_result()<ul><li>作用<ul><li>从一个prepared语句中传输一个结果集</li></ul></li><li>语法<ul><li>bool mysqli_stmt_store_result ( mysqli_stmt $stmt )</li></ul></li></ul></li></ul><h4 id="结果集"><a href="#结果集" class="headerlink" title="结果集"></a>结果集</h4><ul><li>mysqli_use_result()<ul><li>作用<ul><li>初始化一个结果集的取回</li></ul></li><li>语法<ul><li>mysqli_result mysqli_use_result ( mysqli $link )</li></ul></li></ul></li><li>mysqli_more_results()<ul><li>作用<ul><li>检查一个多语句查询是否还有其他查询结果集</li></ul></li><li>语法<ul><li>bool mysqli_more_results ( mysqli $link )</li></ul></li></ul></li><li>mysqli_next_result()<ul><li>作用<ul><li>从multi_query中准备下一个结果集</li></ul></li><li>语法<ul><li>bool mysqli_next_result ( mysqli $link )</li></ul></li></ul></li><li>mysqli_num_rows()<ul><li>作用<ul><li>获取结果集中记录条数</li></ul></li><li>语法<ul><li>int mysqli_num_rows ( mysqli_result $result )</li></ul></li></ul></li><li>mysqli_fetch_all()<ul><li>作用<ul><li>抓取所有的结果行并且以关联数据，数值索引数组，或者两者皆有的方式返回结果集。仅可用于 mysqlnd。</li></ul></li><li>语法<ul><li>mixed mysqli_fetch_all ( mysqli_result $result [, int $resulttype = MYSQLI_NUM ] )</li></ul></li></ul></li><li>mysqli_fetch_array()<ul><li>作用<ul><li>以一个关联数组，数值索引数组，或者两者皆有的方式抓取一行结果</li></ul></li><li>语法<ul><li>mixed mysqli_fetch_array ( mysqli_result $result [, int $resulttype = MYSQLI_BOTH ] )</li></ul></li></ul></li><li>mysqli_fetch_assoc()<ul><li>作用<ul><li>以一个关联数组方式抓取一行结果</li></ul></li><li>语法<ul><li>array mysqli_fetch_assoc ( mysqli_result $result )</li></ul></li></ul></li><li>mysqli_fetch_row()<ul><li>作用<ul><li>以索引数组返回结果集中的一行</li></ul></li><li>语法<ul><li>mixed mysqli_fetch_row ( mysqli_result $result )</li></ul></li></ul></li><li>mysqli_fetch_object()<ul><li>作用<ul><li>以一个对象的方式返回一个结果集中的当前行</li></ul></li><li>语法<ul><li>object mysqli_fetch_object ( mysqli_result $result [, string $class_name = “stdClass” [, array $params ]] )</li></ul></li></ul></li><li>mysqli_data_seek()<ul><li>作用<ul><li>将结果中的结果指针调整到任意行</li></ul></li><li>语法<ul><li>将结果中的结果指针调整到任意行</li></ul></li></ul></li><li>mysqli_field_count()<ul><li>作用<ul><li>返回最近一次查询获取到的列的数目</li></ul></li><li>语法<ul><li>int mysqli_field_count ( mysqli $link )</li></ul></li></ul></li><li>mysqli_num_fields()<ul><li>作用<ul><li>获取结果中字段数量</li></ul></li><li>语法<ul><li>int mysqli_num_fields ( mysqli_result $result )</li></ul></li></ul></li><li>mysqli_fetch_field()<ul><li>作用<ul><li>从结果集中取得下一字段（列），并作为对象返回</li></ul></li><li>语法<ul><li>mysqli_fetch_field(result);</li></ul></li></ul></li><li>mysqli_fetch_fields()<ul><li>作用<ul><li>返回一个代表结果集字段的对象数组</li></ul></li><li>语法<ul><li>array mysqli_fetch_fields ( mysqli_result $result )</li></ul></li></ul></li><li>mysqli_field_seek()<ul><li>作用<ul><li>设置结果指针到特定的字段开始位置</li></ul></li><li>语法<ul><li>bool mysqli_field_seek ( mysqli_result $result , int $fieldnr )</li></ul></li></ul></li><li>mysqli_field_tell()<ul><li>作用<ul><li>获取当前字段在结果集指针中的开始位置</li></ul></li><li>语法<ul><li>int mysqli_field_tell ( mysqli_result $result )</li></ul></li></ul></li><li>mysqli_fetch_field_direct()<ul><li>作用<ul><li>抓取一个单字段的元数据</li></ul></li><li>语法<ul><li>object mysqli_fetch_field_direct ( mysqli_result $result , int $fieldnr )</li></ul></li></ul></li></ul><h4 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h4><ul><li>mysqli_autocommit()<ul><li>作用<ul><li>打开或关闭数据库的自动提交功能</li></ul></li><li>语法<ul><li>bool mysqli_autocommit ( mysqli $link , bool $mode )</li></ul></li></ul></li><li>mysqli_commit()<ul><li>作用<ul><li>提交当前事务</li></ul></li><li>语法<ul><li>bool mysqli_commit ( mysqli $link )</li></ul></li></ul></li><li>mysqli_rollback()<ul><li>作用<ul><li>回滚当前事务</li></ul></li><li>语法<ul><li>bool mysqli_rollback ( mysqli $link )</li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;1.数据库&lt;/li&gt;
&lt;li&gt;2.SQL语言&lt;/li&gt;
&lt;li&gt;3.MySQLi扩展简介&lt;ul&gt;
&lt;li&gt;为什么使用MySQLi扩展&lt;/li&gt;
&lt;li&gt;MySQLi的安装及配置&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PHP第二十八篇——接口设计规范</title>
    <link href="https://icocos.github.io/2018/12/25/PHP%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E7%AF%87%E2%80%94%E2%80%94%E6%8E%A5%E5%8F%A3%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/"/>
    <id>https://icocos.github.io/2018/12/25/PHP第二十八篇——接口设计规范/</id>
    <published>2018-12-25T15:26:01.000Z</published>
    <updated>2019-03-01T10:38:59.520Z</updated>
    
    <content type="html"><![CDATA[<p>任何事情都有规律可行，也有一定的规范性，但是认识或的，规范是死的，能够灵活应用就够了。比如iOS，Android，前段等等一些开发过程中都会有一些规范可寻，按照一定的规范写出来的东西能够更容易迭代与修复问题，更容易给后面的人接手……</p><a id="more"></a><h2 id="接口设计规范"><a href="#接口设计规范" class="headerlink" title="接口设计规范"></a>接口设计规范</h2><p>这里大概整理了一下APP开发接口的一些规范，我们可以根据实际开发，实际需求做相应的调整。</p><h3 id="1-制定规范"><a href="#1-制定规范" class="headerlink" title="1.制定规范"></a>1.制定规范</h3><pre><code>开发前一定要定好一个规范，比如要定好数据返回的通用参数和格式。关于数据格式，用的比较多的有xml和json，我建议用json，因为json比xml的好处更多。</code></pre><h3 id="2-精简的返回数据"><a href="#2-精简的返回数据" class="headerlink" title="2.精简的返回数据"></a>2.精简的返回数据</h3><pre><code>接口数据因符合需要什么返回什么的原则，比如要查询某个用户的余额和注册时间，网页里面的做法可能是select * from user where uid=1，但是接口一定要select balance,regtime from user where uid=1。因为接口返回数据是要有开销的，要流量的，能少返回数据就尽量少返回，这样可以大大的提高性能。</code></pre><h3 id="3-数据类型要严格"><a href="#3-数据类型要严格" class="headerlink" title="3.数据类型要严格"></a>3.数据类型要严格</h3><pre><code>要注意数据的类型，整数类型的数据一定要转为int，因为app客户端开发的java、object-c语言对数据类型比较严格，类型不对会照成app闪退。</code></pre><h3 id="4-要写接口文档"><a href="#4-要写接口文档" class="headerlink" title="4.要写接口文档"></a>4.要写接口文档</h3><pre><code>一定要写好接口文档，并按照模块写，而且还要书写规范，最好的格式是：接口请求地址；    请求参数（包括参数名、类型、是否必填）；    测试参数举例；返回参数（参数名，并注明每个参数的含义）。这样哪怕以后项目很大，以不会照成维护困难的问题。</code></pre><h3 id="5-保证代码正确性"><a href="#5-保证代码正确性" class="headerlink" title="5.保证代码正确性"></a>5.保证代码正确性</h3><pre><code>要验证保证代码正确无误，而且生成环境中要屏蔽掉错误，避免头部有额外的输出，照成返回的json等数据解析失败而导致app闪退等。</code></pre><h3 id="6-要优化代码的性能"><a href="#6-要优化代码的性能" class="headerlink" title="6.要优化代码的性能"></a>6.要优化代码的性能</h3><pre><code>app要求响应迅速，这样才能给用户比较好的体验感。所以移动接口端在处理业务逻辑的时候，要避免不要执行太复杂的sql语句，或者含有大量的循环，能做成缓存的尽量做缓存，比如将首页的热点模块信息可以存到redis缓存中。在不考虑网速的情况下，比较理想的接口响应时间应该是200毫秒以内。</code></pre><h3 id="7-不要随意更改旧接口"><a href="#7-不要随意更改旧接口" class="headerlink" title="7.不要随意更改旧接口"></a>7.不要随意更改旧接口</h3><pre><code>app不像网页，app一旦发布，有人使用之后，接口就不要乱修改了。   以后升级也是，修改要在保证接口原有结构之上进行额外的扩展，否则会导致调用旧版接口的app出现bug。</code></pre><h3 id="8-注意接口的安全"><a href="#8-注意接口的安全" class="headerlink" title="8. 注意接口的安全"></a>8. 注意接口的安全</h3><pre><code>安全高于一切，必须要保证接口的安全。电话号码等敏感信息在传输的过程中一定要加密，否则可能会被别人抓包到。拿取用户信息的接口一定要验证权限，以防止接口被恶意调用，泄密用户信息，甚至篡改信息。</code></pre><blockquote><p>处于安全考虑，应当在传值的时候加个验证字段，比如…?token=wedwdwfwf,将token值进行判断后再决定是否给予返回值，你还可以参考一下微信的借口，给用户提供了一个appid和appkey，token值需要根据这两个值去获取，并且获取到的token2小时的有效期，从很大程度上提高了安全性。</p></blockquote><p>希望对你实际开发中有用！！！</p>]]></content>
    
    <summary type="html">
    
      任何事情都有规律可行，也有一定的规范性，但是认识或的，规范是死的，能够灵活应用就够了。比如iOS，Android，前段等等一些开发过程中都会有一些规范可寻，按照一定的规范写出来的东西能够更容易迭代与修复问题，更容易给后面的人接手......
    
    </summary>
    
      <category term="PHP" scheme="https://icocos.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://icocos.github.io/tags/PHP/"/>
    
      <category term="接口设计规范" scheme="https://icocos.github.io/tags/%E6%8E%A5%E5%8F%A3%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>PHP第二十七篇——服务器500错误总结</title>
    <link href="https://icocos.github.io/2018/12/25/PHP%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%83%E7%AF%87%E2%80%94%E2%80%94%E6%9C%8D%E5%8A%A1%E5%99%A8500%E9%94%99%E8%AF%AF%E6%80%BB%E7%BB%93/"/>
    <id>https://icocos.github.io/2018/12/25/PHP第二十七篇——服务器500错误总结/</id>
    <published>2018-12-25T13:57:45.000Z</published>
    <updated>2019-03-01T10:38:30.056Z</updated>
    
    <content type="html"><![CDATA[<p>之前做客户端开发的时候，经常出现500错误，当时能做的就是告诉后台：某某api出现了500，然后没有几分钟就好了。而且一个项目下来出现最多次数的也就是500……</p><a id="more"></a><h2 id="500错误"><a href="#500错误" class="headerlink" title="500错误"></a>500错误</h2><p>接触了服务器开发之后，自己在写一些简单接口的时候，也总是发现500，而且几乎所有的500都不是一样原因导致，所以就找了一些教程，并请教了有些大神，自己在接口开发中也掌握了不少相关了技巧。</p><p>如果你在学习或者开发中也遇到了，比较奇葩500错误，可以联系我，我们一起交流讨论，一并整理出来。</p><pre><code>出现500错误的原因是很多的，一般来说，如果程序出错，那么在浏览器内会返回给用户一个友好的错误提示，统一称之为服务器500错误。 解决的方法就是您必须在http中能够正确的获得错误信息，方法为：请打开浏览器，选择工具，internet选项，高级，在高级中的浏览项目里面有一个\&quot;显示http友好错误提示\&quot;的复选框，请取消该复选框，这样您可以获得正确的错误提示。 在获得正确的错误提示之后，您就可以根据该错误提示检查您具体的出错原因了</code></pre><p>HTTP 500错误一定是你的PHP代码有错误，PHP解释器执行不了。两个方法找错误</p><pre><code>1) 用有语法检查提示的编辑器，比如Eclipse打开你的文件看看有没有错误提示，注意require里面的文件也要检查2) 加error_log(&quot;error_message&quot;, 3, &quot;log.txt&quot;);在你想输出信息的地方，用这种方式找代码哪句有问题。</code></pre><p>当我我们一定时常注意log的日志，因为大部分错误或者异常在log都能清楚，或者通过分析找到问题所在并解决</p><pre><code>1 先看nginx error.log 指定的错误日记文件路径 找到这个日记文件看 里面信息2 再看  php-fpm.conf 里面指定的PHP错误日记的路径</code></pre><h3 id="具体如下"><a href="#具体如下" class="headerlink" title="具体如下"></a>具体如下</h3><pre><code>php_flag[display_errors] = offphp_admin_flag[log_errors] = onphp_admin_value[error_log] = /data/logs/fpm-php.log</code></pre><h3 id="在网上找到一段话，这是在windows上开发的时候出现的问题及解决方案，当然Mac上也差不多"><a href="#在网上找到一段话，这是在windows上开发的时候出现的问题及解决方案，当然Mac上也差不多" class="headerlink" title="在网上找到一段话，这是在windows上开发的时候出现的问题及解决方案，当然Mac上也差不多"></a>在网上找到一段话，这是在windows上开发的时候出现的问题及解决方案，当然Mac上也差不多</h3><pre><code>1、运行的用户数过多，对服务器造成的压力过大，服务器无法响应，则报HTTP500错误。减小用户数或者场景持续时间，问题得到解决。2、该做关联的地方没有去做关联，则报HTTP500错误。进行手工或者自动关联，问题得到解决。3、录制时请求的页面、图片等，在回放的时候服务器找不到，则报HTTP500错误，若该页面无关紧要，则可以在脚本中注释掉，问题将会得到解决。例如：有验证码的情况下，尽管测试时已经屏蔽了，但是录制的时候提交了请求，但回放的时候不存在响应。4、参数化时的取值有问题，则报HTTP500错误。可将参数化列表中的数值，拿到实际应用系统中进行测试，可排除问题。5、更换了应用服务器（中间件的更换，如tomcat、websphere、jboss等），还是利用原先录制的脚本去运行，则很可能报HTTP500错误。因为各种应用服务器处理的机制不一样，所录制的脚本也不一样，解决办法只有重新录制脚本。6、Windowsxp2 与ISS组件不兼容，则有可能导致HTTP500错误。对ISS组件进行调整后问题解决。7、系统开发程序写的有问题，则报HTTP500错误。例如有些指针问题没有处理好的，有空指针情况的存在。修改程序后问题解决。8、如果测试中所进行的操作涉及到数据库，如插入数据操作，若大数据量的情况下导致数据库中表空间已满，或者数据库连接池较小无法满足数据的存取等，都有可能导致HTTP500错误。调整数据库、修改连接池大小，问题解决。</code></pre><h2 id="下面是某教程网站上在Nginx上出现的一个棘手的500错误。。"><a href="#下面是某教程网站上在Nginx上出现的一个棘手的500错误。。" class="headerlink" title="下面是某教程网站上在Nginx上出现的一个棘手的500错误。。"></a>下面是某教程网站上在Nginx上出现的一个棘手的500错误。。</h2><p>原文地址：<a href="https://www.phpxy.com/article/109.html" target="_blank" rel="noopener">https://www.phpxy.com/article/109.html</a></p><h3 id="产生原因："><a href="#产生原因：" class="headerlink" title="产生原因："></a>产生原因：</h3><pre><code>恢复aliyun阿里云的镜像，发现不论如何访问服务器都提示500</code></pre><h3 id="出现了问500错误，第一件事情要处理的是查看日志。"><a href="#出现了问500错误，第一件事情要处理的是查看日志。" class="headerlink" title="出现了问500错误，第一件事情要处理的是查看日志。"></a>出现了问500错误，第一件事情要处理的是查看日志。</h3><pre><code>1. 日志系统是否记录了日志2. 发现日志系统未记录日志，所以说不好去发现问题。3. 解决nginx未记录日志的问题，在/usr/local/nginx/conf/vhost/ uluqu.com.conf下增加error_log选项指定至目录4. 发现nginx无法启动，错误提示 /var/log/nginx 目录未存在5.使用mkdir 创建/var/log/nginx 目录6. 重新启动nginx,php-fpm等，发现解决成功7. 打开错误日志目录，发现日志已生成8.访问 www.uluqu.com/index.php 和phpinfo.php 页面，查看日志中记录的两项错误9. 错误提醒分别为php parse error define错误，第二个是发现 memory allowed limit 类的错误。分析原因是内存不足或者未合理管理内存造的。10. 清理服务器内存 free -m 然后执行echo 1 &gt; /proc/sys/vm/drop_caches11. 再次判断可能因为php.ini文件出错，解决办法：修改php.ini中的memroy_limit参数12. 经查发现memroy_limit 这个参数写的是512而不是512M。修改参数，重启相关服务。13. 访问地址问题解决</code></pre><p>在运行PHP程序，通常会遇到“Fatal Error： Allowed memory size of xxxxxx bytes exhausted”的错误， 这个意味着PHP脚本使用了过多的内存，并超出了系统对其设置的允许最大内存。</p><blockquote><p>解决这个问题，首先需要查看你的程序是否分配了过多的内存，在程序没有问题的情况下，你可以通过一下方法来增加PHP的内存限制（memory_limit）。</p></blockquote><h3 id="检查php的内存限制值"><a href="#检查php的内存限制值" class="headerlink" title="检查php的内存限制值"></a>检查php的内存限制值</h3><pre><code>为了查看这个值，你需要建立一个空的php文件，比如view-php-info.php。然后将一下代码贴到里面。</code></pre><h3 id="memory-limit应该设为多少？"><a href="#memory-limit应该设为多少？" class="headerlink" title="memory_limit应该设为多少？"></a>memory_limit应该设为多少？</h3><pre><code>这个完全依赖于你的应用的要求。比如Wordpress，运行起核心代码需要32MB。Drupal 6则要求这个值最小为16MB，并推荐设置为32MB。如果你又安装不少的插件（plugins），尤其是那些要进行图像处理的模块，那么你可能需要128MB或更高的内存。</code></pre><h2 id="方法1：-php-ini"><a href="#方法1：-php-ini" class="headerlink" title="方法1： php.ini"></a>方法1： php.ini</h2><p>最简单或常用的方法是修改php.ini</p><h3 id="1-首先找到对你的网站生效的php-ini文件-由于有多个地方都可以设置php的参数，找到正确的配置文件，并进行更改是首先要做的一步。"><a href="#1-首先找到对你的网站生效的php-ini文件-由于有多个地方都可以设置php的参数，找到正确的配置文件，并进行更改是首先要做的一步。" class="headerlink" title="1.首先找到对你的网站生效的php.ini文件 由于有多个地方都可以设置php的参数，找到正确的配置文件，并进行更改是首先要做的一步。"></a>1.首先找到对你的网站生效的php.ini文件 由于有多个地方都可以设置php的参数，找到正确的配置文件，并进行更改是首先要做的一步。</h3><pre><code>对于Linux用户，你可以通过执行“php -i | grep Loaded Configuration File”来找到对应的配置文件。而Windows用户，你可以尝试修改你的php安装目录下的php.ini。</code></pre><h3 id="2-编辑php-ini-在php-ini中，找到“memory-limit”这一项，如果没有，你可以在文件的尾部自己增加这个参数。以下是一些设置范例"><a href="#2-编辑php-ini-在php-ini中，找到“memory-limit”这一项，如果没有，你可以在文件的尾部自己增加这个参数。以下是一些设置范例" class="headerlink" title="2.编辑php.ini 在php.ini中，找到“memory_limit”这一项，如果没有，你可以在文件的尾部自己增加这个参数。以下是一些设置范例"></a>2.编辑php.ini 在php.ini中，找到“memory_limit”这一项，如果没有，你可以在文件的尾部自己增加这个参数。以下是一些设置范例</h3><pre><code>memory_limit = 128M ; 可以将128M改为任何你想设置的值,保存文件</code></pre><h3 id="3-重启web-服务器-如果是web服务器使用Apache，-则执行："><a href="#3-重启web-服务器-如果是web服务器使用Apache，-则执行：" class="headerlink" title="3.重启web 服务器 如果是web服务器使用Apache， 则执行："></a>3.重启web 服务器 如果是web服务器使用Apache， 则执行：</h3><pre><code>httpd restart</code></pre><p>有些情况下，你可能不被允许私修改php.ini。比如如果你购买了虚拟主机服务，但是你的服务商确禁止你修改这个文件。那么，你可以需要考虑用其他方法来增加memory_limit的值。</p><h2 id="方法2：-htaccess"><a href="#方法2：-htaccess" class="headerlink" title="方法2： .htaccess"></a>方法2： .htaccess</h2><p>说明： 这种方法只有在php以Apache模块来执行时才生效。 在你的网站的根目录下找到“.htaccess”文件，如果没有，可以自己创建一个。然后把以下配置放入其中</p><pre><code>php_value memory_limit 128M ; 可以将128M改为任何你想设置的值</code></pre><h2 id="方法3：-运行时修改php的内存设置"><a href="#方法3：-运行时修改php的内存设置" class="headerlink" title="方法3： 运行时修改php的内存设置"></a>方法3： 运行时修改php的内存设置</h2><h3 id="在你的php代码中增加以下命令行即可。"><a href="#在你的php代码中增加以下命令行即可。" class="headerlink" title="在你的php代码中增加以下命令行即可。"></a>在你的php代码中增加以下命令行即可。</h3><pre><code>ini_set(&apos;memory_limit&apos;,&apos;128M&apos;);</code></pre><h3 id="memory-limit修改失败"><a href="#memory-limit修改失败" class="headerlink" title="memory_limit修改失败"></a>memory_limit修改失败</h3><pre><code>如果你使用虚拟主机，有可能会出现memory_limit的值修改失败。这个需要联系你的服务商看怎么处理，通常他们限制了可以设置的最大值或者根本就不允许你修改。如果他们的环境真的无法满足你的要求，那么你可能要考虑换一个主机服务商。</code></pre><h2 id="生产环境下故障处理一例"><a href="#生产环境下故障处理一例" class="headerlink" title="生产环境下故障处理一例"></a>生产环境下故障处理一例</h2><h3 id="现象说明："><a href="#现象说明：" class="headerlink" title="现象说明："></a>现象说明：</h3><pre><code>生产环境下，storage服务器上没有安装任何服务（如apache，nginx，IIS等）现在是纯命令行执行PHP跑PHP脚本，在脚本的执行过程中发现（脚本内容含每次取5000个文件然后执行其它操作）速度奇慢，在本地测试时分分钟内搞定的事，在线上要执行2个多小时，经过排查排除掉服务器负载问题、数据库问题、服务器网络问题后，认为可能是php.ini配置文件中的资源限制所引起，于是修改了一下memory_limit将默认值128M修改为1024M后再次执行原脚本，速度得到大幅度提升，现把此参数的含义说明一下。</code></pre><h3 id="修改后需不需要重启？"><a href="#修改后需不需要重启？" class="headerlink" title="修改后需不需要重启？"></a>修改后需不需要重启？</h3><pre><code>因为PHP没有守护进程一说，理论上你只要修改过以后，就会立即使用新的配置文件。</code></pre><h3 id="此值设置多大为好？"><a href="#此值设置多大为好？" class="headerlink" title="此值设置多大为好？"></a>此值设置多大为好？</h3><pre><code>建议根据应用需求来设置。物理服务器，如果内存够大的话建议限制内存较大一些如512M，1024M都可，如果是VPS之类的可能限制在128（默认）64M或者以下是比较合适的，特别是有web服务器的时候，一旦开启多个php的fast-cgi，估计服务器都卡的不动了。</code></pre><h3 id="参数语法"><a href="#参数语法" class="headerlink" title="参数语法"></a>参数语法</h3><pre><code>memory_limit integer</code></pre><p>本指令设定了一个脚本所能够申请到的最大内存字节数。</p><h3 id="指令作用"><a href="#指令作用" class="headerlink" title="指令作用"></a>指令作用</h3><pre><code>这有助于防止写得不好的脚本消耗光服务器上的可用内存。</code></pre><h3 id="在phpchina的论坛上，有人这样说："><a href="#在phpchina的论坛上，有人这样说：" class="headerlink" title="在phpchina的论坛上，有人这样说："></a>在phpchina的论坛上，有人这样说：</h3><pre><code>memory_limit是设置PHP使用内存时空间，一般设置为内存的四分之一，应该就差不多了。如512M内存设置128M,1G内存设置256M。</code></pre><p>设置太大会影响系统速度，因为系统和数据库及其他程序同样需要内存空间，一般系统和数据库内存空间是自己分配的。</p><h2 id="附三种修改方法"><a href="#附三种修改方法" class="headerlink" title="附三种修改方法"></a>附三种修改方法</h2><p>可能是分词程序的问题。只要搜索的字段达到十个汉字以上，就会出现诸如以下的错误</p><pre><code>Fatal error: Allowed memory size of 2345643 bytes exhausted</code></pre><p>上网找了方法。有3种办法。</p><h3 id="1-直接修改PHP-INI"><a href="#1-直接修改PHP-INI" class="headerlink" title="1.直接修改PHP.INI"></a>1.直接修改PHP.INI</h3><pre><code>memory_limit = 16M  ;</code></pre><p>但是我修改了没有用。据说是要重启服务器的。但是很显然。我的 是虚拟主机。所以有独立主机的可以这样修改。</p><h3 id="2-修改-htaccess"><a href="#2-修改-htaccess" class="headerlink" title="2.修改.htaccess"></a>2.修改.htaccess</h3><pre><code>php_value memory_limit 16M</code></pre><p>修改后直接出现500错误。可能是主机商限制</p><h3 id="3-直接在程序页面上修改。"><a href="#3-直接在程序页面上修改。" class="headerlink" title="3.直接在程序页面上修改。"></a>3.直接在程序页面上修改。</h3><pre><code>ini_set(’memory_limit’, ‘16M‘);</code></pre>]]></content>
    
    <summary type="html">
    
      之前做客户端开发的时候，经常出现500错误，当时能做的就是告诉后台：某某api出现了500，然后没有几分钟就好了。而且一个项目下来出现最多次数的也就是500......
    
    </summary>
    
      <category term="PHP" scheme="https://icocos.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://icocos.github.io/tags/PHP/"/>
    
      <category term="500错误" scheme="https://icocos.github.io/tags/500%E9%94%99%E8%AF%AF/"/>
    
  </entry>
  
  <entry>
    <title>PHP第二十六篇——APP接口是怎么来的？</title>
    <link href="https://icocos.github.io/2018/12/23/PHP%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AD%E7%AF%87%E2%80%94%E2%80%94APP%E6%8E%A5%E5%8F%A3%E6%98%AF%E6%80%8E%E4%B9%88%E6%9D%A5%E7%9A%84%EF%BC%9F/"/>
    <id>https://icocos.github.io/2018/12/23/PHP第二十六篇——APP接口是怎么来的？/</id>
    <published>2018-12-23T12:34:42.000Z</published>
    <updated>2019-03-01T10:38:43.425Z</updated>
    
    <content type="html"><![CDATA[<p>学了差不多一个月的PHP，总想找个机会试试手，因为工作的原因每天能抽出来的时间真心少，这两天就开始在进行真正的PHP接口开发学习了，到今天为止，我终于知道我做iOS开发的时候发送请求返回的数据是这么来的…… </p><a id="more"></a><h2 id="APP接口"><a href="#APP接口" class="headerlink" title="APP接口"></a>APP接口</h2><p>PHP开发APP接口</p><h2 id="APP接口开发"><a href="#APP接口开发" class="headerlink" title="APP接口开发"></a>APP接口开发</h2><ol><li>APP接口简介</li><li>封装通讯接口方法</li><li>核心技术</li><li>APP接口实例</li></ol><p>接口请求流程</p><p>客户端-发送GET/POST请求-服务端-数据库/缓存-调用APP接口-客户端 </p><h2 id="APP接口简介"><a href="#APP接口简介" class="headerlink" title="APP接口简介"></a>APP接口简介</h2><ol><li>接口地址(url) ==== 函数名</li><li>GET或POST数据 ==== 函数的参数</li><li>这个接口输出的数据 ===== 函数的返回值</li></ol><p>API概述</p><pre><code>1、API 比开发 WEB 更简洁，但可能逻辑更复杂，API 只返回结果，也就是只完成数据输出，不呈现页面，2、WEB 开发，更多的是 GET 和 POST 请求，API 还有 PUT、DELETE 请求3、和 WEB 开发一样，首先需要一些相关的参数，这些参数，都会由客户端传过来，也许是 GET 也许是 POST，这个需要开发团队相互之间约定好，或者制定统一规范4、有了参数，根据应用需求，完成数据处理，例如：获取用户信息、发朋友圈、发消息、一局游戏结束数据提交等等5、数据逻辑处理完之后，返回客户端所需要用到的相关数据，例如：用户信息数组、朋友圈列表、消息状态、游戏结果数据等等，那数据是怎么返给客户端呢？常见有XML、JSON，设置相应的header并把要返回的数据直接打印出来即可6、客户端获取到你返回的数据后，在客户端本地和用户进行交互</code></pre><h3 id="APP接口介绍"><a href="#APP接口介绍" class="headerlink" title="APP接口介绍"></a>APP接口介绍</h3><p>首先要区别去面向对象中的接口</p><p>面向对象中的接口是一个抽象类，如PHP或者java中使用interface，iOS中使用的@interface，这里起到的是一个标准或者规范，适合多人开发使用。</p><p>APP中的接口：是指数据接口</p><p>APP发送HTTP请求，服务器根据请求的参数返回对应的接口数据，客户端解析数据并显示，客户端并不需要关心接口数据是这么实现的，这么返回的，只要发送请求根据返回的数据解析使用就可以！</p><blockquote><p>接口：包括接口地址，接口文件，接口数据</p></blockquote><h3 id="如何进行通讯"><a href="#如何进行通讯" class="headerlink" title="如何进行通讯"></a>如何进行通讯</h3><ol><li><p>-&gt;需要有一个客户端APP</p></li><li><p>-&gt;触发客户端APP的时候</p></li><li><p>-&gt;发送HTTP对应的地址GET/POST请求</p></li><li><p>-&gt;发送给服务端</p></li><li><p>-&gt;服务端收到接口请求之后会做相应的处理</p></li><li><p>-&gt;比如从数据库/缓存读取对应的数据</p></li><li><p>-&gt;返回给客户端</p></li><li><p>-&gt;客户端收到服务器返回的数据</p></li><li><p>-&gt;开始解析成自己想要的格式（XML、JSON）</p></li><li><p>-&gt;显示到界面上 </p></li></ol><h3 id="通讯格式区别"><a href="#通讯格式区别" class="headerlink" title="通讯格式区别"></a>通讯格式区别</h3><p>JSON的定义</p><pre><code>一种轻量级的数据交换格式，具有良好的可读和便于快速编写的特性。业内主流技术为其提供了完整的解决方案（有点类似于正则表达式 ，获得了当今大部分语言的支持），从而可以在不同平台间进行数据交换。JSON采用兼容性很高的文本格式，同时也具备类似于C语言体系的行为。</code></pre><p>XML的定义</p><pre><code>扩展标记语言 (Extensible Markup Language,XML) ，用于标记电子文件使其具有结构性的标记语言，可以用来标记数据、定义数据类型，是一种允许用户对自己的标记语言进行定义的源语言。 XML是标准通用标记语言 (SGML) 的子集，非常适合 Web 传输。XML 提供统一的方法来描述和交换独立于应用程序或供应商的结构化数据。</code></pre><p>XML优缺点</p><p>缺点</p><pre><code>1. 格式统一, 符合标准2. 容易与其他系统进行远程交互, 数据共享比较方便</code></pre><p>缺点:</p><pre><code>1. XML文件格式文件庞大, 格式复杂, 传输占用带宽2. 服务器端和客户端都需要花费大量代码来解析XML, 不论服务器端和客户端代码变的异常复杂和不容易维护3. 客户端不同浏览器之间解析XML的方式不一致, 需要重复编写很多代码4. 服务器端和客户端解析XML花费资源和时间</code></pre><p>JSON优缺点</p><pre><code>那么除了XML格式, 还有没有其他格式, 有一种叫做JSON(JavaScript Object Notation) 的轻量级数据交换格式能够替代XML的工作.</code></pre><p>优点:</p><pre><code>1. 数据格式比较简单, 易于读写, 格式都是压缩的, 占用带宽小2. 易于解析这种语言, 客户端JavaScript可以简单的通过eval_r()进行JSON数据的读取3. 支持多种语言, 包括ActionScript, C, C#, ColdFusion, Java,JavaScript, Perl, PHP, Python, Ruby等语言服务器端语言, 便于服务器端的解析4. 在PHP世界, 已经有PHP-JSON和JSON-PHP出现了, 便于PHP序列化后的程序直接调用. PHP服务器端的对象、数组等能够直接生JSON格式, 便于客户端的访问提取.5. 因为JSON格式能够直接为服务器端代码使用, 大大简化了服务器端和客户端的代码开发量, 但是完成的任务不变, 且易于维护</code></pre><p>缺点:</p><pre><code>1. 没有XML格式这么推广的深入人心和使用广泛, 没有XML那么通用性2. JSON格式目前在Web Service中推广还属于初级阶段</code></pre><p>JSON 和 XML 优缺点的比较</p><pre><code>1. 在可读性方面，JSON和XML的数据可读性基本相同。JSON和XML的可读性可谓不相上下，一边是建议的语法，一边是规范的标签形式，很难分出胜负。2. 在可扩展性方面，XML天生有很好的扩展性，JSON当然也有，没有什么是XML能扩展，JSON不能的。3. 在编码难度方面，XML有丰富的编码工具，比如Dom4j、JDom等，JSON也有json.org提供的工具，但是JSON的编码明显比XML容易许多，即使不借助工具也能写出JSON的代码，可是要写好XML就不太容易了。4. 在解码难度方面，XML的解析得考虑子节点父节点，让人头昏眼花，而JSON的解析难度几乎为0。这一点XML输的真是没话说。5. 在流行度方面，XML已经被业界广泛的使用，而JSON才刚刚开始，但是在Ajax这个特定的领域，未来的发展一定是XML让位于JSON。到时Ajax应该变成Ajaj(AsynchronousJavascript and JSON)了。6. JSON和XML同样拥有丰富的解析手段。7. JSON相对于XML来讲，数据的体积小。8. JSON与JavaScript的交互更加方便。9. JSON对数据的描述性比XML较差。10. JSON的速度要远远快于XML。</code></pre><ul><li>protocol buffer</li></ul><p>现在还有一种据说是比较流行，但是目前还没有PHP的API，叫做protocol buffer</p><pre><code>protocol buffer是google的一个开源项目,它是用于结构化数据串行化的灵活、高效、自动的方法，例如XML，不过它比xml更小、更快、也更简单。你可以定义自己的数据结构，然后使用代码生成器生成的代码来读写这个数据结构。你甚至可以在无需重新部署程序的情况下更新数据结构。</code></pre><p>对于protocol buffer网上确实有不少好评，但是目前只有C++，java，python的API，希望以后有机会能试一试效果。</p><h3 id="APP接口做的那些事"><a href="#APP接口做的那些事" class="headerlink" title="APP接口做的那些事"></a>APP接口做的那些事</h3><p>获取数据：从数据库中或者缓存中获取数据，然后通过接口数据返回给客户端<br>提交数据：通过接口提交数据给服务器。然后服务器入库处理，或者其他处理</p><p>获取数据：GET请求</p><pre><code>界面显示数据，首页，广场，用户信息......</code></pre><p>提交数据：POST请求</p><pre><code>提交反馈，注册登录，修改用户信息......</code></pre><h2 id="封装通讯接口方法"><a href="#封装通讯接口方法" class="headerlink" title="封装通讯接口方法"></a>封装通讯接口方法</h2><h3 id="JSON方式封装通讯接口"><a href="#JSON方式封装通讯接口" class="headerlink" title="JSON方式封装通讯接口"></a>JSON方式封装通讯接口</h3><p>一. 生成JSON数据——数组方式</p><p>首先必须知道PHP生成接口数据的方法是json_encode($value),这个方法只能接口UTF-8编码数据，其他格式数据会返回null</p><p>首先我们定义一个简单的数组，然后使用json_encode方法将数组转成json数据</p><pre><code>$arrayName = array(&apos;id&apos; =&gt; 1,&apos;name&apos; =&gt; &apos;iCocos&apos;);echo $arrayName;echo json_encode($arrayName);</code></pre><p>浏览器输入对应的链接地址，答应结果</p><pre><code>ArrayArray{&quot;id&quot;:1,&quot;name&quot;:&quot;iCocos&quot;}</code></pre><p>当然如果你不是UTF8编码数据，可以使用字符编码之间转换函数iconv()，将对应的编码转成自己想要的编码</p><pre><code>iconv(&apos;原始编码&apos;,&apos;目标编码&apos;,&apos;数据变量&apos;)</code></pre><p>二. 通讯数据的标准格式</p><p>一般来说规范一点的后台开发人员都会有一套自己的标准</p><ul><li>code  状态吗（2XX-成功, 3XX重定向, 4XX客户端错误, 5XX服务器错误）</li><li>message 提示信息</li><li>data 返回数据<ul><li>id : 1</li><li>name : iCocos</li></ul></li></ul><p>如果你是做移动端的，到公司发现你们后台返回连这种标准都没有，哪怕是类似的，那么不用多说，建议还是闪人吧！</p><p>三. 下面我们简单的实战一下</p><p>首先定义一个工具类，用来把传递进来的数据和相应的信息转换成json，然后输出</p><p>定义一个PHPResponse.php文件，并且定义一个PHPResponse类，在类里面定义一个静态方法，并且简单的实现一些逻辑处理就进行转换输出</p><pre><code>&lt;?php/*** 相应类*/class PHPResponse{    //返回JSON数据方法    public static function jsonData($code, $message = &apos;&apos;, $data = array())    {        //如果code不是数字        if (!is_numeric($code)) {            # code...            return &apos;&apos;;        }        $res = array(            &apos;code&apos; =&gt; $code,            &apos;message&apos; =&gt; $message,            &apos;data&apos; =&gt; $data        );        echo var_dump($res);        //echo json_encode($res);        exit(); //exit;    }}</code></pre><p>因为这里只是简单的测试，所以在index.php中引入对应的文件，然后传递数据和对应的参数进上面的方法</p><pre><code>require_once(&apos;./PHPResponse.php&apos;);$arrRes = array(    &apos;id&apos; =&gt; 1,    &apos;name&apos; = &apos;iCocos&apos;);PHPResponse::jsonData(200, &apos;成功&apos;, $arrRes);</code></pre><p>浏览器输入对应的路径，就能看到真实的数据返回</p><pre><code>array(3) {     [&quot;code&quot;]=&gt; int(200)     [&quot;message&quot;]=&gt; string(6) &quot;成功&quot;     [&quot;data&quot;]=&gt; array(2) {         [&quot;id&quot;]=&gt; int(1)         [&quot;name&quot;]=&gt; string(6) &quot;iCocos&quot;     } }</code></pre><h3 id="生成XML数据"><a href="#生成XML数据" class="headerlink" title="生成XML数据"></a>生成XML数据</h3><ol><li><p>组装字符串</p></li><li><p>使用系统类</p><ul><li>DomDocument</li><li>XMLWrite</li><li>SimpleXML</li></ul></li></ol><p>这里使用字符串的方式，其实在学习iOS的时候就有了解过这一点：</p><pre><code>public static function xmlToEncode($data) {    $xml = &quot;&lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;\n&quot;;    $xml = &quot;&lt;root&gt;\n&quot;;    $xml = &quot;&lt;code&gt;200&lt;/code&gt;\n&quot;;    $xml = &quot;&lt;message&gt;返回成功&lt;/message&gt;\n&quot;;    $xml = &quot;&lt;data&gt;\n&quot;;    $xml = &quot;&lt;id&gt;1&lt;/id&gt;\n&quot;;    $xml = &quot;&lt;name&gt;iCocos&lt;name&gt;\n&quot;;    $xml = &quot;&lt;/data&gt;\n&quot;;    $xml = &quot;&lt;/root&gt;\n&quot;;    echo $xml;}</code></pre><blockquote><p>注意：xml节点不能使用数字</p></blockquote><p>浏览器输入后测试显示就是平时我们看到的xml数据格式</p><pre><code>&lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;&lt;root&gt;    &lt;code&gt;200&lt;/code&gt;    &lt;message&gt;返回成功&lt;/message&gt;    &lt;data&gt;        &lt;id&gt;1&lt;/id&gt;        &lt;name&gt;iCocos&lt;name&gt;    &lt;/data&gt;&lt;/root&gt;</code></pre><p>当然可能你直接看到的是这样的，这是因为浏览器自动帮我们解析,属于来说就是Content-Type:text/html,而我们需要显示的是Content-Type:text/xml，只要右键查看源码就可以查看</p><pre><code>200 返回成功 1 iCocos</code></pre><p>如果想要显示的时候就自动解析成xml，只要调用对应的php方法就可以</p><pre><code>heaer(&quot;Content-Type:text/xml&quot;);</code></pre><h3 id="XML方式封装通讯数据方法：响应的格式和json是一样的"><a href="#XML方式封装通讯数据方法：响应的格式和json是一样的" class="headerlink" title="XML方式封装通讯数据方法：响应的格式和json是一样的"></a>XML方式封装通讯数据方法：响应的格式和json是一样的</h3><p>XML方式其实现在来讲的话使用并不高，我经历了几家公司都使用的json，但是作为php开发也是必须要会。</p><p>首先定义一个工具类，用来把传递进来的数据和相应的信息转换成xml，然后输出</p><p>定义一个PHPResponse.php文件，并且定义一个PHPResponse类，在类里面定义一个静态方法，并且简单的实现一些逻辑处理就进行转换输出</p><pre><code>/*** 按xml方式输出通信数据* @param integer $code 状态码* @param string $message 提示信息* @param array $data 数据* return string*/public static function xmlEncode($code, $message, $data = array()) {    if(!is_numeric($code)) {        return &apos;&apos;;    }    $result = array(        &apos;code&apos; =&gt; $code,        &apos;message&apos; =&gt; $message,        &apos;data&apos; =&gt; $data,    );    header(&quot;Content-Type:text/xml&quot;);    $xml = &quot;&lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;\n&quot;;    $xml .= &quot;&lt;root&gt;\n&quot;;    $xml .= self::xmlToEncode($result);    $xml .= &quot;&lt;/root&gt;&quot;;    echo $xml;}</code></pre><p>解析数组，返回xml数据</p><pre><code>public static function xmlToEncode($data) {    $xml = $attr = &quot;&quot;;    foreach($data as $key =&gt; $value) {        if(is_numeric($key)) {        $attr = &quot; id=&apos;{$key}&apos;&quot;;        $key = &quot;item&quot;;    }    $xml .= &quot;&lt;{$key}{$attr}&gt;&quot;;    $xml .= is_array($value) ? self::xmlToEncode($value) : $value; //如果value是数组就循环便利执行这个方法    $xml .= &quot;&lt;/{$key}&gt;\n&quot;;    }    return $xml;}</code></pre><p>调用</p><pre><code>$arrayName = array(    &apos;id&apos; =&gt; 1,    &apos;name&apos; =&gt; &apos;iCocos&apos;);</code></pre><p>PHPResponse::xmlEncode(200,’success’,$arrayName);</p><p>输入浏览器测试地址可以看到</p><pre><code>&lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;&lt;root&gt;    &lt;code&gt;200&lt;/code&gt;    &lt;message&gt;返回成功&lt;/message&gt;    &lt;data&gt;        &lt;id&gt;1&lt;/id&gt;        &lt;name&gt;iCocos&lt;name&gt;    &lt;/data&gt;&lt;/root&gt;</code></pre><p>这里如果实际开发坑定没有这么简单，但是复杂的地方也就是数组比较多数组，或分层</p><blockquote><p>到上面位置就可以实现平时开发中最最最简单的接口数据。</p></blockquote><h3 id="综合方式封装通讯数据方法"><a href="#综合方式封装通讯数据方法" class="headerlink" title="综合方式封装通讯数据方法"></a>综合方式封装通讯数据方法</h3><p>一：定义一个通用的接口文件，并且定义一个基类</p><pre><code>&lt;?php/*** 定义API抽象类*/abstract class Api {    const JSON = &apos;Json&apos;;    const XML = &apos;Xml&apos;;    const ARR = &apos;Array&apos;;    /**    * 定义工厂方法    * param string $type 返回数据类型    */    public static function factory($type = self::JSON) {        $type = isset($_GET[&apos;format&apos;]) ? $_GET[&apos;format&apos;] : $type;        $resultClass = ucwords($type);        require_once(&apos;./Response/&apos; . $type . &apos;.php&apos;);        return new $resultClass();    }    abstract function response($code, $message, $data);}</code></pre><p>二：XML数据解析与响应方法，继承自API</p><pre><code>&lt;?php/*** @author by singwa* @date*/class Xml extends Api {public function response($code, $message = &apos;&apos;, $data = array()) {    if(!is_numeric($code)) {        return &apos;&apos;;    }    $result = array(        &apos;code&apos; =&gt; $code,        &apos;message&apos; =&gt; $message,        &apos;data&apos; =&gt; $data    );    header(&apos;Content-Type:text/xml&apos;);        $xml = &quot;&lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;\n&quot;;        $xml .= &quot;&lt;root&gt;&quot;;        $xml .= self::xmlToEncode($result);        $xml .= &quot;&lt;/root&gt;&quot;;        echo $xml;    }    public static  function xmlToEncode($result) {        $xml = $attr = &apos;&apos;;        foreach($result as $key =&gt; $value) {            if(is_numeric($key)) {                $attr = &quot; id=&apos;&quot; . $key . &quot;&apos;&quot;;                $key = &quot;item&quot;;            }            $xml .= &quot;&lt;{$key}{$attr}&gt;&quot;;            $xml .= is_array($value) ? self::xmlToEncode($value) : $value;            $xml .= &quot;&lt;/{$key}&gt;\n&quot;;        }        return $xml;    }}</code></pre><p>三：JSON数据解析与响应方法，继承自API</p><pre><code>&lt;?php/*** 按xml方式输出通信数据*/class Json extends Api {public function response($code, $message = &apos;&apos;, $data = array()) {        if(!(is_numeric($code))) {            return &apos;&apos;;        }        $result = array(            &apos;code&apos; =&gt; $code,            &apos;message&apos; =&gt; $message,            &apos;data&apos; =&gt; $data        );        echo json_encode($result);        exit;    }}</code></pre><blockquote><p>是不是感觉json比xml简单很多，这也是为什么很多公司都使用的是json的原因。</p></blockquote><p>四：然后就是入口文件，通过入口文件调用方法，根据传入的类型解析成对应的格式，这也是前面讲到的面向对象的特性</p><pre><code>&lt;?phpclass Response {const JSON = &quot;json&quot;;/*** 按综合方式输出通信数据* @param integer $code 状态码* @param string $message 提示信息* @param array $data 数据* @param string $type 数据类型* return string*/public static function show($code, $message = &apos;&apos;, $data = array(), $type = self::JSON) {    if(!is_numeric($code)) {        return &apos;&apos;;    }    $type = isset($_GET[&apos;format&apos;]) ? $_GET[&apos;format&apos;] : self::JSON;    $result = array(        &apos;code&apos; =&gt; $code,        &apos;message&apos; =&gt; $message,        &apos;data&apos; =&gt; $data,    );    if($type == &apos;json&apos;) {        self::json($code, $message, $data);        exit;    } elseif($type == &apos;array&apos;) {        var_dump($result);    } elseif($type == &apos;xml&apos;) {        self::xmlEncode($code, $message, $data);        exit;    } else {        // TODO    }}/*** 按json方式输出通信数据* @param integer $code 状态码* @param string $message 提示信息* @param array $data 数据* return string*/public static function json($code, $message = &apos;&apos;, $data = array()) {    if(!is_numeric($code)) {        return &apos;&apos;;    }    $result = array(        &apos;code&apos; =&gt; $code,        &apos;message&apos; =&gt; $message,        &apos;data&apos; =&gt; $data    );    echo json_encode($result);    exit;}/*** 按xml方式输出通信数据* @param integer $code 状态码* @param string $message 提示信息* @param array $data 数据* return string*/public static function xmlEncode($code, $message, $data = array()) {    if(!is_numeric($code)) {        return &apos;&apos;;    }    $result = array(        &apos;code&apos; =&gt; $code,        &apos;message&apos; =&gt; $message,        &apos;data&apos; =&gt; $data,    );    header(&quot;Content-Type:text/xml&quot;);    $xml = &quot;&lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;\n&quot;;    $xml .= &quot;&lt;root&gt;\n&quot;;    $xml .= self::xmlToEncode($result);    $xml .= &quot;&lt;/root&gt;&quot;;    echo $xml;}public static function xmlToEncode($data) {    $xml = $attr = &quot;&quot;;    foreach($data as $key =&gt; $value) {        if(is_numeric($key)) {                $attr = &quot; id=&apos;{$key}&apos;&quot;;                $key = &quot;item&quot;;            }            $xml .= &quot;&lt;{$key}{$attr}&gt;&quot;;            $xml .= is_array($value) ? self::xmlToEncode($value) : $value;            $xml .= &quot;&lt;/{$key}&gt;\n&quot;;        }        return $xml;    }}</code></pre><p>五：最后就可以在浏览器输入对应的接口地址，传入对应的参数，就能得到想要的格式的数据</p><h2 id="说在最后，实际项目中，我们在开发-API-时应该注意的几个点（仅供参考）"><a href="#说在最后，实际项目中，我们在开发-API-时应该注意的几个点（仅供参考）" class="headerlink" title="说在最后，实际项目中，我们在开发 API 时应该注意的几个点（仅供参考）"></a>说在最后，实际项目中，我们在开发 API 时应该注意的几个点（仅供参考）</h2><pre><code>1、单文件实现多接口的形式有很多种，例如：if..elseif.. 或 switch 或 很多框架里用到的统一入口通过调用类函数的形式实现2、数据输出建议使用json，json具有很强的跨平台性，大多编程语言都支持json解析，json正在逐步取代xml，成为网络数据的通用格式3、为了保证接口安全，一定要加入鉴权体系4、对于线上的API，务必关闭所有错误显示，可以把错误写到日志里，PHP中，可以通过 error_reporting(0) 屏蔽所有错误这样做的目的，一方面是保护接口安全，防止输出不该打印的错误信息    另一方面是保证输出的是正确的数据格式，如json，假如不是标准的json格式，客户端在解析时就会出错，由此影响客户端的正常运转    PS：我们平时在使用手机APP时，手机会闪退，多半是这个原因，即接口调用异常5、开发 API 和 WEB 有一定的区别，如果是 WEB 的话，如果程序写的有问题，比如有个notice 或 warning 级别的错误，在 WEB 里可能不会有什么问题，也许就只是导致 WEB 的某个部分错位或乱码。但如果是 API，就会严重调用的客户端了，如果是手机APP，那闪推啥的，是必然的，如果同样也是Web调用，也可能会出现  Server Error 了6、一定要重点考虑稳定性和响应速度，因为我们在使用手机APP时，都不希望APP经常闪推、而且希望应用很流畅7、不要随便使用一些 PHP 开源框架，原因概括起来有两点：    1）如6所述，客户端一般对 API 响应速度有极高要求，目前PHP领域的开源框架非常多，根据笔者的了解，目前比较流行的框架，普遍做的比较重，而且基本都是为WEB而生，因此，框架多了很多 API 用不到的东西，框架在加载和执行冗余文件时，实际是在消耗你的性能    2）如4和5所述，框架对于WEB开发，是件很幸福的事，但对于 API 而言，你实在不敢想象它会给你出什么岔子，因为很多框架并没有全面的考虑到 API 场景</code></pre>]]></content>
    
    <summary type="html">
    
      学习PHP快要一个月了，总想找个机会试试手，因为工作的原因每天能抽出来的时间真心少，这两天就开始在进行真正的PHP接口开发学习了，到今天为止，我终于知道我做iOS开发的时候发送请求返回的数据是这么来的......
    
    </summary>
    
      <category term="PHP" scheme="https://icocos.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://icocos.github.io/tags/PHP/"/>
    
      <category term="APP接口" scheme="https://icocos.github.io/tags/APP%E6%8E%A5%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>PHP第二十五篇——核心技术之缓存</title>
    <link href="https://icocos.github.io/2018/12/20/PHP%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E7%AF%87%E2%80%94%E2%80%94%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8B%E7%BC%93%E5%AD%98/"/>
    <id>https://icocos.github.io/2018/12/20/PHP第二十五篇——核心技术之缓存/</id>
    <published>2018-12-20T11:57:18.000Z</published>
    <updated>2019-03-01T10:38:08.946Z</updated>
    
    <content type="html"><![CDATA[<p>缓存在所有开发里面可是说是有着具足其中的作用，或者对平时开发中并不显见，但是为了考虑性能，考虑实际应用，考虑用户的顾虑，那么缓存就不得不慎重考虑，PHP中也是同样…… </p><a id="more"></a><h2 id="APP接口"><a href="#APP接口" class="headerlink" title="APP接口"></a>APP接口</h2><p>首先在这之前推荐一篇文章：</p><p><a href="http://www.cnblogs.com/timothy-lai/p/5532166.html" target="_blank" rel="noopener">PHP9大缓存技术</a></p><h2 id="核心技术"><a href="#核心技术" class="headerlink" title="核心技术"></a>核心技术</h2><h3 id="静态缓存"><a href="#静态缓存" class="headerlink" title="静态缓存"></a>静态缓存</h3><p>保存在磁盘上的静态文件，用PHP生成数据放入静态文件中</p><p>一：操作缓存</p><ol><li>生成</li><li>获取</li><li>删除</li></ol><p>实现案例</p><pre><code>&lt;?phpclass File {    private $_dir;    const EXT = &apos;.txt&apos;;    public function __construct() {        $this-&gt;_dir = dirname(__FILE__) . &apos;/files/&apos;;    }    public function cacheData($key, $value = &apos;&apos;, $cacheTime = 0) {    $filename = $this-&gt;_dir  . $key . self::EXT;    if($value !== &apos;&apos;) { // 将value值写入缓存    if(is_null($value)) {        return @unlink($filename);    }    $dir = dirname($filename);    if(!is_dir($dir)) {        mkdir($dir, 0777);    }    $cacheTime = sprintf(&apos;%011d&apos;, $cacheTime);        return file_put_contents($filename,$cacheTime . json_encode($value));    }    if(!is_file($filename)) {        return FALSE;    }     $contents = file_get_contents($filename);    $cacheTime = (int)substr($contents, 0 ,11);    $value = substr($contents, 11);    if($cacheTime !=0 &amp;&amp; ($cacheTime + filemtime($filename) &lt; time())) {        unlink($filename);        return FALSE;    }    return json_decode($value, true);    }}$file = new File();echo $file-&gt;cacheData(&apos;test1&apos;);</code></pre><h3 id="Memcache和Redis缓存技术"><a href="#Memcache和Redis缓存技术" class="headerlink" title="Memcache和Redis缓存技术"></a>Memcache和Redis缓存技术</h3><p>简单总结</p><p>1、 Redis和Memcache都是将数据存放在内存中，都是内存数据库。不过memcache还可用于缓存其他东西，例如图片、视频等等。<br>2、Redis不仅仅支持简单的k/v类型的数据，同时还提供list，set，hash等数据结构的存储。<br>3、虚拟内存–Redis当物理内存用完时，可以将一些很久没用到的value 交换到磁盘<br>4、过期策略–memcache在set时就指定，例如set key1 0 0 8,即永不过期。Redis可以通过例如expire 设定，例如expire name 10<br>5、分布式–设定memcache集群，利用magent做一主多从;redis可以做一主多从。都可以一主一从<br>6、存储数据安全–memcache挂掉后，数据没了；redis可以定期保存到磁盘（持久化）<br>7、灾难恢复–memcache挂掉后，数据不可恢复; redis数据丢失后可以通过aof恢复<br>8、Redis支持数据的备份，即master-slave模式的数据备份。</p><p>分类总结 </p><p>（1）数据结构：Memcache只支持key value存储方式，Redis支持更多的数据类型，比如Key value，hash，list，set，zset；</p><p>（2）多线程：Memcache支持多线程，redis支持单线程；CPU利用方面Memcache优于redis；</p><p>（3）持久化：Memcache不支持持久化，Redis支持持久化；</p><p>（4）内存利用率：memcache高，redis低（采用压缩的情况下比memcache高）；</p><p>（5）过期策略：memcache过期后，不删除缓存，会导致下次取数据数据的问题，Redis有专门线程，清除缓存数据；</p><p>整体性对比 </p><p>1）性能对比：由于Redis只使用单核，而Memcached可以使用多核，所以平均每一个核上Redis在存储小数据时比Memcached性能更高。而在100k以上的数据中，Memcached性能要高于Redis，虽然Redis最近也在存储大数据的性能上进行优化，但是比起 Memcached，还是稍有逊色。</p><p>2）内存使用效率对比：使用简单的key-value存储的话，Memcached的内存利用率更高，而如果Redis采用hash结构来做key-value存储，由于其组合式的压缩，其内存利用率会高于Memcached。</p><p>3）Redis支持服务器端的数据操作：Redis相比Memcached来说，拥有更多的数据结构和并支持更丰富的数据操作，通常在Memcached 里，你需要将数据拿到客户端来进行类似的修改再set回去。这大大增加了网络IO的次数和数据体积。在Redis中，这些复杂的操作通常和一般的 GET/SET一样高效。所以，如果需要缓存能够支持更复杂的结构和操作，那么Redis会是不错的选择。</p><p>后面会有专门的文章介绍Memcache与Redis原理，使用与总结</p><ol><li>设置缓存操作</li><li>获取缓存操作</li><li>删除缓存操作</li></ol><p>分别以命令和PHP的方式</p>]]></content>
    
    <summary type="html">
    
      缓存在所有开发里面可是说是有着具足其中的作用，或者对平时开发中并不显见，但是为了考虑性能，考虑实际应用，考虑用户的顾虑，那么缓存就不得不慎重考虑，PHP中也是同样......
    
    </summary>
    
      <category term="PHP" scheme="https://icocos.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://icocos.github.io/tags/PHP/"/>
    
      <category term="缓存" scheme="https://icocos.github.io/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>PHP第二十四篇——文件上传下载原理与配置</title>
    <link href="https://icocos.github.io/2018/12/19/PHP%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%9B%9B%E7%AF%87%E2%80%94%E2%80%94%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD%E5%8E%9F%E7%90%86%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>https://icocos.github.io/2018/12/19/PHP第二十四篇——文件上传下载原理与配置/</id>
    <published>2018-12-19T15:31:21.000Z</published>
    <updated>2019-03-01T10:38:14.962Z</updated>
    
    <content type="html"><![CDATA[<p>关于PHP上传和下载的原理一句话总结就是：将客户端文件上传到服务器端，再将服务器端的文件（临时文件）移动到指定目录即可。……</p><a id="more"></a><h2 id="文件上传下载原理与配置"><a href="#文件上传下载原理与配置" class="headerlink" title="文件上传下载原理与配置"></a>文件上传下载原理与配置</h2><h2 id="一、上传原理与配置"><a href="#一、上传原理与配置" class="headerlink" title="一、上传原理与配置"></a>一、上传原理与配置</h2><h3 id="1-1-原理"><a href="#1-1-原理" class="headerlink" title="1.1 原理"></a>1.1 原理</h3><p>将客户端文件上传到服务器端，再将服务器端的文件（临时文件）移动到指定目录即可。</p><h3 id="1-2-客户端配置"><a href="#1-2-客户端配置" class="headerlink" title="1.2 客户端配置"></a>1.2 客户端配置</h3><p>所需：表单页面（选择上传文件）；</p><p>具体而言：发送方式为POST，添加enctype=”multipart/form-data”属性，两者缺一不可（但是，优缺点并存，这里也限定了上传的方式和上传的文件之后的调用等方面，后面会说到）</p><pre><code>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;&lt;title&gt;Insert title here&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;doAction.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;请选择您要上传的文件：&lt;input type=&quot;file&quot; name=&quot;myFile&quot; /&gt;&lt;br/&gt;&lt;input type=&quot;submit&quot; value=&quot;上传&quot;/&gt;&lt;/form&gt;&lt;?php?&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>先是表单页面（请自动忽略前端问题。。。），关键就是form的属性；另外就是input 中用到了type=”file”这一点（体现到php的强大的拓展等等）。</p><p>然后是doAction</p><pre><code>&lt;?php//$_FILES:文件上传变量//print_r($_FILES);$filename=$_FILES[&apos;myFile&apos;][&apos;name&apos;];$type=$_FILES[&apos;myFile&apos;][&apos;type&apos;];$tmp_name=$_FILES[&apos;myFile&apos;][&apos;tmp_name&apos;];$size=$_FILES[&apos;myFile&apos;][&apos;size&apos;];$error=$_FILES[&apos;myFile&apos;][&apos;error&apos;];//将服务器上的临时文件移动到指定位置//方法一move_upload_file($tmp_name,$destination)//move_uploaded_file($tmp_name, &quot;uploads/&quot;.$filename);//文件夹应提前建立好，不然报错//方法二copy($src,$des)//以上两个函数都是成功返回真，否则返回false//copy($tmp_name, &quot;copies/&quot;.$filename);//注意，不能两个方法都对临时文件进行操作，临时文件似乎操作完就没了，我们试试反过来copy($tmp_name, &quot;copies/&quot;.$filename);move_uploaded_file($tmp_name, &quot;uploads/&quot;.$filename);//能够实现，说明move那个函数基本上相当于剪切；copy就是copy，临时文件还在//另外，错误信息也是不一样的，遇到错误可以查看或者直接报告给用户if ($error==0) {echo &quot;上传成功！&quot;;}else{switch ($error){case 1:echo &quot;超过了上传文件的最大值，请上传2M以下文件&quot;;break;case 2:echo &quot;上传文件过多，请一次上传20个及以下文件！&quot;;break;case 3:echo &quot;文件并未完全上传，请再次尝试！&quot;;break;case 4:echo &quot;未选择上传文件！&quot;;break;case 5:echo &quot;上传文件为0&quot;;break;}}</code></pre><p>先把print_r($_FILES)这个信息看一下</p><pre><code>Array([myFile] =&gt; Array([name] =&gt; 梁博_简历.doc[type] =&gt; application/msword[tmp_name] =&gt; D:\wamp\tmp\php1D78.tmp[error] =&gt; 0[size] =&gt; 75776))</code></pre><p>所以得到的是个二维数组，该怎么用，都是基本的东西（其实我喜欢降维再用）；</p><p>基本是一眼就懂的东西，不罗嗦，关键有两个：tmp_name临时文件名；error报错信息（代号，后面可以利用）；</p><p>然后这里看一下doAction后面一部分，利用报错信息来反馈给用户，需要说明的是为什么报错，和报错信息是什么都；</p><h3 id="1-3-关于报错"><a href="#1-3-关于报错" class="headerlink" title="1.3 关于报错"></a>1.3 关于报错</h3><p>–报错原因</p><pre><code>基本上都是超过或者不符合服务器关于上传文件的配置，那么服务器端配置有哪些呢？</code></pre><p>先考虑上传我们用了什么？POST，upload</p><p>所以在php.ini中找这么几项：</p><pre><code>file_upload:Onupload_tmp_dir=——临时文件保存目录；upload_max_filesize=2Mmax_file_uploads=20——允许一次上传的最大文件数量（注意和上面那个的区别，有没有size，别乱想）post_max_size=8M——post方式发送数据的最大值</code></pre><p>其他相关配置</p><pre><code>max_exectuion_time=-1——最大执行时间，避免程序不好占用服务器资源；max_input_time=60max_input_nesting_level=64——输入嵌套深度；memory_limit=128M——最大单线程的独立内存使用量</code></pre><p>总之都是有关资源的配置。</p><p>–错误号</p><p>以下（偷懒）引自<a href="http://blog.sina.com.cn/s/blog_3cdfaea201008utf.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_3cdfaea201008utf.html</a></p><pre><code>UPLOAD_ERR_OK             值：0; 没有错误发生，文件上传成功。UPLOAD_ERR_INI_SIZE      值：1; 上传的文件超过了 php.ini 中 upload_max_filesize 选项限制的值。UPLOAD_ERR_FORM_SIZE  值：2; 上传文件的大小超过了 HTML 表单中 MAX_FILE_SIZE 选项指定的值。UPLOAD_ERR_PARTIAL          值：3; 文件只有部分被上传。UPLOAD_ERR_NO_FILE          值：4; 没有文件被上传。 </code></pre><blockquote><p>注意：这个错误信息是第一步上传的信息，也就是上传到临时文件夹的情况，而不是move或者copy的情况。</p></blockquote><h2 id="二、上传相关限制"><a href="#二、上传相关限制" class="headerlink" title="二、上传相关限制"></a>二、上传相关限制</h2><h3 id="2-1-客户端限制"><a href="#2-1-客户端限制" class="headerlink" title="2.1 客户端限制"></a>2.1 客户端限制</h3><pre><code>&lt;form action=&quot;doAction2.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;&lt;input type=&quot;hidden&quot; name=&quot;MAX_FILE_SIZE&quot; value=&quot;101321&quot; /&gt;请选择您要上传的文件：&lt;input type=&quot;file&quot; name=&quot;myFile&quot; accept=&quot;image/jpeg,image/gif,text/html&quot;/&gt;&lt;br/&gt;&lt;input type=&quot;submit&quot; value=&quot;上传&quot;/&gt;&lt;/form&gt;</code></pre><p>这里用input的属性对上传文件的大小和类型进行了限制，但是个人感觉：一，html代码是“可见的”；二，常不起作用（没找到原因，但因为第一个我也想放弃它，知道就好。</p><p>2.2 服务器端限制</p><p>主要限制大小和类型，再有就是方式。</p><pre><code>&lt;?phpheader(&apos;content-type:text/html;charset=utf-8&apos;);//接受文件，临时文件信息$fileinfo=$_FILES[&quot;myFile&quot;];//降维操作$filename=$fileinfo[&quot;name&quot;];$tmp_name=$fileinfo[&quot;tmp_name&quot;];$size=$fileinfo[&quot;size&quot;];$error=$fileinfo[&quot;error&quot;];$type=$fileinfo[&quot;type&quot;];//服务器端设定限制$maxsize=10485760;//10M,10*1024*1024$allowExt=array(&apos;jpeg&apos;,&apos;jpg&apos;,&apos;png&apos;,&apos;tif&apos;);//允许上传的文件类型（拓展名$ext=pathinfo($filename,PATHINFO_EXTENSION);//提取上传文件的拓展名//目的信息$path=&quot;uploads&quot;;if (!file_exists($path)) {  //当目录不存在，就创建目录mkdir($path,0777,true);chmod($path, 0777);}//$destination=$path.&quot;/&quot;.$filename;//得到唯一的文件名！防止因为文件名相同而产生覆盖$uniName=md5(uniqid(microtime(true),true)).$ext;//md5加密，uniqid产生唯一id，microtime做前缀if ($error==0) {if ($size&gt;$maxsize) {exit(&quot;上传文件过大！&quot;);}if (!in_array($ext, $allowExt)) {exit(&quot;非法文件类型&quot;);}if (!is_uploaded_file($tmp_name)) {exit(&quot;上传方式有误，请使用post方式&quot;);}if (@move_uploaded_file($tmp_name, $uniName)) {//@错误抑制符，不让用户看到警告echo &quot;文件&quot;.$filename.&quot;上传成功!&quot;;}else{echo &quot;文件&quot;.$filename.&quot;上传失败!&quot;;}//判断是否为真实图片（防止伪装成图片的病毒一类的if (!getimagesize($tmp_name)) {//getimagesize真实返回数组，否则返回falseexit(&quot;不是真正的图片类型&quot;);}}else{switch ($error){case 1:echo &quot;超过了上传文件的最大值，请上传2M以下文件&quot;;break;case 2:echo &quot;上传文件过多，请一次上传20个及以下文件！&quot;;break;case 3:echo &quot;文件并未完全上传，请再次尝试！&quot;;break;case 4:echo &quot;未选择上传文件！&quot;;break;case 7:echo &quot;没有临时文件夹&quot;;break;}}</code></pre><p>这里，具体实现都有注释，每一步其实都可以自己试试的，很有趣。</p><h3 id="2-3-封装"><a href="#2-3-封装" class="headerlink" title="2.3 封装"></a>2.3 封装</h3><p>函数</p><pre><code>&lt;?phpfunction uploadFile($fileInfo,$path,$allowExt,$maxSize){$filename=$fileInfo[&quot;name&quot;];$tmp_name=$fileInfo[&quot;tmp_name&quot;];$size=$fileInfo[&quot;size&quot;];$error=$fileInfo[&quot;error&quot;];$type=$fileInfo[&quot;type&quot;];//服务器端设定限制$ext=pathinfo($filename,PATHINFO_EXTENSION);//目的信息if (!file_exists($path)) {  mkdir($path,0777,true);chmod($path, 0777);}$uniName=md5(uniqid(microtime(true),true)).&apos;.&apos;.$ext;$destination=$path.&quot;/&quot;.$uniName;if ($error==0) {if ($size&gt;$maxSize) {exit(&quot;上传文件过大！&quot;);}if (!in_array($ext, $allowExt)) {exit(&quot;非法文件类型&quot;);}if (!is_uploaded_file($tmp_name)) {exit(&quot;上传方式有误，请使用post方式&quot;);}//判断是否为真实图片（防止伪装成图片的病毒一类的if (!getimagesize($tmp_name)) {//getimagesize真实返回数组，否则返回falseexit(&quot;不是真正的图片类型&quot;);}if (@move_uploaded_file($tmp_name, $destination)) {//@错误抑制符，不让用户看到警告echo &quot;文件&quot;.$filename.&quot;上传成功!&quot;;}else{echo &quot;文件&quot;.$filename.&quot;上传失败!&quot;;}}else{switch ($error){case 1:echo &quot;超过了上传文件的最大值，请上传2M以下文件&quot;;break;case 2:echo &quot;上传文件过多，请一次上传20个及以下文件！&quot;;break;case 3:echo &quot;文件并未完全上传，请再次尝试！&quot;;break;case 4:echo &quot;未选择上传文件！&quot;;break;case 7:echo &quot;没有临时文件夹&quot;;break;}}return $destination;}</code></pre><p>调用</p><pre><code>&lt;?phpheader(&apos;content-type:text/html;charset=utf-8&apos;);$fileInfo=$_FILES[&quot;myFile&quot;];$maxSize=10485760;//10M,10*1024*1024$allowExt=array(&apos;jpeg&apos;,&apos;jpg&apos;,&apos;png&apos;,&apos;tif&apos;);$path=&quot;uploads&quot;;include_once &apos;upFunc.php&apos;;uploadFile($fileInfo, $path, $allowExt, $maxSize);</code></pre><h2 id="三、多文件的上传实现"><a href="#三、多文件的上传实现" class="headerlink" title="三、多文件的上传实现"></a>三、多文件的上传实现</h2><h3 id="3-1-利用单文件封装"><a href="#3-1-利用单文件封装" class="headerlink" title="3.1 利用单文件封装"></a>3.1 利用单文件封装</h3><pre><code>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;&lt;title&gt;Insert title here&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;doAction5.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;请选择您要上传的文件：&lt;input type=&quot;file&quot; name=&quot;myFile1&quot; /&gt;&lt;br/&gt;请选择您要上传的文件：&lt;input type=&quot;file&quot; name=&quot;myFile2&quot; /&gt;&lt;br/&gt;请选择您要上传的文件：&lt;input type=&quot;file&quot; name=&quot;myFile3&quot; /&gt;&lt;br/&gt;请选择您要上传的文件：&lt;input type=&quot;file&quot; name=&quot;myFile4&quot; /&gt;&lt;br/&gt;&lt;input type=&quot;submit&quot; value=&quot;上传&quot;/&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;&lt;?php//print_r($_FILES);header(&apos;content-type:text/html;charset=utf-8&apos;);include_once &apos;upFunc.php&apos;;foreach ($_FILES as $fileInfo){$file[]=uploadFile($fileInfo);}</code></pre><p>这里的思路，从print_r($_FILES)中去找，打印出来看到是个二维数组，很简单，遍历去用就好了！</p><p>上面那个function的定义改一下，给定一些默认值</p><pre><code>function uploadFile($fileInfo,$path=&quot;uploads&quot;,$allowExt=array(&apos;jpeg&apos;,&apos;jpg&apos;,&apos;png&apos;,&apos;tif&apos;),$maxSize=10485760){</code></pre><p>这样子，简单是简单，但遇到一些问题。</p><p>正常的上传4个图片是没问题，但要是中间激活了函数中的exit，就会立即停止，导致其他图片也无法上传。</p><h3 id="3-2-升级版封装"><a href="#3-2-升级版封装" class="headerlink" title="3.2 升级版封装"></a>3.2 升级版封装</h3><p>旨在实现针对多个或单个文件上传的封装</p><p>首先这样子写个静态文件</p><pre><code>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;&lt;title&gt;Insert title here&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;doAction5.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;请选择您要上传的文件：&lt;input type=&quot;file&quot; name=&quot;myFile[]&quot; /&gt;&lt;br/&gt;请选择您要上传的文件：&lt;input type=&quot;file&quot; name=&quot;myFile[]&quot; /&gt;&lt;br/&gt;请选择您要上传的文件：&lt;input type=&quot;file&quot; name=&quot;myFile[]&quot; /&gt;&lt;br/&gt;请选择您要上传的文件：&lt;input type=&quot;file&quot; name=&quot;myFile[]&quot; /&gt;&lt;br/&gt;&lt;input type=&quot;submit&quot; value=&quot;上传&quot;/&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>打印一下$_FILES</p><pre><code>Array([myFile] =&gt; Array([name] =&gt; Array([0] =&gt; test32.png[1] =&gt; test32.png[2] =&gt; 333.png[3] =&gt; test41.png)[type] =&gt; Array([0] =&gt; image/png[1] =&gt; image/png[2] =&gt; image/png[3] =&gt; image/png)[tmp_name] =&gt; Array([0] =&gt; D:\wamp\tmp\php831C.tmp[1] =&gt; D:\wamp\tmp\php834C.tmp[2] =&gt; D:\wamp\tmp\php837C.tmp[3] =&gt; D:\wamp\tmp\php83BB.tmp)[error] =&gt; Array([0] =&gt; 0[1] =&gt; 0[2] =&gt; 0[3] =&gt; 0)[size] =&gt; Array([0] =&gt; 46174[1] =&gt; 46174[2] =&gt; 34196[3] =&gt; 38514)))</code></pre><p>可以得到一个三维数组。</p><p>复杂是复杂了，但复杂的有规律，各项数值都在一起了，很方便我们取值！！</p><p>所以先得到文件信息，变成单文件处理那种信息</p><pre><code>function getFiles(){$i=0;foreach($_FILES as $file){if(is_string($file[&apos;name&apos;])){ //单文件判定$files[$i]=$file;$i++;}elseif(is_array($file[&apos;name&apos;])){foreach($file[&apos;name&apos;] as $key=&gt;$val){ //我的天，这个$key用的diao$files[$i][&apos;name&apos;]=$file[&apos;name&apos;][$key];$files[$i][&apos;type&apos;]=$file[&apos;type&apos;][$key];$files[$i][&apos;tmp_name&apos;]=$file[&apos;tmp_name&apos;][$key];$files[$i][&apos;error&apos;]=$file[&apos;error&apos;][$key];$files[$i][&apos;size&apos;]=$file[&apos;size&apos;][$key];$i++;}}}return $files;}</code></pre><p>然后之前的那种exit错误，就把exit改一下就好了，这里用res</p><pre><code>function uploadFile($fileInfo,$path=&apos;./uploads&apos;,$flag=true,$maxSize=1048576,$allowExt=array(&apos;jpeg&apos;,&apos;jpg&apos;,&apos;png&apos;,&apos;gif&apos;)){//$flag=true;//$allowExt=array(&apos;jpeg&apos;,&apos;jpg&apos;,&apos;gif&apos;,&apos;png&apos;);//$maxSize=1048576;//1M//判断错误号$res=array();if($fileInfo[&apos;error&apos;]===UPLOAD_ERR_OK){//检测上传得到小if($fileInfo[&apos;size&apos;]&gt;$maxSize){$res[&apos;mes&apos;]=$fileInfo[&apos;name&apos;].&apos;上传文件过大&apos;;}$ext=getExt($fileInfo[&apos;name&apos;]);//检测上传文件的文件类型if(!in_array($ext,$allowExt)){$res[&apos;mes&apos;]=$fileInfo[&apos;name&apos;].&apos;非法文件类型&apos;;}//检测是否是真实的图片类型if($flag){if(!getimagesize($fileInfo[&apos;tmp_name&apos;])){$res[&apos;mes&apos;]=$fileInfo[&apos;name&apos;].&apos;不是真实图片类型&apos;;}}//检测文件是否是通过HTTP POST上传上来的if(!is_uploaded_file($fileInfo[&apos;tmp_name&apos;])){$res[&apos;mes&apos;]=$fileInfo[&apos;name&apos;].&apos;文件不是通过HTTP POST方式上传上来的&apos;;}if($res) return $res;//$path=&apos;./uploads&apos;;if(!file_exists($path)){mkdir($path,0777,true);chmod($path,0777);}$uniName=getUniName();$destination=$path.&apos;/&apos;.$uniName.&apos;.&apos;.$ext;if(!move_uploaded_file($fileInfo[&apos;tmp_name&apos;],$destination)){$res[&apos;mes&apos;]=$fileInfo[&apos;name&apos;].&apos;文件移动失败&apos;;}$res[&apos;mes&apos;]=$fileInfo[&apos;name&apos;].&apos;上传成功&apos;;$res[&apos;dest&apos;]=$destination;return $res;}else{//匹配错误信息switch ($fileInfo [&apos;error&apos;]) {case 1 :$res[&apos;mes&apos;] = &apos;上传文件超过了PHP配置文件中upload_max_filesize选项的值&apos;;break;case 2 :$res[&apos;mes&apos;] = &apos;超过了表单MAX_FILE_SIZE限制的大小&apos;;break;case 3 :$res[&apos;mes&apos;] = &apos;文件部分被上传&apos;;break;case 4 :$res[&apos;mes&apos;] = &apos;没有选择上传文件&apos;;break;case 6 :$res[&apos;mes&apos;] = &apos;没有找到临时目录&apos;;break;case 7 :case 8 :$res[&apos;mes&apos;] = &apos;系统错误&apos;;break;}return $res;}}</code></pre><p>里面封装了两个小的</p><pre><code>function getExt($filename){return strtolower(pathinfo($filename,PATHINFO_EXTENSION));}/*** 产生唯一字符串* @return string*/function getUniName(){return md5(uniqid(microtime(true),true));}</code></pre><p>然后静态中，用multiple属性实现多个文件的输入；</p><pre><code>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;&lt;title&gt;Insert title here&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;doAction6.php&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;请选择您要上传的文件：&lt;input type=&quot;file&quot; name=&quot;myFile[]&quot; multiple=&apos;multiple&apos; /&gt;&lt;br/&gt;&lt;input type=&quot;submit&quot; value=&quot;上传&quot;/&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;doAction6&lt;?php //print_r($_FILES);header(&quot;content-type:text/html;charset=utf-8&quot;);require_once &apos;upFunc2.php&apos;;require_once &apos;common.func.php&apos;;$files=getFiles();// print_r($files);foreach($files as $fileInfo){$res=uploadFile($fileInfo);echo $res[&apos;mes&apos;],&apos;&lt;br/&gt;&apos;;$uploadFiles[]=@$res[&apos;dest&apos;];}$uploadFiles=array_values(array_filter($uploadFiles));//print_r($uploadFiles);</code></pre><p>这样子的几个文件，就实现比较强大的面向过程的上传文件的功能（学的叫一个心酸。。。）；</p><h2 id="四、面向对象的文件上传"><a href="#四、面向对象的文件上传" class="headerlink" title="四、面向对象的文件上传"></a>四、面向对象的文件上传</h2><p>（不是很写的动了。。。先粘过来，再说吧。。。</p><pre><code>&lt;?php class upload{protected $fileName;protected $maxSize;protected $allowMime;protected $allowExt;protected $uploadPath;protected $imgFlag;protected $fileInfo;protected $error;protected $ext;/*** @param string $fileName* @param string $uploadPath* @param string $imgFlag* @param number $maxSize* @param array $allowExt* @param array $allowMime*/public function __construct($fileName=&apos;myFile&apos;,$uploadPath=&apos;./uploads&apos;,$imgFlag=true,$maxSize=5242880,$allowExt=array(&apos;jpeg&apos;,&apos;jpg&apos;,&apos;png&apos;,&apos;gif&apos;),$allowMime=array(&apos;image/jpeg&apos;,&apos;image/png&apos;,&apos;image/gif&apos;)){$this-&gt;fileName=$fileName;$this-&gt;maxSize=$maxSize;$this-&gt;allowMime=$allowMime;$this-&gt;allowExt=$allowExt;$this-&gt;uploadPath=$uploadPath;$this-&gt;imgFlag=$imgFlag;$this-&gt;fileInfo=$_FILES[$this-&gt;fileName];}/*** 检测上传文件是否出错* @return boolean*/protected function checkError(){if(!is_null($this-&gt;fileInfo)){if($this-&gt;fileInfo[&apos;error&apos;]&gt;0){switch($this-&gt;fileInfo[&apos;error&apos;]){case 1:$this-&gt;error=&apos;超过了PHP配置文件中upload_max_filesize选项的值&apos;;break;case 2:$this-&gt;error=&apos;超过了表单中MAX_FILE_SIZE设置的值&apos;;break;case 3:$this-&gt;error=&apos;文件部分被上传&apos;;break;case 4:$this-&gt;error=&apos;没有选择上传文件&apos;;break;case 6:$this-&gt;error=&apos;没有找到临时目录&apos;;break;case 7:$this-&gt;error=&apos;文件不可写&apos;;break;case 8:$this-&gt;error=&apos;由于PHP的扩展程序中断文件上传&apos;;break;}return false;}else{return true;}}else{$this-&gt;error=&apos;文件上传出错&apos;;return false;}}/*** 检测上传文件的大小* @return boolean*/protected function checkSize(){if($this-&gt;fileInfo[&apos;size&apos;]&gt;$this-&gt;maxSize){$this-&gt;error=&apos;上传文件过大&apos;;return false;}return true;}/*** 检测扩展名* @return boolean*/protected function checkExt(){$this-&gt;ext=strtolower(pathinfo($this-&gt;fileInfo[&apos;name&apos;],PATHINFO_EXTENSION));if(!in_array($this-&gt;ext,$this-&gt;allowExt)){$this-&gt;error=&apos;不允许的扩展名&apos;;return false;}return true;}/*** 检测文件的类型* @return boolean*/protected function checkMime(){if(!in_array($this-&gt;fileInfo[&apos;type&apos;],$this-&gt;allowMime)){$this-&gt;error=&apos;不允许的文件类型&apos;;return false;}return true;}/*** 检测是否是真实图片* @return boolean*/protected function checkTrueImg(){if($this-&gt;imgFlag){if(!@getimagesize($this-&gt;fileInfo[&apos;tmp_name&apos;])){$this-&gt;error=&apos;不是真实图片&apos;;return false;}return true;}}/*** 检测是否通过HTTP POST方式上传上来的* @return boolean*/protected function checkHTTPPost(){if(!is_uploaded_file($this-&gt;fileInfo[&apos;tmp_name&apos;])){$this-&gt;error=&apos;文件不是通过HTTP POST方式上传上来的&apos;;return false;}return true;}/***显示错误 */protected function showError(){exit(&apos;&lt;span style=&quot;color:red&quot;&gt;&apos;.$this-&gt;error.&apos;&lt;/span&gt;&apos;);}/*** 检测目录不存在则创建*/protected function checkUploadPath(){if(!file_exists($this-&gt;uploadPath)){mkdir($this-&gt;uploadPath,0777,true);}}/*** 产生唯一字符串* @return string*/protected function getUniName(){return md5(uniqid(microtime(true),true));}/*** 上传文件* @return string*/public function uploadFile(){if($this-&gt;checkError()&amp;&amp;$this-&gt;checkSize()&amp;&amp;$this-&gt;checkExt()&amp;&amp;$this-&gt;checkMime()&amp;&amp;$this-&gt;checkTrueImg()&amp;&amp;$this-&gt;checkHTTPPost()){$this-&gt;checkUploadPath();$this-&gt;uniName=$this-&gt;getUniName();$this-&gt;destination=$this-&gt;uploadPath.&apos;/&apos;.$this-&gt;uniName.&apos;.&apos;.$this-&gt;ext;if(@move_uploaded_file($this-&gt;fileInfo[&apos;tmp_name&apos;], $this-&gt;destination)){return $this-&gt;destination;}else{$this-&gt;error=&apos;文件移动失败&apos;;$this-&gt;showError();}}else{$this-&gt;showError();}}}&lt;?php header(&apos;content-type:text/html;charset=utf-8&apos;);require_once &apos;upload.class.php&apos;;$upload=new upload(&apos;myFile1&apos;,&apos;imooc&apos;);$dest=$upload-&gt;uploadFile();echo $dest;</code></pre><h2 id="五、下载"><a href="#五、下载" class="headerlink" title="五、下载"></a>五、下载</h2><p>对于浏览器不识别的，可以直接下载，但对于能识别的，需要多一两步</p><pre><code>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;&lt;title&gt;Insert title here&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;a href=&quot;1.rar&quot;&gt;下载1.rar&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;1.jpg&quot;&gt;下载1.jpg&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;doDownload.php?filename=1.jpg&quot;&gt;通过程序下载1.jpg&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;doDownload.php?filename=../upload/nv.jpg&quot;&gt;下载nv.jpg&lt;/a&gt;&lt;?php?&gt;&lt;/body&gt;&lt;/html&gt;&lt;?php $filename=$_GET[&apos;filename&apos;];header(&apos;content-disposition:attachment;filename=&apos;.basename($filename));header(&apos;content-length:&apos;.filesize($filename));readfile($filename);</code></pre><p>——————总结———————–</p><p><form action="doAction.php" method="post" enctype="multipart/form-data"></form></p><p><input type="file" name="myFile"><br></p><pre><code>二维数组的降维处理；$_FILES变量move_upload_file();copy();tmp_name临时文件；拓展名的提取；真实图片的验证；唯一文件名的生成；函数封装以及调用；利用单个文件函数实现多文件上传；小功能的封装；多文件的遍历；面向对象的开发过程；</code></pre>]]></content>
    
    <summary type="html">
    
      关于PHP上传和下载的原理一句话总结就是：将客户端文件上传到服务器端，再将服务器端的文件（临时文件）移动到指定目录即可。......
    
    </summary>
    
      <category term="PHP" scheme="https://icocos.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://icocos.github.io/tags/PHP/"/>
    
      <category term="文件上传下载原理与配置" scheme="https://icocos.github.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD%E5%8E%9F%E7%90%86%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>PHP第二十三篇——文件上传下载实战</title>
    <link href="https://icocos.github.io/2018/12/17/PHP%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%89%E7%AF%87%E2%80%94%E2%80%94%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD%E5%AE%9E%E6%88%98/"/>
    <id>https://icocos.github.io/2018/12/17/PHP第二十三篇——文件上传下载实战/</id>
    <published>2018-12-17T15:32:05.000Z</published>
    <updated>2019-03-01T10:38:25.089Z</updated>
    
    <content type="html"><![CDATA[<p>既然涉及到PHP开发APP接口，文件上传和下载是在所难免的，也许有些人会考虑第三方的，比如七牛，但是学习和使用终究还是要会的，所以，所以……</p><a id="more"></a><h2 id="文件上传下载实战"><a href="#文件上传下载实战" class="headerlink" title="文件上传下载实战"></a>文件上传下载实战</h2><p>以前一直在做iOS，最近转行去搞php开发，总觉得力不从心。这几天有个需求，是关于php的文件上传和下载的。给大家分享下自己的学习资料。</p><h3 id="1-先来个请求页面upload-html"><a href="#1-先来个请求页面upload-html" class="headerlink" title="1.先来个请求页面upload.html"></a>1.先来个请求页面upload.html</h3><pre><code>&lt;html&gt;  &lt;head&gt;  &lt;title&gt;Administration - upload new files&lt;/title&gt;  &lt;/head&gt;  &lt;body&gt;  &lt;h1&gt;Upload new news files&lt;/h1&gt;  &lt;form enctype=&quot;multipart/form-data&quot; action=&quot;upload.php&quot; method=post&gt;  &lt;input type=&quot;hidden&quot; name=&quot;MAX_FILE_SIZE&quot; value=&quot;1000000&quot;&gt;  Upload this file: &lt;input name=&quot;userfile&quot; type=&quot;file&quot;&gt;  &lt;input type=&quot;submit&quot; value=&quot;Send File&quot;&gt;  &lt;/form&gt;  &lt;/body&gt;  &lt;/html&gt;  </code></pre><h3 id="2-php处理客户端请求的数据upload-html"><a href="#2-php处理客户端请求的数据upload-html" class="headerlink" title="2.php处理客户端请求的数据upload.html"></a>2.php处理客户端请求的数据upload.html</h3><pre><code>&lt;html&gt;  &lt;head&gt;  &lt;title&gt;Uploading...&lt;/title&gt;  &lt;/head&gt;  &lt;body&gt;  &lt;h1&gt;Uploading file...&lt;/h1&gt;  &lt;?php  //Check to see if an error code was generated on the upload attempt  if ($_FILES[&apos;userfile&apos;][&apos;error&apos;] &gt; 0)  {  echo &apos;Problem: &apos;;  switch ($_FILES[&apos;userfile&apos;][&apos;error&apos;])  {  case 1:   echo &apos;File exceeded upload_max_filesize&apos;;  break;  case 2:   echo &apos;File exceeded max_file_size&apos;;  break;  case 3:   echo &apos;File only partially uploaded&apos;;  break;  case 4:   echo &apos;No file uploaded&apos;;  break;  case 6:   echo &apos;Cannot upload file: No temp directory specified.&apos;;  break;  case 7:   echo &apos;Upload failed: Cannot write to disk.&apos;;  break;  }  exit;  }  // Does the file have the right MIME type?  if ($_FILES[&apos;userfile&apos;][&apos;type&apos;] != &apos;text/plain&apos;)  {  echo &apos;Problem: file is not plain text&apos;;  exit;  }  // put the file where we&apos;d like it  $upfile = &apos;/uploads/&apos;.$_FILES[&apos;userfile&apos;][&apos;name&apos;];  if (is_uploaded_file($_FILES[&apos;userfile&apos;][&apos;tmp_name&apos;]))   {  if (!move_uploaded_file($_FILES[&apos;userfile&apos;][&apos;tmp_name&apos;], $upfile))  {  echo &apos;Problem: Could not move file to destination directory&apos;;  exit;  }  }   else   {  echo &apos;Problem: Possible file upload attack. Filename: &apos;;  echo $_FILES[&apos;userfile&apos;][&apos;name&apos;];  exit;  }  echo &apos;File uploaded successfully&lt;br&gt;&lt;br&gt;&apos;;   // reformat the file contents  $fp = fopen($upfile, &apos;r&apos;);  $contents = fread ($fp, filesize ($upfile));  fclose ($fp);  $contents = strip_tags($contents);  $fp = fopen($upfile, &apos;w&apos;);  fwrite($fp, $contents);  fclose($fp);  // show what was uploaded  echo &apos;Preview of uploaded file contents:&lt;br&gt;&lt;hr&gt;&apos;;  echo $contents;  echo &apos;&lt;br&gt;&lt;hr&gt;&apos;;  ?&gt;  &lt;/body&gt;  &lt;/html&gt;  </code></pre><h3 id="3-php文件下载"><a href="#3-php文件下载" class="headerlink" title="3.php文件下载"></a>3.php文件下载</h3><pre><code>&lt;?php  $filePath = &quot;template/&quot;;//此处给出你下载的文件在服务器的什么地方  $fileName = &quot;template.xls&quot;;  //此处给出你下载的文件名  $file = fopen($filePath . $fileName, &quot;r&quot;); //   打开文件  //输入文件标签  Header(&quot;Content-type:application/octet-stream &quot;);  Header(&quot;Accept-Ranges:bytes &quot;);  Header(&quot;Accept-Length:   &quot; . filesize($filePath . $fileName));  Header(&quot;Content-Disposition:   attachment;   filename= &quot; . $fileName);  //   输出文件内容  echo fread($file, filesize($filePath . $fileName));  fclose($file);  exit;  ?&gt;  </code></pre><blockquote><p>总的来说，上面的3个代码段只是简单介绍了php文件的上传下载，还有很多问题要解决，就例如上传大文件的时候怎么处理，批量上传、大文件下载等等问题。当然跟java一样，php也有很多框架可以解决这方面。</p></blockquote>]]></content>
    
    <summary type="html">
    
      既然涉及到PHP开发APP接口，文件上传和下载是在所难免的，也许有些人会考虑第三方的，比如七牛，但是学习和使用终究还是要会的，所以，所以......
    
    </summary>
    
      <category term="PHP" scheme="https://icocos.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://icocos.github.io/tags/PHP/"/>
    
      <category term="文件上传下载实战" scheme="https://icocos.github.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>PHP第二十二篇——数据库优化的八种方式</title>
    <link href="https://icocos.github.io/2018/12/15/PHP%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%8C%E7%AF%87%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96%E7%9A%84%E5%85%AB%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    <id>https://icocos.github.io/2018/12/15/PHP第二十二篇——数据库优化的八种方式/</id>
    <published>2018-12-15T14:20:59.000Z</published>
    <updated>2019-03-01T10:38:53.944Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据库优化的八种方式"><a href="#数据库优化的八种方式" class="headerlink" title="数据库优化的八种方式"></a>数据库优化的八种方式</h2><h2 id="引言："><a href="#引言：" class="headerlink" title="引言："></a>引言：</h2><p>关于数据库优化，网上有不少资料和方法，但是不少质量参差不齐，有些总结的不够到位，内容冗杂<br>偶尔发现了这篇文章，总结得很经典，文章流量也很大，所以拿到自己的总结文集中，积累优质文章，提升个人能力，希望对大家今后开发中也有帮助</p><a id="more"></a><h3 id="选取最适用的字段属性"><a href="#选取最适用的字段属性" class="headerlink" title="选取最适用的字段属性"></a>选取最适用的字段属性</h3><pre><code>MySQL可以很好的支持大数据量的存取，但是一般说来，数据库中的表越小，在它上面执行的查询也就会越快。因此，在创建表的时候，为了获得更好的性能，我们可以将表中字段的宽度设得尽可能小。</code></pre><p>例如，在定义邮政编码这个字段时，如果将其设置为CHAR(255),显然给数据库增加了不必要的空间，甚至使用VARCHAR这种类型也是多余的，因为CHAR(6)就可以很好的完成任务了。同样的，如果可以的话，我们应该使用MEDIUMINT而不是BIGIN来定义整型字段。</p><p>另外一个提高效率的方法是在可能的情况下，应该尽量把字段设置为NOTNULL，这样在将来执行查询的时候，数据库不用去比较NULL值。<br>对于某些文本字段，例如“省份”或者“性别”，我们可以将它们定义为ENUM类型。因为在MySQL中，ENUM类型被当作数值型数据来处理，而数值型数据被处理起来的速度要比文本类型快得多。这样，我们又可以提高数据库的性能。</p><h3 id="使用连接（JOIN）来代替子查询-Sub-Queries"><a href="#使用连接（JOIN）来代替子查询-Sub-Queries" class="headerlink" title="使用连接（JOIN）来代替子查询(Sub-Queries)"></a>使用连接（JOIN）来代替子查询(Sub-Queries)</h3><p>MySQL从4.1开始支持SQL的子查询。这个技术可以使用SELECT语句来创建一个单列的查询结果，然后把这个结果作为过滤条件用在另一个查询中。例如，我们要将客户基本信息表中没有任何订单的客户删除掉，就可以利用子查询先从销售信息表中将所有发出订单的客户ID取出来，然后将结果传递给主查询，如下所示：</p><pre><code>DELETEFROMcustomerinfoWHERECustomerIDNOTin(SELECTCustomerIDFROMsalesinfo)</code></pre><p>使用子查询可以一次性的完成很多逻辑上需要多个步骤才能完成的SQL操作，同时也可以避免事务或者表锁死，并且写起来也很容易。但是，有些情况下，子查询可以被更有效率的连接（JOIN）..替代。例如，假设我们要将所有没有订单记录的用户取出来，可以用下面这个查询完成：</p><pre><code>SELECT*FROMcustomerinfoWHERECustomerIDNOTin(SELECTCustomerIDFROMsalesinfo)</code></pre><p>如果使用连接（JOIN）..来完成这个查询工作，速度将会快很多。尤其是当salesinfo表中对CustomerID建有索引的话，性能将会更好，查询如下：</p><pre><code>SELECT*FROMcustomerinfoLEFTJOINsalesinfoONcustomerinfo.CustomerID=salesinfo.CustomerIDWHEREsalesinfo.CustomerIDISNULL</code></pre><p>连接（JOIN）..之所以更有效率一些，是因为MySQL不需要在内存中创建临时表来完成这个逻辑上的需要两个步骤的查询工作。</p><h3 id="使用联合-UNION-来代替手动创建的临时表"><a href="#使用联合-UNION-来代替手动创建的临时表" class="headerlink" title="使用联合(UNION)来代替手动创建的临时表"></a>使用联合(UNION)来代替手动创建的临时表</h3><p>MySQL从4.0的版本开始支持union查询，它可以把需要使用临时表的两条或更多的select查询合并的一个查询中。在客户端的查询会话结束的时候，临时表会被自动删除，从而保证数据库整齐、高效。使用union来创建查询的时候，我们只需要用UNION作为关键字把多个select语句连接起来就可以了，要注意的是所有select语句中的字段数目要想同。下面的例子就演示了一个使用UNION的查询。</p><pre><code>SELECTName,PhoneFROMclientUNIONSELECTName,BirthDateFROMauthorUNIONSELECTName,SupplierFROMproduct</code></pre><h3 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h3><p>尽管我们可以使用子查询（Sub-Queries）、连接（JOIN）和联合（UNION）来创建各种各样的查询，但不是所有的数据库操作都可以只用一条或少数几条SQL语句就可以完成的。更多的时候是需要用到一系列的语句来完成某种工作。但是在这种情况下，当这个语句块中的某一条语句运行出错的时候，整个语句块的操作就会变得不确定起来。设想一下，要把某个数据同时插入两个相关联的表中，可能会出现这样的情况：第一个表中成功更新后，数据库突然出现意外状况，造成第二个表中的操作没有完成，这样，就会造成数据的不完整，甚至会破坏数据库中的数据。要避免这种情况，就应该使用事务，它的作用是：要么语句块中每条语句都操作成功，要么都失败。换句话说，就是可以保持数据库中数据的一致性和完整性。事物以BEGIN关键字开始，COMMIT关键字结束。在这之间的一条SQL操作失败，那么，ROLLBACK命令就可以把数据库恢复到BEGIN开始之前的状态。</p><pre><code>BEGIN; INSERTINTOsalesinfoSETCustomerID=14;UPDATEinventorySETQuantity=11WHEREitem=&apos;book&apos;;COMMIT;</code></pre><p>事务的另一个重要作用是当多个用户同时使用相同的数据源时，它可以利用锁定数据库的方法来为用户提供一种安全的访问方式，这样可以保证用户的操作不被其它的用户所干扰。</p><h3 id="锁定表"><a href="#锁定表" class="headerlink" title="锁定表"></a>锁定表</h3><pre><code>尽管事务是维护数据库完整性的一个非常好的方法，但却因为它的独占性，有时会影响数据库的性能，尤其是在很大的应用系统中。由于在事务执行的过程中，数据库将会被锁定，因此其它的用户请求只能暂时等待直到该事务结束。如果一个数据库系统只有少数几个用户来使用，事务造成的影响不会成为一个太大的问题；但假设有成千上万的用户同时访问一个数据库系统，例如访问一个电子商务网站，就会产生比较严重的响应延迟。</code></pre><p>其实，有些情况下我们可以通过锁定表的方法来获得更好的性能。下面的例子就用锁定表的方法来完成前面一个例子中事务的功能。</p><pre><code>LOCKTABLEinventoryWRITESELECTQuantityFROMinventoryWHEREItem=&apos;book&apos;;...UPDATEinventorySETQuantity=11WHEREItem=&apos;book&apos;;UNLOCKTABLES</code></pre><p>这里，我们用一个select语句取出初始数据，通过一些计算，用update语句将新值更新到表中。包含有WRITE关键字的LOCKTABLE语句可以保证在UNLOCKTABLES命令被执行之前，不会有其它的访问来对inventory进行插入、更新或者删除的操作。</p><h3 id="使用外键"><a href="#使用外键" class="headerlink" title="使用外键"></a>使用外键</h3><pre><code>锁定表的方法可以维护数据的完整性，但是它却不能保证数据的关联性。这个时候我们就可以使用外键。</code></pre><p>例如，外键可以保证每一条销售记录都指向某一个存在的客户。在这里，外键可以把customerinfo表中的CustomerID映射到salesinfo表中CustomerID，任何一条没有合法CustomerID的记录都不会被更新或插入到salesinfo中。</p><pre><code>CREATETABLEcustomerinfo( CustomerIDINTNOTNULL,PRIMARYKEY(CustomerID))TYPE=INNODB;CREATETABLEsalesinfo( SalesIDINTNOTNULL,CustomerIDINTNOTNULL,PRIMARYKEY(CustomerID,SalesID),FOREIGNKEY(CustomerID)REFERENCEScustomerinfo(CustomerID)ONDELETECASCADE)TYPE=INNODB;</code></pre><blockquote><p>注意例子中的参数“ONDELETECASCADE”。该参数保证当customerinfo表中的一条客户记录被删除的时候，salesinfo表中所有与该客户相关的记录也会被自动删除。如果要在MySQL中使用外键，一定要记住在创建表的时候将表的类型定义为事务安全表InnoDB类型。该类型不是MySQL表的默认类型。定义的方法是在CREATETABLE语句中加上TYPE=INNODB。如例中所示。</p></blockquote><h3 id="使用索引"><a href="#使用索引" class="headerlink" title="使用索引"></a>使用索引</h3><pre><code>索引是提高数据库性能的常用方法，它可以令数据库服务器以比没有索引快得多的速度检索特定的行，尤其是在查询语句当中包含有MAX(),MIN()和ORDERBY这些命令的时候，性能提高更为明显。</code></pre><p>那该对哪些字段建立索引呢？</p><pre><code>一般说来，索引应建立在那些将用于JOIN,WHERE判断和ORDERBY排序的字段上。尽量不要对数据库中某个含有大量重复的值的字段建立索引。对于一个ENUM类型的字段来说，出现大量重复值是很有可能的情况</code></pre><blockquote><p>例如customerinfo中的“province”..字段，在这样的字段上建立索引将不会有什么帮助；相反，还有可能降低数据库的性能。我们在创建表的时候可以同时创建合适的索引，也可以使用ALTERTABLE或CREATEINDEX在以后创建索引。此外，MySQL从版本3.23.23开始支持全文索引和搜索。全文索引在MySQL中是一个FULLTEXT类型索引，但仅能用于MyISAM类型的表。对于一个大的数据库，将数据装载到一个没有FULLTEXT索引的表中，然后再使用ALTERTABLE或CREATEINDEX创建索引，将是非常快的。但如果将数据装载到一个已经有FULLTEXT索引的表中，执行过程将会非常慢。</p></blockquote><h3 id="优化的查询语句"><a href="#优化的查询语句" class="headerlink" title="优化的查询语句"></a>优化的查询语句</h3><p>绝大多数情况下，使用索引可以提高查询的速度，但如果SQL语句使用不恰当的话，索引将无法发挥它应有的作用。</p><p>下面是应该注意的几个方面。</p><pre><code>首先，最好是在相同类型的字段间进行比较的操作。</code></pre><p>在MySQL3.23版之前，这甚至是一个必须的条件。例如不能将一个建有索引的INT字段和BIGINT字段进行比较；但是作为特殊的情况，在CHAR类型的字段和VARCHAR类型字段的字段大小相同的时候，可以将它们进行比较。</p><pre><code>其次，在建有索引的字段上尽量不要使用函数进行操作。</code></pre><p>例如，在一个DATE类型的字段上使用YEAE()函数时，将会使索引不能发挥应有的作用。所以，下面的两个查询虽然返回的结果一样，但后者要比前者快得多。</p><pre><code>第三，在搜索字符型字段时，我们有时会使用LIKE关键字和通配符，这种做法虽然简单，但却也是以牺牲系统性能为代价的。</code></pre><p>例如下面的查询将会比较表中的每一条记录。</p><pre><code>SELECT*FROMbooksWHEREnamelike&quot;MySQL%&quot;</code></pre><p>但是如果换用下面的查询，返回的结果一样，但速度就要快上很多：</p><pre><code>SELECT*FROMbooksWHEREname＞=&quot;MySQL&quot;andname＜&quot;MySQM&quot;</code></pre><p>最后，应该注意避免在查询中让MySQL进行自动类型转换，因为转换过程也会使索引变得不起作用。</p>]]></content>
    
    <summary type="html">
    
      PHP——数据库优化的八种方式....
    
    </summary>
    
      <category term="PHP" scheme="https://icocos.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://icocos.github.io/tags/PHP/"/>
    
      <category term="数据库优化的八种方式" scheme="https://icocos.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96%E7%9A%84%E5%85%AB%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>PHP第二十一篇——数据库操作</title>
    <link href="https://icocos.github.io/2018/12/15/PHP%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E7%AF%87%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/"/>
    <id>https://icocos.github.io/2018/12/15/PHP第二十一篇——数据库操作/</id>
    <published>2018-12-15T11:30:21.000Z</published>
    <updated>2019-03-01T10:38:01.539Z</updated>
    
    <content type="html"><![CDATA[<p>关于数据库操作，在PHP开发中可谓是重中之重，其他开发想iOS，Android如果只是做一个简单的App可以不用对数据库操作，但是PHP开发中没有数据库操作就等于一尊雕塑，PHP中数据库首选MYSql，不用问为什么，因为他们是天合之作，谁用谁知道……</p><a id="more"></a><h2 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h2><h2 id="PHP支持的数据库"><a href="#PHP支持的数据库" class="headerlink" title="PHP支持的数据库"></a>PHP支持的数据库</h2><pre><code>PHP通过安装相应的扩展来实现数据库操作，现代应用程序的设计离不开数据库的应用，当前主流的数据库有MsSQL，MySQL，Sybase，Db2，Oracle，PostgreSQL，Access等，这些数据库PHP都能够安装扩展来支持，一般情况下常说的LAMP架构指的是：Linux、Apache、Mysql、PHP，因此Mysql数据库在PHP中的应用非常广泛，我们会在本章中简单的了解Mysql的操作方法。</code></pre><h2 id="数据库拓展"><a href="#数据库拓展" class="headerlink" title="数据库拓展"></a>数据库拓展</h2><p>PHP中一个数据库可能有一个或者多个扩展，其中既有官方的，也有第三方提供的。像Mysql常用的扩展有原生的mysql库，也可以使用增强版的mysqli扩展，还可以使用PDO进行连接与操作。</p><p>不同的扩展提供基本相近的操作方法，不同的是可能具备一些新特性，以及操作性能可能会有所不同。</p><p>mysql扩展进行数据库连接的方法：</p><pre><code>$link = mysql_connect(&apos;mysql_host&apos;, &apos;mysql_user&apos;, &apos;mysql_password&apos;);</code></pre><p>mysqli扩展：</p><pre><code>$link = mysqli_connect(&apos;mysql_host&apos;, &apos;mysql_user&apos;, &apos;mysql_password&apos;);</code></pre><p>PDO扩展</p><pre><code>$dsn = &apos;mysql:dbname=testdb;host=127.0.0.1&apos;;$user = &apos;dbuser&apos;;$password = &apos;dbpass&apos;;$dbh = new PDO($dsn, $user, $password);</code></pre><h2 id="链接数据库"><a href="#链接数据库" class="headerlink" title="链接数据库"></a>链接数据库</h2><p>PHP要对数据库进行操作，首先要做的是与数据库建立连接，通常我们使用mysql_connect函数进行数据库连接，该函数需要指定数据库的地址，用户名及密码。</p><pre><code>$host = &apos;localhost&apos;;$user = &apos;code1&apos;;$pass = &apos;&apos;;$link = mysql_connect($host, $user, $pass);</code></pre><p>PHP连接数据库的方式类似于直接在命令行下通过进行连接，类似：mysql -hlocalhost -ucode1 -p，当连接成功以后，我们需要选择一个操作的数据库，通过mysql_select_db函数来选择数据库。</p><pre><code>mysql_select_db(&apos;code1&apos;);</code></pre><p>通常我们会先设置一下当前连接使用的字符编码，一般的我们会使用utf8编码。</p><pre><code>mysql_query(&quot;set names &apos;utf8&apos;&quot;);</code></pre><p>通过上面的步骤，我们就与数据库建立了连接，可以进行数据操作了。</p><h2 id="查询数据库"><a href="#查询数据库" class="headerlink" title="查询数据库"></a>查询数据库</h2><p>在数据库建立连接以后就可以进行查询，采用mysql_query加sql语句的形式向数据库发送查询指令。</p><pre><code>$res = mysql_query(&apos;select * from user limit 1&apos;);</code></pre><p>对于查询类的语句会返回一个资源句柄（resource），可以通过该资源获取查询结果集中的数据。</p><pre><code>$row = mysql_fetch_array($res);var_dump($row);</code></pre><p>默认的，PHP使用最近的数据库连接执行查询，但如果存在多个连接的情况，则可以通过参数指令从那个连接中进行查询。</p><pre><code>$link1 = mysql_connect(&apos;127.0.0.1&apos;, &apos;code1&apos;, &apos;&apos;);$link2 = mysql_connect(&apos;127.0.0.1&apos;, &apos;code1&apos;, &apos;&apos;, true); //开启一个新的连接$res = mysql_query(&apos;select * from user limit 1&apos;, $link1); //从第一个连接中查询数据</code></pre><h2 id="插入数据库"><a href="#插入数据库" class="headerlink" title="插入数据库"></a>插入数据库</h2><p>当我们了解了如何使用mysql_query进行数据查询以后，那么类似的，插入数据其实也是通过执行一个sql语句来实现，例如：</p><pre><code>$sql = &quot;insert into user(name, age, class) values(&apos;李四&apos;, 18, &apos;高三一班&apos;)&quot;;mysql_query($sql); //执行插入语句</code></pre><p>通常数据都是存储在变量或者数组中，因此sql语句需要先进行字符串拼接得到。</p><pre><code>$name = &apos;李四&apos;;$age = 18;$class = &apos;高三一班&apos;;$sql = &quot;insert into user(name, age, class) values(&apos;$name&apos;, &apos;$age&apos;, &apos;$class&apos;)&quot;;mysql_query($sql); //执行插入语句</code></pre><p>在mysql中，执行插入语句以后，可以得到自增的主键id,通过PHP的mysql_insert_id函数可以获取该id。</p><pre><code>$uid = mysql_insert_id();</code></pre><p>这个id的作用非常大，通常可以用来判断是否插入成功，或者作为关联ID进行其他的数据操作。</p><h2 id="获取查询结果"><a href="#获取查询结果" class="headerlink" title="获取查询结果"></a>获取查询结果</h2><p>通过前面的章节，我们发现PHP操作数据库跟MySql客户端上操作极为相似，先进行连接，然后执行sql语句，再然后获取我们想要的结果集。</p><p>PHP有多个函数可以获取数据集中的一行数据，最常用的是mysql_fetch_array，可以通过设定参数来更改行数据的下标，默认的会包含数字索引的下标以及字段名的关联索引下标。</p><pre><code>$sql = &quot;select * from user limit 1&quot;;$result = mysql_query($sql);$row = mysql_fetch_array($result);</code></pre><p>可以通过设定参数MYSQL_NUM只获取数字索引数组，等同于mysql_fetch_row函数，如果设定参数为MYSQL_ASSOC则只获取关联索引数组，等同于mysql_fetch_assoc函数。</p><pre><code>$row = mysql_fetch_row($result);$row = mysql_fetch_array($result, MYSQL_NUM); //这两个方法获取的数据是一样的$row = mysql_fetch_assoc($result);$row = mysql_fetch_array($result, MYSQL_ASSOC);</code></pre><p>如果要获取数据集中的所有数据，我们通过循环来遍历整个结果集。</p><pre><code>$data = array();while ($row = mysql_fetch_array($result)) {$data[] = $row;}</code></pre><h2 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h2><p>上一节中，我们了解到通过循环可以获取一个查询的所有数据，在实际应用中，我们并不希望一次性获取数据表中的所有数据，那样性能会非常的低，因此会使用翻页功能，每页仅显示10条或者20条数据。</p><p>通过mysql的limit可以很容易的实现分页，limit m,n表示从m行后取n行数据，在PHP中我们需要构造m与n来实现获取某一页的所有数据。</p><p>假定当前页为$page，每页显示$n条数据，那么m为当前页前面所有的数据，既$m = ($page-1) * $n，在知道了翻页原理以后，那么我们很容易通过构造SQL语句在PHP中实现数据翻页。</p><pre><code>$page = 2;$n = 2;$m = ($page - 1) * $n;$sql = &quot;select * from user limit $m, $n&quot;;$result = mysql_query($sql);//循环获取当前页的数据$data = array();while ($row = mysql_fetch_assoc($result)) {$data[] = $row;}</code></pre><p>在上面的例子中，我们使用了$m与$n变量来表示偏移量与每页数据条数，但我们推荐使用更有意义的变量名来表示，比如$pagesize, $start, $offset等，这样更容易理解，有助于团队协作开发。</p><h2 id="更新与删除"><a href="#更新与删除" class="headerlink" title="更新与删除"></a>更新与删除</h2><p>数据的更新与删除相对比较简单，只需要构建好相应的sql语句，然后调用mysql_query执行就能完成相应的更新与删除操作。</p><pre><code>$sql = &quot;update user set name = &apos;曹操&apos; where id=2 limit 1&quot;;if (mysql_query($sql)) {echo &apos;更新成功&apos;;}</code></pre><p>同样的删除可以使用类似以下的代码：</p><pre><code>$sql = &quot;delete from user where id=2 limit 1&quot;;if (mysql_query($sql)) {echo &apos;删除成功&apos;;}</code></pre><p>对于删除与更新操作，可以通过mysql_affected_rows函数来获取更新过的数据行数，如果数据没有变化，则结果为0。</p><pre><code>$sql = &quot;update user set name = &apos;曹操&apos; where id=2 limit 1&quot;;if (mysql_query($sql)) {echo mysql_affected_rows();}</code></pre><h2 id="关闭数据库"><a href="#关闭数据库" class="headerlink" title="关闭数据库"></a>关闭数据库</h2><p>当数据库操作完成以后，可以使用mysql_close关闭数据库连接，默认的，当PHP执行完毕以后，会自动的关闭数据库连接。</p><pre><code>mysql_close();</code></pre><p>虽然PHP会自动关闭数据库连接，一般情况下已经满足需求，但是在对性能要求比较高的情况下，可以在进行完数据库操作之后尽快关闭数据库连接，以节省资源，提高性能。</p><p>在存在多个数据库连接的情况下，可以设定连接资源参数来关闭指定的数据库连接。</p><pre><code>$link = mysql_connect($host, $user, $pass);mysql_close($link);</code></pre><blockquote><p>关于数据库的操作这里只是简单的整理一下，后期或抽出专门的时间，使用专门的章节详细介绍使用与实战数据库的操作。</p></blockquote>]]></content>
    
    <summary type="html">
    
      关于数据库操作，在PHP开发中可谓是重中之重，其他开发想iOS，Android如果只是做一个简单的App可以不用对数据库操作，但是PHP开发中没有数据库操作就等于一尊雕塑，PHP中数据库首选MYSql，不用问为什么，因为他们是天合之作，谁用谁知道......
    
    </summary>
    
      <category term="PHP" scheme="https://icocos.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://icocos.github.io/tags/PHP/"/>
    
      <category term="数据库操作" scheme="https://icocos.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
</feed>
